LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE TYPE widget (                                                  +
    internallength = 24,                                                          +
    input = widget_in,                                                            +
    output = widget_out,                                                          +
    typmod_in = numerictypmodin,                                                  +
    typmod_out = numerictypmodout,                                                +
    alignment = double                                                            +
 );
 statement: CREATE TYPE city_budget (                                             +
    internallength = 16,                                                          +
    input = int44in,                                                              +
    output = int44out,                                                            +
    element = int4,                                                               +
    category = 'x',                                                               +
    preferred = true                                                              +
 );
 statement: CREATE TYPE shell;
 statement: CREATE TYPE shell;
 statement: DROP TYPE shell;
 statement: DROP TYPE shell;
 statement: CREATE TYPE myshell;
 statement: CREATE TYPE int42;
 statement: CREATE TYPE text_w_default;
 statement: CREATE FUNCTION int42_in(cstring)                                     +
    RETURNS int42                                                                 +
    AS 'int4in'                                                                   +
    LANGUAGE internal STRICT IMMUTABLE;
 statement: CREATE FUNCTION int42_out(int42)                                      +
    RETURNS cstring                                                               +
    AS 'int4out'                                                                  +
    LANGUAGE internal STRICT IMMUTABLE;
 statement: CREATE FUNCTION text_w_default_in(cstring)                            +
    RETURNS text_w_default                                                        +
    AS 'textin'                                                                   +
    LANGUAGE internal STRICT IMMUTABLE;
 statement: CREATE FUNCTION text_w_default_out(text_w_default)                    +
    RETURNS cstring                                                               +
    AS 'textout'                                                                  +
    LANGUAGE internal STRICT IMMUTABLE;
 statement: CREATE TYPE int42 (                                                   +
    internallength = 4,                                                           +
    input = int42_in,                                                             +
    output = int42_out,                                                           +
    alignment = int4,                                                             +
    default = 42,                                                                 +
    passedbyvalue                                                                 +
 );
 statement: CREATE TYPE text_w_default (                                          +
    internallength = variable,                                                    +
    input = text_w_default_in,                                                    +
    output = text_w_default_out,                                                  +
    alignment = int4,                                                             +
    default = 'zippo'                                                             +
 );
 statement: CREATE TABLE default_test (f1 text_w_default, f2 int42);
 statement: INSERT INTO default_test DEFAULT VALUES;
 statement: SELECT * FROM default_test;
 statement: CREATE TYPE default_test_row AS (f1 text_w_default, f2 int42);
 statement: CREATE FUNCTION get_default_test() RETURNS SETOF default_test_row AS '+
   SELECT * FROM default_test;                                                    +
 ' LANGUAGE SQL;
 statement: SELECT * FROM get_default_test();
 statement: COMMENT ON TYPE bad IS 'bad comment';
 statement: COMMENT ON TYPE default_test_row IS 'good comment';
 statement: COMMENT ON TYPE default_test_row IS NULL;
 statement: COMMENT ON COLUMN default_test_row.nope IS 'bad comment';
 statement: COMMENT ON COLUMN default_test_row.f1 IS 'good comment';
 statement: COMMENT ON COLUMN default_test_row.f1 IS NULL;
 statement: CREATE TYPE text_w_default;
 statement: DROP TYPE default_test_row CASCADE;
 statement: DROP TABLE default_test;
 statement: CREATE TYPE not_existing_type (INPUT = array_in,                      +
     OUTPUT = array_out,                                                          +
     ELEMENT = int,                                                               +
     INTERNALLENGTH = 32);
 statement: CREATE FUNCTION base_fn_in(cstring) RETURNS opaque AS 'boolin'        +
     LANGUAGE internal IMMUTABLE STRICT;
 statement: CREATE FUNCTION base_fn_out(opaque) RETURNS opaque AS 'boolout'       +
     LANGUAGE internal IMMUTABLE STRICT;
 statement: CREATE TYPE base_type(INPUT = base_fn_in, OUTPUT = base_fn_out);
 statement: DROP FUNCTION base_fn_in(cstring);
 statement: DROP FUNCTION base_fn_out(opaque);
 statement: DROP TYPE base_type;
 statement: DROP TYPE base_type CASCADE;
 statement: CREATE TEMP TABLE mytab (foo widget(42,13,7));
 statement: CREATE TEMP TABLE mytab (foo widget(42,13));
 statement: SELECT format_type(atttypid,atttypmod) FROM pg_attribute              +
 WHERE attrelid = 'mytab'::regclass AND attnum > 0;

