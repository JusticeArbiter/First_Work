LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE TABLE POLYGON_TBL(f1 polygon);
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(2.0,0.0),(2.0,4.0),(0.0,0.0)');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(3.0,1.0),(3.0,3.0),(1.0,0.0)');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,0.0)');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,1.0),(0.0,1.0)');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('0.0');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0 0.0');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2)');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2,3');
 statement: INSERT INTO POLYGON_TBL(f1) VALUES ('asdf');
 statement: SELECT '' AS four, * FROM POLYGON_TBL;
 statement: SELECT '' AS three, p.*                                                                                                +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 && '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS four, p.*                                                                                                 +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 &< '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS two, p.*                                                                                                  +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 &> '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS one, p.*                                                                                                  +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 << '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS zero, p.*                                                                                                 +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 >> '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS one, p.*                                                                                                  +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 <@ polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS one, p.*                                                                                                  +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 ~= polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT '' AS one, p.*                                                                                                  +
    FROM POLYGON_TBL p                                                                                                             +
    WHERE p.f1 @> polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' << polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS false;
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' << polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS true;
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' &> polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS false;
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' >> polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS false;
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' <@ polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS false;
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' @> polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS false;
 statement: SELECT '((0,4),(6,4),(1,2),(6,0),(0,0))'::polygon @> '((2,1),(2,3),(3,3),(3,1))'::polygon AS "false";
 statement: SELECT '((0,4),(6,4),(3,2),(6,0),(0,0))'::polygon @> '((2,1),(2,3),(3,3),(3,1))'::polygon AS "true";
 statement: SELECT '((1,1),(1,4),(5,4),(5,3),(2,3),(2,2),(5,2),(5,1))'::polygon @> '((3,2),(3,3),(4,3),(4,2))'::polygon AS "false";
 statement: SELECT '((0,0),(0,3),(3,3),(3,0))'::polygon @> '((2,1),(2,2),(3,2),(3,1))'::polygon AS "true";
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' ~= polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS false;
 statement: SELECT polygon '(2.0,0.0),(2.0,4.0),(0.0,0.0)' && polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)' AS true;
 statement: SELECT '((0,4),(6,4),(1,2),(6,0),(0,0))'::polygon && '((2,1),(2,3),(3,3),(3,1))'::polygon AS "true";
 statement: SELECT '((1,4),(1,1),(4,1),(4,2),(2,2),(2,4),(1,4))'::polygon && '((3,3),(4,3),(4,4),(3,4),(3,3))'::polygon AS "false";
 statement: SELECT '((200,800),(800,800),(800,200),(200,200))' &&  '(1000,1000,0,0)'::polygon AS "true";
 statement: SELECT       '(0,0)'::point <-> '((0,0),(1,2),(2,1))'::polygon as on_corner,                                           +
         '(1,1)'::point <-> '((0,0),(2,2),(1,3))'::polygon as on_segment,                                                          +
         '(2,2)'::point <-> '((0,0),(1,4),(3,1))'::polygon as inside,                                                              +
         '(3,3)'::point <-> '((0,2),(2,0),(2,2))'::polygon as near_corner,                                                         +
         '(4,4)'::point <-> '((0,0),(0,3),(4,0))'::polygon as near_segment;

