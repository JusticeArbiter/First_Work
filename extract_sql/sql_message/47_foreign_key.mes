LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE TABLE PKTABLE ( ptest1 int PRIMARY KEY, ptest2 text );
 statement: CREATE TABLE FKTABLE ( ftest1 int REFERENCES PKTABLE MATCH FULL ON DELETE CASCADE ON UPDATE CASCADE, ftest2 int );
 statement: INSERT INTO PKTABLE VALUES (1, 'Test1');
 statement: INSERT INTO PKTABLE VALUES (2, 'Test2');
 statement: INSERT INTO PKTABLE VALUES (3, 'Test3');
 statement: INSERT INTO PKTABLE VALUES (4, 'Test4');
 statement: INSERT INTO PKTABLE VALUES (5, 'Test5');
 statement: INSERT INTO FKTABLE VALUES (1, 2);
 statement: INSERT INTO FKTABLE VALUES (2, 3);
 statement: INSERT INTO FKTABLE VALUES (3, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 1);
 statement: INSERT INTO FKTABLE VALUES (100, 2);
 statement: SELECT * FROM FKTABLE;
 statement: DELETE FROM PKTABLE WHERE ptest1=1;
 statement: SELECT * FROM FKTABLE;
 statement: UPDATE PKTABLE SET ptest1=1 WHERE ptest1=2;
 statement: SELECT * FROM FKTABLE;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 text, PRIMARY KEY(ptest1, ptest2) );
 statement: CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, CONSTRAINT constrname FOREIGN KEY(ftest1, ftest2)                       +
                        REFERENCES PKTABLE MATCH FULL ON DELETE SET NULL ON UPDATE SET NULL);
 statement: COMMENT ON CONSTRAINT constrname_wrong ON FKTABLE IS 'fk constraint comment';
 statement: COMMENT ON CONSTRAINT constrname ON FKTABLE IS 'fk constraint comment';
 statement: COMMENT ON CONSTRAINT constrname ON FKTABLE IS NULL;
 statement: INSERT INTO PKTABLE VALUES (1, 2, 'Test1');
 statement: INSERT INTO PKTABLE VALUES (1, 3, 'Test1-2');
 statement: INSERT INTO PKTABLE VALUES (2, 4, 'Test2');
 statement: INSERT INTO PKTABLE VALUES (3, 6, 'Test3');
 statement: INSERT INTO PKTABLE VALUES (4, 8, 'Test4');
 statement: INSERT INTO PKTABLE VALUES (5, 10, 'Test5');
 statement: INSERT INTO FKTABLE VALUES (1, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (1, 3, 5);
 statement: INSERT INTO FKTABLE VALUES (2, 4, 8);
 statement: INSERT INTO FKTABLE VALUES (3, 6, 12);
 statement: INSERT INTO FKTABLE VALUES (NULL, NULL, 0);
 statement: INSERT INTO FKTABLE VALUES (100, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (2, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (1, NULL, 4);
 statement: SELECT * FROM FKTABLE;
 statement: DELETE FROM PKTABLE WHERE ptest1=1 and ptest2=2;
 statement: SELECT * FROM FKTABLE;
 statement: DELETE FROM PKTABLE WHERE ptest1=5 and ptest2=10;
 statement: SELECT * FROM FKTABLE;
 statement: UPDATE PKTABLE SET ptest1=1 WHERE ptest1=2;
 statement: SELECT * FROM FKTABLE;
 statement: ALTER TABLE PKTABLE ALTER COLUMN ptest1 TYPE bigint;
 statement: ALTER TABLE FKTABLE ALTER COLUMN ftest1 TYPE bigint;
 statement: SELECT * FROM PKTABLE;
 statement: SELECT * FROM FKTABLE;
 statement: DROP TABLE PKTABLE CASCADE;
 statement: DROP TABLE FKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 text, PRIMARY KEY(ptest1, ptest2) );
 statement: CREATE TABLE FKTABLE ( ftest1 int DEFAULT -1, ftest2 int DEFAULT -2, ftest3 int, CONSTRAINT constrname2 FOREIGN KEY(ftest1, ftest2)+
                        REFERENCES PKTABLE MATCH FULL ON DELETE SET DEFAULT ON UPDATE SET DEFAULT);
 statement: INSERT INTO PKTABLE VALUES (-1, -2, 'The Default!');
 statement: INSERT INTO PKTABLE VALUES (1, 2, 'Test1');
 statement: INSERT INTO PKTABLE VALUES (1, 3, 'Test1-2');
 statement: INSERT INTO PKTABLE VALUES (2, 4, 'Test2');
 statement: INSERT INTO PKTABLE VALUES (3, 6, 'Test3');
 statement: INSERT INTO PKTABLE VALUES (4, 8, 'Test4');
 statement: INSERT INTO PKTABLE VALUES (5, 10, 'Test5');
 statement: INSERT INTO FKTABLE VALUES (1, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (1, 3, 5);
 statement: INSERT INTO FKTABLE VALUES (2, 4, 8);
 statement: INSERT INTO FKTABLE VALUES (3, 6, 12);
 statement: INSERT INTO FKTABLE VALUES (NULL, NULL, 0);
 statement: INSERT INTO FKTABLE VALUES (100, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (2, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 4);
 statement: INSERT INTO FKTABLE VALUES (1, NULL, 4);
 statement: SELECT * FROM FKTABLE;
 statement: DELETE FROM PKTABLE WHERE ptest1=1 and ptest2=2;
 statement: SELECT * FROM FKTABLE;
 statement: DELETE FROM PKTABLE WHERE ptest1=5 and ptest2=10;
 statement: SELECT * FROM FKTABLE;
 statement: UPDATE PKTABLE SET ptest1=1 WHERE ptest1=2;
 statement: SELECT * FROM FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: DROP TABLE PKTABLE CASCADE;
 statement: DROP TABLE FKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int PRIMARY KEY, ptest2 text );
 statement: CREATE TABLE FKTABLE ( ftest1 int REFERENCES PKTABLE MATCH FULL, ftest2 int );
 statement: INSERT INTO PKTABLE VALUES (1, 'Test1');
 statement: INSERT INTO PKTABLE VALUES (2, 'Test2');
 statement: INSERT INTO PKTABLE VALUES (3, 'Test3');
 statement: INSERT INTO PKTABLE VALUES (4, 'Test4');
 statement: INSERT INTO PKTABLE VALUES (5, 'Test5');
 statement: INSERT INTO FKTABLE VALUES (1, 2);
 statement: INSERT INTO FKTABLE VALUES (2, 3);
 statement: INSERT INTO FKTABLE VALUES (3, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 1);
 statement: INSERT INTO FKTABLE VALUES (100, 2);
 statement: SELECT * FROM FKTABLE;
 statement: SELECT * FROM PKTABLE;
 statement: DELETE FROM PKTABLE WHERE ptest1=1;
 statement: DELETE FROM PKTABLE WHERE ptest1=5;
 statement: SELECT * FROM PKTABLE;
 statement: UPDATE PKTABLE SET ptest1=0 WHERE ptest1=2;
 statement: UPDATE PKTABLE SET ptest1=0 WHERE ptest1=4;
 statement: SELECT * FROM PKTABLE;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) );
 statement: CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3                                     +
                         FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE);
 statement: INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1');
 statement: INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2');
 statement: INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3');
 statement: INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4');
 statement: INSERT INTO FKTABLE VALUES (1, 2, 3, 1);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2);
 statement: INSERT INTO FKTABLE VALUES (2, NULL, 3, 3);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5);
 statement: INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
 statement: SELECT * from FKTABLE;
 statement: UPDATE PKTABLE set ptest2=5 where ptest2=2;
 statement: UPDATE PKTABLE set ptest1=1 WHERE ptest2=3;
 statement: DELETE FROM PKTABLE where ptest1=1 and ptest2=2 and ptest3=3;
 statement: DELETE FROM PKTABLE where ptest1=2;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) );
 statement: CREATE TABLE FKTABLE ( ftest1 int, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3                                     +
                         FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE                                                                +
                         ON DELETE CASCADE ON UPDATE CASCADE);
 statement: INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1');
 statement: INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2');
 statement: INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3');
 statement: INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4');
 statement: INSERT INTO FKTABLE VALUES (1, 2, 3, 1);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2);
 statement: INSERT INTO FKTABLE VALUES (2, NULL, 3, 3);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5);
 statement: INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
 statement: SELECT * from FKTABLE;
 statement: UPDATE PKTABLE set ptest2=5 where ptest2=2;
 statement: UPDATE PKTABLE set ptest1=1 WHERE ptest2=3;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DELETE FROM PKTABLE where ptest1=1 and ptest2=5 and ptest3=3;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DELETE FROM PKTABLE where ptest1=2;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) );
 statement: CREATE TABLE FKTABLE ( ftest1 int DEFAULT 0, ftest2 int, ftest3 int, ftest4 int,  CONSTRAINT constrname3                           +
                         FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE                                                                +
                         ON DELETE SET DEFAULT ON UPDATE SET NULL);
 statement: INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1');
 statement: INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2');
 statement: INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3');
 statement: INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4');
 statement: INSERT INTO FKTABLE VALUES (1, 2, 3, 1);
 statement: INSERT INTO FKTABLE VALUES (2, 3, 4, 1);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2);
 statement: INSERT INTO FKTABLE VALUES (2, NULL, 3, 3);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5);
 statement: INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
 statement: SELECT * from FKTABLE;
 statement: UPDATE PKTABLE set ptest2=5 where ptest2=2;
 statement: UPDATE PKTABLE set ptest2=2 WHERE ptest2=3 and ptest1=1;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DELETE FROM PKTABLE where ptest1=2 and ptest2=3 and ptest3=4;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DELETE FROM PKTABLE where ptest2=5;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE ( ptest1 int, ptest2 int, ptest3 int, ptest4 text, PRIMARY KEY(ptest1, ptest2, ptest3) );
 statement: CREATE TABLE FKTABLE ( ftest1 int DEFAULT 0, ftest2 int DEFAULT -1, ftest3 int DEFAULT -2, ftest4 int, CONSTRAINT constrname3      +
                         FOREIGN KEY(ftest1, ftest2, ftest3) REFERENCES PKTABLE                                                                +
                         ON DELETE SET NULL ON UPDATE SET DEFAULT);
 statement: INSERT INTO PKTABLE VALUES (1, 2, 3, 'test1');
 statement: INSERT INTO PKTABLE VALUES (1, 3, 3, 'test2');
 statement: INSERT INTO PKTABLE VALUES (2, 3, 4, 'test3');
 statement: INSERT INTO PKTABLE VALUES (2, 4, 5, 'test4');
 statement: INSERT INTO PKTABLE VALUES (2, -1, 5, 'test5');
 statement: INSERT INTO FKTABLE VALUES (1, 2, 3, 1);
 statement: INSERT INTO FKTABLE VALUES (2, 3, 4, 1);
 statement: INSERT INTO FKTABLE VALUES (2, 4, 5, 1);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 3, 2);
 statement: INSERT INTO FKTABLE VALUES (2, NULL, 3, 3);
 statement: INSERT INTO FKTABLE VALUES (NULL, 2, 7, 4);
 statement: INSERT INTO FKTABLE VALUES (NULL, 3, 4, 5);
 statement: INSERT INTO FKTABLE VALUES (1, 2, 7, 6);
 statement: SELECT * from FKTABLE;
 statement: UPDATE PKTABLE set ptest2=5 where ptest2=2;
 statement: UPDATE PKTABLE set ptest1=0, ptest2=-1, ptest3=-2 where ptest2=2;
 statement: UPDATE PKTABLE set ptest2=10 where ptest2=4;
 statement: UPDATE PKTABLE set ptest2=2 WHERE ptest2=3 and ptest1=1;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DELETE FROM PKTABLE where ptest1=2 and ptest2=3 and ptest3=4;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DELETE FROM PKTABLE where ptest2=-1 and ptest3=5;
 statement: SELECT * from PKTABLE;
 statement: SELECT * from FKTABLE;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int PRIMARY KEY);
 statement: CREATE TABLE FKTABLE_FAIL1 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (ftest2) REFERENCES PKTABLE);
 statement: CREATE TABLE FKTABLE_FAIL2 ( ftest1 int, CONSTRAINT fkfail1 FOREIGN KEY (ftest1) REFERENCES PKTABLE(ptest2));
 statement: DROP TABLE FKTABLE_FAIL1;
 statement: DROP TABLE FKTABLE_FAIL2;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 int, UNIQUE(ptest1, ptest2));
 statement: CREATE TABLE FKTABLE_FAIL1 (ftest1 int REFERENCES pktable(ptest1));
 statement: DROP TABLE FKTABLE_FAIL1;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int PRIMARY KEY);
 statement: INSERT INTO PKTABLE VALUES(42);
 statement: CREATE TABLE FKTABLE (ftest1 inet REFERENCES pktable);
 statement: CREATE TABLE FKTABLE (ftest1 inet REFERENCES pktable(ptest1));
 statement: CREATE TABLE FKTABLE (ftest1 int8 REFERENCES pktable);
 statement: INSERT INTO FKTABLE VALUES(42);
 statement: INSERT INTO FKTABLE VALUES(43);
 statement: UPDATE FKTABLE SET ftest1 = ftest1;
 statement: UPDATE FKTABLE SET ftest1 = ftest1 + 1;
 statement: DROP TABLE FKTABLE;
 statement: CREATE TABLE FKTABLE (ftest1 numeric REFERENCES pktable);
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 numeric PRIMARY KEY);
 statement: INSERT INTO PKTABLE VALUES(42);
 statement: CREATE TABLE FKTABLE (ftest1 int REFERENCES pktable);
 statement: INSERT INTO FKTABLE VALUES(42);
 statement: INSERT INTO FKTABLE VALUES(43);
 statement: UPDATE FKTABLE SET ftest1 = ftest1;
 statement: UPDATE FKTABLE SET ftest1 = ftest1 + 1;
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, PRIMARY KEY(ptest1, ptest2));
 statement: CREATE TABLE FKTABLE (ftest1 cidr, ftest2 timestamp, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable);
 statement: CREATE TABLE FKTABLE (ftest1 cidr, ftest2 timestamp, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest1, ptest2));
 statement: CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable);
 statement: CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable(ptest1, ptest2));
 statement: CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest2, ptest1));
 statement: CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest2, ftest1) REFERENCES pktable(ptest2, ptest1));
 statement: DROP TABLE FKTABLE;
 statement: CREATE TABLE FKTABLE (ftest1 int, ftest2 inet, FOREIGN KEY(ftest1, ftest2) REFERENCES pktable(ptest1, ptest2));
 statement: DROP TABLE FKTABLE;
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3,           +
 ptest4) REFERENCES pktable(ptest1, ptest2));
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3,           +
 ptest4) REFERENCES pktable);
 statement: DROP TABLE PKTABLE;
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest3,           +
 ptest4) REFERENCES pktable(ptest2, ptest1));
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest4,           +
 ptest3) REFERENCES pktable(ptest1, ptest2));
 statement: CREATE TABLE PKTABLE (ptest1 int, ptest2 inet, ptest3 int, ptest4 inet, PRIMARY KEY(ptest1, ptest2), FOREIGN KEY(ptest4,           +
 ptest3) REFERENCES pktable);
 statement: create table pktable_base (base1 int not null);
 statement: create table pktable (ptest1 int, primary key(base1), unique(base1, ptest1)) inherits (pktable_base);
 statement: create table fktable (ftest1 int references pktable(base1));
 statement: insert into pktable(base1) values (1);
 statement: insert into pktable(base1) values (2);
 statement: insert into fktable(ftest1) values (3);
 statement: insert into pktable(base1) values (3);
 statement: insert into fktable(ftest1) values (3);
 statement: delete from pktable where base1>2;
 statement: update pktable set base1=base1*4;
 statement: update pktable set base1=base1*4 where base1<3;
 statement: delete from pktable where base1>3;
 statement: drop table fktable;
 statement: delete from pktable;
 statement: create table fktable (ftest1 int, ftest2 int, foreign key(ftest1, ftest2) references pktable(base1, ptest1));
 statement: insert into pktable(base1, ptest1) values (1, 1);
 statement: insert into pktable(base1, ptest1) values (2, 2);
 statement: insert into fktable(ftest1, ftest2) values (3, 1);
 statement: insert into pktable(base1,ptest1) values (3, 1);
 statement: insert into fktable(ftest1, ftest2) values (3, 1);
 statement: delete from pktable where base1>2;
 statement: update pktable set base1=base1*4;
 statement: update pktable set base1=base1*4 where base1<3;
 statement: delete from pktable where base1>3;
 statement: drop table fktable;
 statement: drop table pktable;
 statement: drop table pktable_base;
 statement: create table pktable_base(base1 int not null, base2 int);
 statement: create table pktable(ptest1 int, ptest2 int, primary key(base1, ptest1), foreign key(base2, ptest2) references                     +
                                              pktable(base1, ptest1)) inherits (pktable_base);
 statement: insert into pktable (base1, ptest1, base2, ptest2) values (1, 1, 1, 1);
 statement: insert into pktable (base1, ptest1, base2, ptest2) values (2, 1, 1, 1);
 statement: insert into pktable (base1, ptest1, base2, ptest2) values (2, 2, 2, 1);
 statement: insert into pktable (base1, ptest1, base2, ptest2) values (1, 3, 2, 2);
 statement: insert into pktable (base1, ptest1, base2, ptest2) values (2, 3, 3, 2);
 statement: delete from pktable where base1=2;
 statement: update pktable set base1=3 where base1=1;
 statement: delete from pktable where base2=2;
 statement: delete from pktable where base1=2;
 statement: drop table pktable;
 statement: drop table pktable_base;
 statement: create table pktable_base(base1 int not null);
 statement: create table pktable(ptest1 inet, primary key(base1, ptest1)) inherits (pktable_base);
 statement: create table fktable(ftest1 cidr, ftest2 int[], foreign key (ftest1, ftest2) references pktable);
 statement: create table fktable(ftest1 cidr, ftest2 int[], foreign key (ftest1, ftest2) references pktable(base1, ptest1));
 statement: create table fktable(ftest1 int, ftest2 inet, foreign key(ftest2, ftest1) references pktable);
 statement: create table fktable(ftest1 int, ftest2 inet, foreign key(ftest2, ftest1) references pktable(base1, ptest1));
 statement: create table fktable(ftest1 int, ftest2 inet, foreign key(ftest1, ftest2) references pktable(ptest1, base1));
 statement: drop table pktable;
 statement: drop table pktable_base;
 statement: create table pktable_base(base1 int not null, base2 int);
 statement: create table pktable(ptest1 inet, ptest2 inet[], primary key(base1, ptest1), foreign key(base2, ptest2) references                 +
                                              pktable(base1, ptest1)) inherits (pktable_base);
 statement: create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(base2, ptest2) references                   +
                                              pktable(ptest1, base1)) inherits (pktable_base);
 statement: create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(ptest2, base2) references                   +
                                              pktable(base1, ptest1)) inherits (pktable_base);
 statement: create table pktable(ptest1 inet, ptest2 inet, primary key(base1, ptest1), foreign key(ptest2, base2) references                   +
                                              pktable(base1, ptest1)) inherits (pktable_base);
 statement: drop table pktable;
 statement: drop table pktable_base;
 statement: CREATE TABLE pktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         other   INT4                                                                                                                          +
 );
 statement: CREATE TABLE fktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         fk              INT4 REFERENCES pktable DEFERRABLE                                                                                    +
 );
 statement: INSERT INTO fktable VALUES (5, 10);
 statement: BEGIN;
 statement: SET CONSTRAINTS ALL DEFERRED;
 statement: INSERT INTO fktable VALUES (10, 15);
 statement: INSERT INTO pktable VALUES (15, 0);
 statement: COMMIT;
 statement: DROP TABLE fktable, pktable;
 statement: CREATE TABLE pktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         other   INT4                                                                                                                          +
 );
 statement: CREATE TABLE fktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         fk              INT4 REFERENCES pktable DEFERRABLE INITIALLY DEFERRED                                                                 +
 );
 statement: BEGIN;
 statement: INSERT INTO fktable VALUES (100, 200);
 statement: INSERT INTO pktable VALUES (200, 500);
 statement: COMMIT;
 statement: BEGIN;
 statement: SET CONSTRAINTS ALL IMMEDIATE;
 statement: INSERT INTO fktable VALUES (500, 1000);
 statement: COMMIT;
 statement: DROP TABLE fktable, pktable;
 statement: CREATE TABLE pktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         other   INT4                                                                                                                          +
 );
 statement: CREATE TABLE fktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         fk              INT4 REFERENCES pktable DEFERRABLE                                                                                    +
 );
 statement: BEGIN;
 statement: SET CONSTRAINTS ALL DEFERRED;
 statement: INSERT INTO fktable VALUES (1000, 2000);
 statement: SET CONSTRAINTS ALL IMMEDIATE;
 statement: INSERT INTO pktable VALUES (2000, 3);
 statement: COMMIT;
 statement: DROP TABLE fktable, pktable;
 statement: CREATE TABLE pktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         other   INT4                                                                                                                          +
 );
 statement: CREATE TABLE fktable (                                                                                                             +
         id              INT4 PRIMARY KEY,                                                                                                     +
         fk              INT4 REFERENCES pktable DEFERRABLE INITIALLY DEFERRED                                                                 +
 );
 statement: BEGIN;
 statement: INSERT INTO fktable VALUES (100, 200);
 statement: COMMIT;
 statement: DROP TABLE pktable, fktable;
 statement: CREATE TEMP TABLE pktable (                                                                                                        +
         id1     INT4 PRIMARY KEY,                                                                                                             +
         id2     VARCHAR(4) UNIQUE,                                                                                                            +
         id3     REAL UNIQUE,                                                                                                                  +
         UNIQUE(id1, id2, id3)                                                                                                                 +
 );
 statement: CREATE TEMP TABLE fktable (                                                                                                        +
         x1      INT4 REFERENCES pktable(id1),                                                                                                 +
         x2      VARCHAR(4) REFERENCES pktable(id2),                                                                                           +
         x3      REAL REFERENCES pktable(id3),                                                                                                 +
         x4      TEXT,                                                                                                                         +
         x5      INT2                                                                                                                          +
 );
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_2_3                                                                                          +
 FOREIGN KEY (x2) REFERENCES pktable(id3);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_2_1                                                                                          +
 FOREIGN KEY (x2) REFERENCES pktable(id1);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_3_1                                                                                          +
 FOREIGN KEY (x3) REFERENCES pktable(id1);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_1_2                                                                                          +
 FOREIGN KEY (x1) REFERENCES pktable(id2);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_1_3                                                                                          +
 FOREIGN KEY (x1) REFERENCES pktable(id3);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_4_2                                                                                          +
 FOREIGN KEY (x4) REFERENCES pktable(id2);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_5_1                                                                                          +
 FOREIGN KEY (x5) REFERENCES pktable(id1);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_123_123                                                                                      +
 FOREIGN KEY (x1,x2,x3) REFERENCES pktable(id1,id2,id3);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_213_213                                                                                      +
 FOREIGN KEY (x2,x1,x3) REFERENCES pktable(id2,id1,id3);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_253_213                                                                                      +
 FOREIGN KEY (x2,x5,x3) REFERENCES pktable(id2,id1,id3);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_123_231                                                                                      +
 FOREIGN KEY (x1,x2,x3) REFERENCES pktable(id2,id3,id1);
 statement: ALTER TABLE fktable ADD CONSTRAINT fk_241_132                                                                                      +
 FOREIGN KEY (x2,x4,x1) REFERENCES pktable(id1,id3,id2);
 statement: DROP TABLE pktable, fktable;
 statement: CREATE TEMP TABLE pktable (                                                                                                        +
     id int primary key,                                                                                                                       +
     other int                                                                                                                                 +
 );
 statement: CREATE TEMP TABLE fktable (                                                                                                        +
     id int primary key,                                                                                                                       +
     fk int references pktable deferrable initially deferred                                                                                   +
 );
 statement: INSERT INTO pktable VALUES (5, 10);
 statement: BEGIN;
 statement: INSERT INTO fktable VALUES (0, 20);
 statement: UPDATE fktable SET id = id + 1;
 statement: COMMIT;
 statement: BEGIN;
 statement: INSERT INTO fktable VALUES (0, 20);
 statement: SAVEPOINT savept1;
 statement: UPDATE fktable SET id = id + 1;
 statement: COMMIT;
 statement: BEGIN;
 statement: SAVEPOINT savept1;
 statement: INSERT INTO fktable VALUES (0, 20);
 statement: RELEASE SAVEPOINT savept1;
 statement: UPDATE fktable SET id = id + 1;
 statement: COMMIT;
 statement: BEGIN;
 statement: INSERT INTO fktable VALUES (0, 20);
 statement: SAVEPOINT savept1;
 statement: UPDATE fktable SET id = id + 1;
 statement: ROLLBACK TO savept1;
 statement: COMMIT;
 statement: INSERT INTO fktable VALUES (1, 5);
 statement: ALTER TABLE fktable ALTER CONSTRAINT fktable_fk_fkey DEFERRABLE INITIALLY IMMEDIATE;
 statement: BEGIN;
 statement: UPDATE pktable SET id = 10 WHERE id = 5;
 statement: COMMIT;
 statement: BEGIN;
 statement: INSERT INTO fktable VALUES (0, 20);
 statement: COMMIT;
 statement: ALTER TABLE fktable ALTER CONSTRAINT fktable_fk_fkey NOT DEFERRABLE;
 statement: CREATE TEMP TABLE users (                                                                                                          +
   id INT PRIMARY KEY,                                                                                                                         +
   name VARCHAR NOT NULL                                                                                                                       +
 );
 statement: INSERT INTO users VALUES (1, 'Jozko');
 statement: INSERT INTO users VALUES (2, 'Ferko');
 statement: INSERT INTO users VALUES (3, 'Samko');
 statement: CREATE TEMP TABLE tasks (                                                                                                          +
   id INT PRIMARY KEY,                                                                                                                         +
   owner INT REFERENCES users ON UPDATE CASCADE ON DELETE SET NULL,                                                                            +
   worker INT REFERENCES users ON UPDATE CASCADE ON DELETE SET NULL,                                                                           +
   checked_by INT REFERENCES users ON UPDATE CASCADE ON DELETE SET NULL                                                                        +
 );
 statement: INSERT INTO tasks VALUES (1,1,NULL,NULL);
 statement: INSERT INTO tasks VALUES (2,2,2,NULL);
 statement: INSERT INTO tasks VALUES (3,3,3,3);
 statement: SELECT * FROM tasks;
 statement: UPDATE users SET id = 4 WHERE id = 3;
 statement: SELECT * FROM tasks;
 statement: DELETE FROM users WHERE id = 4;
 statement: SELECT * FROM tasks;
 statement: BEGIN;
 statement: UPDATE tasks set id=id WHERE id=2;
 statement: SELECT * FROM tasks;
 statement: DELETE FROM users WHERE id = 2;
 statement: SELECT * FROM tasks;
 statement: COMMIT;
 statement: create temp table selfref (                                                                                                        +
     a int primary key,                                                                                                                        +
     b int,                                                                                                                                    +
     foreign key (b) references selfref (a)                                                                                                    +
         on update cascade on delete cascade                                                                                                   +
 );
 statement: insert into selfref (a, b)                                                                                                         +
 values                                                                                                                                        +
     (0, 0),                                                                                                                                   +
     (1, 1);
 statement: begin;
 statement: update selfref set a = 123 where a = 0;
 statement: select a, b from selfref;
 statement: update selfref set a = 456 where a = 123;
 statement: select a, b from selfref;
 statement: commit;
 statement: create temp table defp (f1 int primary key);
 statement: create temp table defc (f1 int default 0                                                                                           +
                         references defp on delete set default);
 statement: insert into defp values (0), (1), (2);
 statement: insert into defc values (2);
 statement: select * from defc;
 statement: delete from defp where f1 = 2;
 statement: select * from defc;
 statement: delete from defp where f1 = 0;
 statement: alter table defc alter column f1 set default 1;
 statement: delete from defp where f1 = 0;
 statement: select * from defc;
 statement: delete from defp where f1 = 1;
 statement: create temp table pp (f1 int primary key);
 statement: create temp table cc (f1 int references pp on update no action);
 statement: insert into pp values(12);
 statement: insert into pp values(11);
 statement: update pp set f1=f1+1;
 statement: insert into cc values(13);
 statement: update pp set f1=f1+1;
 statement: update pp set f1=f1+1;
 statement: drop table pp, cc;
 statement: create temp table pp (f1 int primary key);
 statement: create temp table cc (f1 int references pp on update restrict);
 statement: insert into pp values(12);
 statement: insert into pp values(11);
 statement: update pp set f1=f1+1;
 statement: insert into cc values(13);
 statement: update pp set f1=f1+1;
 statement: drop table pp, cc;
 statement: create table pktable2(f1 int primary key);
 statement: create table fktable2(f1 int references pktable2 deferrable initially deferred);
 statement: insert into pktable2 values(1);
 statement: begin;
 statement: insert into fktable2 values(1);
 statement: savepoint x;
 statement: delete from fktable2;
 statement: rollback to x;
 statement: commit;
 statement: begin;
 statement: insert into fktable2 values(2);
 statement: savepoint x;
 statement: delete from fktable2;
 statement: rollback to x;
 statement: commit;
 statement: begin;
 statement: insert into fktable2 values(2);
 statement: alter table fktable2 drop constraint fktable2_f1_fkey;
 statement: commit;
 statement: begin;
 statement: delete from pktable2 where f1 = 1;
 statement: alter table fktable2 drop constraint fktable2_f1_fkey;
 statement: commit;
 statement: drop table pktable2, fktable2;

