LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE ROLE test_def_superuser;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_superuser';
 statement: CREATE ROLE test_superuser WITH SUPERUSER;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_superuser';
 statement: ALTER ROLE test_superuser WITH NOSUPERUSER;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_superuser';
 statement: ALTER ROLE test_superuser WITH SUPERUSER;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_superuser';
 statement: CREATE ROLE test_def_inherit;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_inherit';
 statement: CREATE ROLE test_inherit WITH NOINHERIT;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_inherit';
 statement: ALTER ROLE test_inherit WITH INHERIT;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_inherit';
 statement: ALTER ROLE test_inherit WITH NOINHERIT;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_inherit';
 statement: CREATE ROLE test_def_createrole;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_createrole';
 statement: CREATE ROLE test_createrole WITH CREATEROLE;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_createrole';
 statement: ALTER ROLE test_createrole WITH NOCREATEROLE;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_createrole';
 statement: ALTER ROLE test_createrole WITH CREATEROLE;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_createrole';
 statement: CREATE ROLE test_def_createdb;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_createdb';
 statement: CREATE ROLE test_createdb WITH CREATEDB;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_createdb';
 statement: ALTER ROLE test_createdb WITH NOCREATEDB;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_createdb';
 statement: ALTER ROLE test_createdb WITH CREATEDB;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_createdb';
 statement: CREATE ROLE test_def_role_canlogin;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_role_canlogin';
 statement: CREATE ROLE test_role_canlogin WITH LOGIN;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_role_canlogin';
 statement: ALTER ROLE test_role_canlogin WITH NOLOGIN;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_role_canlogin';
 statement: ALTER ROLE test_role_canlogin WITH LOGIN;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_role_canlogin';
 statement: CREATE USER test_def_user_canlogin;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_user_canlogin';
 statement: CREATE USER test_user_canlogin WITH NOLOGIN;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_user_canlogin';
 statement: ALTER USER test_user_canlogin WITH LOGIN;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_user_canlogin';
 statement: ALTER USER test_user_canlogin WITH NOLOGIN;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_user_canlogin';
 statement: CREATE ROLE test_def_replication;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_replication';
 statement: CREATE ROLE test_replication WITH REPLICATION;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_replication';
 statement: ALTER ROLE test_replication WITH NOREPLICATION;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_replication';
 statement: ALTER ROLE test_replication WITH REPLICATION;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_replication';
 statement: CREATE ROLE test_def_bypassrls;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_def_bypassrls';
 statement: CREATE ROLE test_bypassrls WITH BYPASSRLS;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_bypassrls';
 statement: ALTER ROLE test_bypassrls WITH NOBYPASSRLS;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_bypassrls';
 statement: ALTER ROLE test_bypassrls WITH BYPASSRLS;
 statement: SELECT * FROM pg_authid WHERE rolname = 'test_bypassrls';
 statement: DROP ROLE test_def_superuser;
 statement: DROP ROLE test_superuser;
 statement: DROP ROLE test_def_inherit;
 statement: DROP ROLE test_inherit;
 statement: DROP ROLE test_def_createrole;
 statement: DROP ROLE test_createrole;
 statement: DROP ROLE test_def_createdb;
 statement: DROP ROLE test_createdb;
 statement: DROP ROLE test_def_role_canlogin;
 statement: DROP ROLE test_role_canlogin;
 statement: DROP USER test_def_user_canlogin;
 statement: DROP USER test_user_canlogin;
 statement: DROP ROLE test_def_replication;
 statement: DROP ROLE test_replication;
 statement: DROP ROLE test_def_bypassrls;
 statement: DROP ROLE test_bypassrls;

