LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE TABLE serialTest (f1 text, f2 serial);
 statement: INSERT INTO serialTest VALUES ('foo');
 statement: INSERT INTO serialTest VALUES ('bar');
 statement: INSERT INTO serialTest VALUES ('force', 100);
 statement: INSERT INTO serialTest VALUES ('wrong', NULL);
 statement: SELECT * FROM serialTest;
 statement: CREATE TABLE serialTest2 (f1 text, f2 serial, f3 smallserial, f4 serial2,+
   f5 bigserial, f6 serial8);
 statement: INSERT INTO serialTest2 (f1)                                             +
   VALUES ('test_defaults');
 statement: INSERT INTO serialTest2 (f1, f2, f3, f4, f5, f6)                         +
   VALUES ('test_max_vals', 2147483647, 32767, 32767, 9223372036854775807,           +
           9223372036854775807),                                                     +
          ('test_min_vals', -2147483648, -32768, -32768, -9223372036854775808,       +
           -9223372036854775808);
 statement: INSERT INTO serialTest2 (f1, f3)                                         +
   VALUES ('bogus', -32769);
 statement: INSERT INTO serialTest2 (f1, f4)                                         +
   VALUES ('bogus', -32769);
 statement: INSERT INTO serialTest2 (f1, f3)                                         +
   VALUES ('bogus', 32768);
 statement: INSERT INTO serialTest2 (f1, f4)                                         +
   VALUES ('bogus', 32768);
 statement: INSERT INTO serialTest2 (f1, f5)                                         +
   VALUES ('bogus', -9223372036854775809);
 statement: INSERT INTO serialTest2 (f1, f6)                                         +
   VALUES ('bogus', -9223372036854775809);
 statement: INSERT INTO serialTest2 (f1, f5)                                         +
   VALUES ('bogus', 9223372036854775808);
 statement: INSERT INTO serialTest2 (f1, f6)                                         +
   VALUES ('bogus', 9223372036854775808);
 statement: SELECT * FROM serialTest2 ORDER BY f2 ASC;
 statement: SELECT nextval('serialTest2_f2_seq');
 statement: SELECT nextval('serialTest2_f3_seq');
 statement: SELECT nextval('serialTest2_f4_seq');
 statement: SELECT nextval('serialTest2_f5_seq');
 statement: SELECT nextval('serialTest2_f6_seq');
 statement: CREATE SEQUENCE sequence_test;
 statement: CREATE SEQUENCE IF NOT EXISTS sequence_test;
 statement: SELECT nextval('sequence_test'::text);
 statement: SELECT nextval('sequence_test'::regclass);
 statement: SELECT currval('sequence_test'::text);
 statement: SELECT currval('sequence_test'::regclass);
 statement: SELECT setval('sequence_test'::text, 32);
 statement: SELECT nextval('sequence_test'::regclass);
 statement: SELECT setval('sequence_test'::text, 99, false);
 statement: SELECT nextval('sequence_test'::regclass);
 statement: SELECT setval('sequence_test'::regclass, 32);
 statement: SELECT nextval('sequence_test'::text);
 statement: SELECT setval('sequence_test'::regclass, 99, false);
 statement: SELECT nextval('sequence_test'::text);
 statement: DISCARD SEQUENCES;
 statement: SELECT currval('sequence_test'::regclass);
 statement: DROP SEQUENCE sequence_test;
 statement: CREATE SEQUENCE foo_seq;
 statement: ALTER TABLE foo_seq RENAME TO foo_seq_new;
 statement: SELECT * FROM foo_seq_new;
 statement: SELECT nextval('foo_seq_new');
 statement: SELECT nextval('foo_seq_new');
 statement: SELECT * FROM foo_seq_new;
 statement: DROP SEQUENCE foo_seq_new;
 statement: ALTER TABLE serialtest_f2_seq RENAME TO serialtest_f2_foo;
 statement: INSERT INTO serialTest VALUES ('more');
 statement: SELECT * FROM serialTest;
 statement: CREATE TEMP SEQUENCE myseq2;
 statement: CREATE TEMP SEQUENCE myseq3;
 statement: CREATE TEMP TABLE t1 (                                                   +
   f1 serial,                                                                        +
   f2 int DEFAULT nextval('myseq2'),                                                 +
   f3 int DEFAULT nextval('myseq3'::text)                                            +
 );
 statement: DROP SEQUENCE t1_f1_seq;
 statement: DROP SEQUENCE myseq2;
 statement: DROP SEQUENCE myseq3;
 statement: DROP TABLE t1;
 statement: DROP SEQUENCE t1_f1_seq;
 statement: DROP SEQUENCE myseq2;
 statement: ALTER SEQUENCE IF EXISTS sequence_test2 RESTART WITH 24                  +
          INCREMENT BY 4 MAXVALUE 36 MINVALUE 5 CYCLE;
 statement: CREATE SEQUENCE sequence_test2 START WITH 32;
 statement: SELECT nextval('sequence_test2');
 statement: ALTER SEQUENCE sequence_test2 RESTART WITH 24                            +
          INCREMENT BY 4 MAXVALUE 36 MINVALUE 5 CYCLE;
 statement: SELECT nextval('sequence_test2');
 statement: SELECT nextval('sequence_test2');
 statement: SELECT nextval('sequence_test2');
 statement: SELECT nextval('sequence_test2');
 statement: SELECT nextval('sequence_test2');
 statement: ALTER SEQUENCE sequence_test2 RESTART;
 statement: SELECT nextval('sequence_test2');
 statement: SELECT nextval('sequence_test2');
 statement: SELECT nextval('sequence_test2');
 statement: SELECT * FROM information_schema.sequences WHERE sequence_name IN        +
   ('sequence_test2', 'serialtest2_f2_seq', 'serialtest2_f3_seq',                    +
    'serialtest2_f4_seq', 'serialtest2_f5_seq', 'serialtest2_f6_seq')                +
   ORDER BY sequence_name ASC;
 statement: COMMENT ON SEQUENCE asdf IS 'won''t work';
 statement: COMMENT ON SEQUENCE sequence_test2 IS 'will work';
 statement: COMMENT ON SEQUENCE sequence_test2 IS NULL;
 statement: CREATE SEQUENCE seq;
 statement: SELECT nextval('seq');
 statement: SELECT lastval();
 statement: SELECT setval('seq', 99);
 statement: SELECT lastval();
 statement: DISCARD SEQUENCES;
 statement: SELECT lastval();
 statement: CREATE SEQUENCE seq2;
 statement: SELECT nextval('seq2');
 statement: SELECT lastval();
 statement: DROP SEQUENCE seq2;
 statement: SELECT lastval();
 statement: CREATE USER seq_user;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT SELECT ON seq3 TO seq_user;
 statement: SELECT nextval('seq3');
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT UPDATE ON seq3 TO seq_user;
 statement: SELECT nextval('seq3');
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT USAGE ON seq3 TO seq_user;
 statement: SELECT nextval('seq3');
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: SELECT nextval('seq3');
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT SELECT ON seq3 TO seq_user;
 statement: SELECT currval('seq3');
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: SELECT nextval('seq3');
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT UPDATE ON seq3 TO seq_user;
 statement: SELECT currval('seq3');
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: SELECT nextval('seq3');
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT USAGE ON seq3 TO seq_user;
 statement: SELECT currval('seq3');
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: SELECT nextval('seq3');
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT SELECT ON seq3 TO seq_user;
 statement: SELECT lastval();
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: SELECT nextval('seq3');
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT UPDATE ON seq3 TO seq_user;
 statement: SELECT lastval();
 statement: ROLLBACK;
 statement: BEGIN;
 statement: SET LOCAL SESSION AUTHORIZATION seq_user;
 statement: CREATE SEQUENCE seq3;
 statement: SELECT nextval('seq3');
 statement: REVOKE ALL ON seq3 FROM seq_user;
 statement: GRANT USAGE ON seq3 TO seq_user;
 statement: SELECT lastval();
 statement: ROLLBACK;
 statement: DROP TABLE serialTest, serialTest2;
 statement: SELECT * FROM information_schema.sequences WHERE sequence_name IN        +
   ('sequence_test2', 'serialtest2_f2_seq', 'serialtest2_f3_seq',                    +
    'serialtest2_f4_seq', 'serialtest2_f5_seq', 'serialtest2_f6_seq')                +
   ORDER BY sequence_name ASC;
 statement: DROP USER seq_user;
 statement: DROP SEQUENCE seq;

