LOG:  statement: select message from postgres_log where query is null;
 statement: /* Test inheritance of structure (LIKE) */                                                                                                                                                                                                                 +
 CREATE TABLE inhx (xx text DEFAULT 'text');
 statement: /*                                                                                                                                                                                                                                                         +
  * Test double inheritance                                                                                                                                                                                                                                            +
  *                                                                                                                                                                                                                                                                    +
  * Ensure that defaults are NOT included unless                                                                                                                                                                                                                       +
  * INCLUDING DEFAULTS is specified                                                                                                                                                                                                                                    +
  */                                                                                                                                                                                                                                                                   +
 CREATE TABLE ctla (aa TEXT);
 statement: CREATE TABLE ctlb (bb TEXT) INHERITS (ctla);
 statement: CREATE TABLE foo (LIKE nonexistent);
 statement: CREATE TABLE inhe (ee text, LIKE inhx) inherits (ctlb);
 statement: INSERT INTO inhe VALUES ('ee-col1', 'ee-col2', DEFAULT, 'ee-col4');
 statement: SELECT * FROM inhe;
 statement: /* Columns aa, bb, xx value NULL, ee */                                                                                                                                                                                                                    +
 SELECT * FROM inhx;
 statement: /* Empty set since LIKE inherits structure only */                                                                                                                                                                                                         +
 SELECT * FROM ctlb;
 statement: /* Has ee entry */                                                                                                                                                                                                                                         +
 SELECT * FROM ctla;
 statement: /* Has ee entry */                                                                                                                                                                                                                                         +
 CREATE TABLE inhf (LIKE inhx, LIKE inhx);
 statement: /* Throw error */                                                                                                                                                                                                                                          +
 CREATE TABLE inhf (LIKE inhx INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
 statement: INSERT INTO inhf DEFAULT VALUES;
 statement: SELECT * FROM inhf;
 statement: /* Single entry with value 'text' */                                                                                                                                                                                                                       +
 ALTER TABLE inhx add constraint foo CHECK (xx = 'text');
 statement: ALTER TABLE inhx ADD PRIMARY KEY (xx);
 statement: CREATE TABLE inhg (LIKE inhx);
 statement: /* Doesn't copy constraint */                                                                                                                                                                                                                              +
 INSERT INTO inhg VALUES ('foo');
 statement: DROP TABLE inhg;
 statement: CREATE TABLE inhg (x text, LIKE inhx INCLUDING CONSTRAINTS, y text);
 statement: /* Copies constraints */                                                                                                                                                                                                                                   +
 INSERT INTO inhg VALUES ('x', 'text', 'y');
 statement: /* Succeeds */                                                                                                                                                                                                                                             +
 INSERT INTO inhg VALUES ('x', 'text', 'y');
 statement: /* Succeeds -- Unique constraints not copied */                                                                                                                                                                                                            +
 INSERT INTO inhg VALUES ('x', 'foo',  'y');
 statement: /* fails due to constraint */                                                                                                                                                                                                                              +
 SELECT * FROM inhg;
 statement: /* Two records with three columns in order x=x, xx=text, y=y */                                                                                                                                                                                            +
 DROP TABLE inhg;
 statement: CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, y text);
 statement: /* copies indexes */                                                                                                                                                                                                                                       +
 INSERT INTO inhg VALUES (5, 10);
 statement: INSERT INTO inhg VALUES (20, 10);
 statement: DROP TABLE inhg;
 statement: /* Multiple primary keys creation should fail */                                                                                                                                                                                                           +
 CREATE TABLE inhg (x text, LIKE inhx INCLUDING INDEXES, PRIMARY KEY(x));
 statement: /* fails */                                                                                                                                                                                                                                                +
 CREATE TABLE inhz (xx text DEFAULT 'text', yy int UNIQUE);
 statement: CREATE UNIQUE INDEX inhz_xx_idx on inhz (xx) WHERE xx <> 'test';
 statement: /* Ok to create multiple unique indexes */                                                                                                                                                                                                                 +
 CREATE TABLE inhg (x text UNIQUE, LIKE inhz INCLUDING INDEXES);
 statement: INSERT INTO inhg (xx, yy, x) VALUES ('test', 5, 10);
 statement: INSERT INTO inhg (xx, yy, x) VALUES ('test', 10, 15);
 statement: INSERT INTO inhg (xx, yy, x) VALUES ('foo', 10, 15);
 statement: DROP TABLE inhg;
 statement: DROP TABLE inhz;
 statement: CREATE TABLE ctlt1 (a text CHECK (length(a) > 2) PRIMARY KEY, b text);
 statement: CREATE INDEX ctlt1_b_key ON ctlt1 (b);
 statement: CREATE INDEX ctlt1_fnidx ON ctlt1 ((a || b));
 statement: COMMENT ON COLUMN ctlt1.a IS 'A';
 statement: COMMENT ON COLUMN ctlt1.b IS 'B';
 statement: COMMENT ON CONSTRAINT ctlt1_a_check ON ctlt1 IS 't1_a_check';
 statement: COMMENT ON INDEX ctlt1_pkey IS 'index pkey';
 statement: COMMENT ON INDEX ctlt1_b_key IS 'index b_key';
 statement: ALTER TABLE ctlt1 ALTER COLUMN a SET STORAGE MAIN;
 statement: CREATE TABLE ctlt2 (c text);
 statement: ALTER TABLE ctlt2 ALTER COLUMN c SET STORAGE EXTERNAL;
 statement: COMMENT ON COLUMN ctlt2.c IS 'C';
 statement: CREATE TABLE ctlt3 (a text CHECK (length(a) < 5), c text);
 statement: ALTER TABLE ctlt3 ALTER COLUMN c SET STORAGE EXTERNAL;
 statement: ALTER TABLE ctlt3 ALTER COLUMN a SET STORAGE MAIN;
 statement: COMMENT ON COLUMN ctlt3.a IS 'A3';
 statement: COMMENT ON COLUMN ctlt3.c IS 'C';
 statement: COMMENT ON CONSTRAINT ctlt3_a_check ON ctlt3 IS 't3_a_check';
 statement: CREATE TABLE ctlt4 (a text, c text);
 statement: ALTER TABLE ctlt4 ALTER COLUMN c SET STORAGE EXTERNAL;
 statement: CREATE TABLE ctlt12_storage (LIKE ctlt1 INCLUDING STORAGE, LIKE ctlt2 INCLUDING STORAGE);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(ctlt12_storage)$'                                                                                                                                                                                                                                +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20125';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20125' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20125' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20125' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20125' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE ctlt12_comments (LIKE ctlt1 INCLUDING COMMENTS, LIKE ctlt2 INCLUDING COMMENTS);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(ctlt12_comments)$'                                                                                                                                                                                                                               +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20131';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20131' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20131' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20131' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20131' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE ctlt1_inh (LIKE ctlt1 INCLUDING CONSTRAINTS INCLUDING COMMENTS) INHERITS (ctlt1);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(ctlt1_inh)$'                                                                                                                                                                                                                                     +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20137';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20137' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                             +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                       +
 WHERE r.conrelid = '20137' AND r.contype = 'c'                                                                                                                                                                                                                        +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20137' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20137' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20137' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT description FROM pg_description, pg_constraint c WHERE classoid = 'pg_constraint'::regclass AND objoid = c.oid AND c.conrelid = 'ctlt1_inh'::regclass;
 statement: CREATE TABLE ctlt13_inh () INHERITS (ctlt1, ctlt3);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(ctlt13_inh)$'                                                                                                                                                                                                                                    +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20144';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20144' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                             +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                       +
 WHERE r.conrelid = '20144' AND r.contype = 'c'                                                                                                                                                                                                                        +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20144' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20144' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20144' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE ctlt13_like (LIKE ctlt3 INCLUDING CONSTRAINTS INCLUDING COMMENTS INCLUDING STORAGE) INHERITS (ctlt1);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(ctlt13_like)$'                                                                                                                                                                                                                                   +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20152';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20152' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                             +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                       +
 WHERE r.conrelid = '20152' AND r.contype = 'c'                                                                                                                                                                                                                        +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20152' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20152' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20152' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT description FROM pg_description, pg_constraint c WHERE classoid = 'pg_constraint'::regclass AND objoid = c.oid AND c.conrelid = 'ctlt13_like'::regclass;
 statement: CREATE TABLE ctlt_all (LIKE ctlt1 INCLUDING ALL);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(ctlt_all)$'                                                                                                                                                                                                                                      +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20160';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20160' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                       +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                             +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                             +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                          +
 WHERE c.oid = '20160' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                             +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                       +
 WHERE r.conrelid = '20160' AND r.contype = 'c'                                                                                                                                                                                                                        +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20160' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20160' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20160' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.relname, objsubid, description FROM pg_description, pg_index i, pg_class c WHERE classoid = 'pg_class'::regclass AND objoid = i.indexrelid AND c.oid = i.indexrelid AND i.indrelid = 'ctlt_all'::regclass ORDER BY c.relname, objsubid;
 statement: CREATE TABLE inh_error1 () INHERITS (ctlt1, ctlt4);
 statement: CREATE TABLE inh_error2 (LIKE ctlt4 INCLUDING STORAGE) INHERITS (ctlt1);
 statement: DROP TABLE ctlt1, ctlt2, ctlt3, ctlt4, ctlt12_storage, ctlt12_comments, ctlt1_inh, ctlt13_inh, ctlt13_like, ctlt_all, ctla, ctlb CASCADE;
 statement: /* LIKE with other relation kinds */                                                                                                                                                                                                                       +
 CREATE TABLE ctlt4 (a int, b text);
 statement: CREATE SEQUENCE ctlseq1;
 statement: CREATE TABLE ctlt10 (LIKE ctlseq1);
 statement: CREATE VIEW ctlv1 AS SELECT * FROM ctlt4;
 statement: CREATE TABLE ctlt11 (LIKE ctlv1);
 statement: CREATE TABLE ctlt11a (LIKE ctlv1 INCLUDING ALL);
 statement: CREATE TYPE ctlty1 AS (a int, b text);
 statement: CREATE TABLE ctlt12 (LIKE ctlty1);
 statement: DROP SEQUENCE ctlseq1;
 statement: DROP TYPE ctlty1;
 statement: DROP VIEW ctlv1;
 statement: DROP TABLE IF EXISTS ctlt4, ctlt10, ctlt11, ctlt11a, ctlt12;

