LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE INDEX onek_unique1 ON onek USING btree(unique1 int4_ops);
 statement: CREATE INDEX IF NOT EXISTS onek_unique1 ON onek USING btree(unique1 int4_ops);
 statement: CREATE INDEX onek_unique2 ON onek USING btree(unique2 int4_ops);
 statement: CREATE INDEX onek_hundred ON onek USING btree(hundred int4_ops);
 statement: CREATE INDEX onek_stringu1 ON onek USING btree(stringu1 name_ops);
 statement: CREATE INDEX tenk1_unique1 ON tenk1 USING btree(unique1 int4_ops);
 statement: CREATE INDEX tenk1_unique2 ON tenk1 USING btree(unique2 int4_ops);
 statement: CREATE INDEX tenk1_hundred ON tenk1 USING btree(hundred int4_ops);
 statement: CREATE INDEX tenk1_thous_tenthous ON tenk1 (thousand, tenthous);
 statement: CREATE INDEX tenk2_unique1 ON tenk2 USING btree(unique1 int4_ops);
 statement: CREATE INDEX tenk2_unique2 ON tenk2 USING btree(unique2 int4_ops);
 statement: CREATE INDEX tenk2_hundred ON tenk2 USING btree(hundred int4_ops);
 statement: CREATE INDEX rix ON road USING btree (name text_ops);
 statement: CREATE INDEX iix ON ihighway USING btree (name text_ops);
 statement: CREATE INDEX six ON shighway USING btree (name text_ops);
 statement: COMMENT ON INDEX six_wrong IS 'bad index';
 statement: COMMENT ON INDEX six IS 'good index';
 statement: COMMENT ON INDEX six IS NULL;
 statement: CREATE INDEX bt_i4_index ON bt_i4_heap USING btree (seqno int4_ops);
 statement: CREATE INDEX bt_name_index ON bt_name_heap USING btree (seqno name_ops);
 statement: CREATE INDEX bt_txt_index ON bt_txt_heap USING btree (seqno text_ops);
 statement: CREATE INDEX bt_f8_index ON bt_f8_heap USING btree (seqno float8_ops);
 statement: CREATE INDEX onek2_u1_prtl ON onek2 USING btree(unique1 int4_ops)                                                                                                                                                                                                                       +
         where unique1 < 20 or unique1 > 980;
 statement: CREATE INDEX onek2_u2_prtl ON onek2 USING btree(unique2 int4_ops)                                                                                                                                                                                                                       +
         where stringu1 < 'B';
 statement: CREATE INDEX onek2_stu1_prtl ON onek2 USING btree(stringu1 name_ops)                                                                                                                                                                                                                    +
         where onek2.stringu1 >= 'J' and onek2.stringu1 < 'K';
 statement: CREATE INDEX grect2ind ON fast_emp4000 USING gist (home_base);
 statement: CREATE INDEX gpolygonind ON polygon_tbl USING gist (f1);
 statement: CREATE INDEX gcircleind ON circle_tbl USING gist (f1);
 statement: INSERT INTO POINT_TBL(f1) VALUES (NULL);
 statement: CREATE INDEX gpointind ON point_tbl USING gist (f1);
 statement: CREATE TEMP TABLE gpolygon_tbl AS                                                                                                                                                                                                                                                       +
     SELECT polygon(home_base) AS f1 FROM slow_emp4000;
 statement: INSERT INTO gpolygon_tbl VALUES ( '(1000,0,0,1000)' );
 statement: INSERT INTO gpolygon_tbl VALUES ( '(0,1000,1000,1000)' );
 statement: CREATE TEMP TABLE gcircle_tbl AS                                                                                                                                                                                                                                                        +
     SELECT circle(home_base) AS f1 FROM slow_emp4000;
 statement: CREATE INDEX ggpolygonind ON gpolygon_tbl USING gist (f1);
 statement: CREATE INDEX ggcircleind ON gcircle_tbl USING gist (f1);
 statement: CREATE TABLE quad_point_tbl AS                                                                                                                                                                                                                                                          +
     SELECT point(unique1,unique2) AS p FROM tenk1;
 statement: INSERT INTO quad_point_tbl                                                                                                                                                                                                                                                              +
     SELECT '(333.0,400.0)'::point FROM generate_series(1,1000);
 statement: INSERT INTO quad_point_tbl VALUES (NULL), (NULL), (NULL);
 statement: CREATE INDEX sp_quad_ind ON quad_point_tbl USING spgist (p);
 statement: CREATE TABLE kd_point_tbl AS SELECT * FROM quad_point_tbl;
 statement: CREATE INDEX sp_kd_ind ON kd_point_tbl USING spgist (p kd_point_ops);
 statement: CREATE TABLE radix_text_tbl AS                                                                                                                                                                                                                                                          +
     SELECT name AS t FROM road WHERE name !~ '^[0-9]';
 statement: INSERT INTO radix_text_tbl                                                                                                                                                                                                                                                              +
     SELECT 'P0123456789abcdef' FROM generate_series(1,1000);
 statement: INSERT INTO radix_text_tbl VALUES ('P0123456789abcde');
 statement: INSERT INTO radix_text_tbl VALUES ('P0123456789abcdefF');
 statement: CREATE INDEX sp_radix_ind ON radix_text_tbl USING spgist (t);
 statement: SET enable_seqscan = ON;
 statement: SET enable_indexscan = OFF;
 statement: SET enable_bitmapscan = OFF;
 statement: SELECT * FROM fast_emp4000                                                                                                                                                                                                                                                              +
     WHERE home_base @ '(200,200),(2000,1000)'::box                                                                                                                                                                                                                                                 +
     ORDER BY (home_base[0])[0];
 statement: SELECT count(*) FROM fast_emp4000 WHERE home_base && '(1000,1000,0,0)'::box;
 statement: SELECT count(*) FROM fast_emp4000 WHERE home_base IS NULL;
 statement: SELECT * FROM polygon_tbl WHERE f1 ~ '((1,1),(2,2),(2,1))'::polygon                                                                                                                                                                                                                     +
     ORDER BY (poly_center(f1))[0];
 statement: SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)                                                                                                                                                                                                                             +
     ORDER BY area(f1);
 statement: SELECT count(*) FROM gpolygon_tbl WHERE f1 && '(1000,1000,0,0)'::polygon;
 statement: SELECT count(*) FROM gcircle_tbl WHERE f1 && '<(500,500),500>'::circle;
 statement: SELECT count(*) FROM point_tbl WHERE f1 <@ box '(0,0,100,100)';
 statement: SELECT count(*) FROM point_tbl WHERE box '(0,0,100,100)' @> f1;
 statement: SELECT count(*) FROM point_tbl WHERE f1 <@ polygon '(0,0),(0,100),(100,100),(50,50),(100,0),(0,0)';
 statement: SELECT count(*) FROM point_tbl WHERE f1 <@ circle '<(50,50),50>';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 << '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 >> '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 <^ '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 >^ '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 ~= '(-5, -12)';
 statement: SELECT * FROM point_tbl ORDER BY f1 <-> '0,1';
 statement: SELECT * FROM point_tbl WHERE f1 IS NULL;
 statement: SELECT * FROM point_tbl WHERE f1 IS NOT NULL ORDER BY f1 <-> '0,1';
 statement: SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p IS NULL;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p IS NOT NULL;
 statement: SELECT count(*) FROM quad_point_tbl;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p << '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p >> '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p <^ '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p >^ '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p ~= '(4585, 365)';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdef';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcde';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdefF';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t <    'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~<~  'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t <=   'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~<=~ 'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t =    'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t =    'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t >=   'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~>=~ 'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t >    'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~>~  'Worth                         St  ';
 statement: SELECT * FROM gpolygon_tbl ORDER BY f1 <-> '(0,0)'::point LIMIT 10;
 statement: SELECT circle_center(f1), round(radius(f1)) as radius FROM gcircle_tbl ORDER BY f1 <-> '(200,300)'::point LIMIT 10;
 statement: SET enable_seqscan = OFF;
 statement: SET enable_indexscan = ON;
 statement: SET enable_bitmapscan = OFF;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM fast_emp4000                                                                                                                                                                                                                                                                         +
     WHERE home_base @ '(200,200),(2000,1000)'::box                                                                                                                                                                                                                                                 +
     ORDER BY (home_base[0])[0];
 statement: SELECT * FROM fast_emp4000                                                                                                                                                                                                                                                              +
     WHERE home_base @ '(200,200),(2000,1000)'::box                                                                                                                                                                                                                                                 +
     ORDER BY (home_base[0])[0];
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM fast_emp4000 WHERE home_base && '(1000,1000,0,0)'::box;
 statement: SELECT count(*) FROM fast_emp4000 WHERE home_base && '(1000,1000,0,0)'::box;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM fast_emp4000 WHERE home_base IS NULL;
 statement: SELECT count(*) FROM fast_emp4000 WHERE home_base IS NULL;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM polygon_tbl WHERE f1 ~ '((1,1),(2,2),(2,1))'::polygon                                                                                                                                                                                                                                +
     ORDER BY (poly_center(f1))[0];
 statement: SELECT * FROM polygon_tbl WHERE f1 ~ '((1,1),(2,2),(2,1))'::polygon                                                                                                                                                                                                                     +
     ORDER BY (poly_center(f1))[0];
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)                                                                                                                                                                                                                                        +
     ORDER BY area(f1);
 statement: SELECT * FROM circle_tbl WHERE f1 && circle(point(1,-2), 1)                                                                                                                                                                                                                             +
     ORDER BY area(f1);
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM gpolygon_tbl WHERE f1 && '(1000,1000,0,0)'::polygon;
 statement: SELECT count(*) FROM gpolygon_tbl WHERE f1 && '(1000,1000,0,0)'::polygon;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM gcircle_tbl WHERE f1 && '<(500,500),500>'::circle;
 statement: SELECT count(*) FROM gcircle_tbl WHERE f1 && '<(500,500),500>'::circle;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl WHERE f1 <@ box '(0,0,100,100)';
 statement: SELECT count(*) FROM point_tbl WHERE f1 <@ box '(0,0,100,100)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl WHERE box '(0,0,100,100)' @> f1;
 statement: SELECT count(*) FROM point_tbl WHERE box '(0,0,100,100)' @> f1;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl WHERE f1 <@ polygon '(0,0),(0,100),(100,100),(50,50),(100,0),(0,0)';
 statement: SELECT count(*) FROM point_tbl WHERE f1 <@ polygon '(0,0),(0,100),(100,100),(50,50),(100,0),(0,0)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl WHERE f1 <@ circle '<(50,50),50>';
 statement: SELECT count(*) FROM point_tbl WHERE f1 <@ circle '<(50,50),50>';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl p WHERE p.f1 << '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 << '(0.0, 0.0)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl p WHERE p.f1 >> '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 >> '(0.0, 0.0)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl p WHERE p.f1 <^ '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 <^ '(0.0, 0.0)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl p WHERE p.f1 >^ '(0.0, 0.0)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 >^ '(0.0, 0.0)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM point_tbl p WHERE p.f1 ~= '(-5, -12)';
 statement: SELECT count(*) FROM point_tbl p WHERE p.f1 ~= '(-5, -12)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM point_tbl ORDER BY f1 <-> '0,1';
 statement: SELECT * FROM point_tbl ORDER BY f1 <-> '0,1';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM point_tbl WHERE f1 IS NULL;
 statement: SELECT * FROM point_tbl WHERE f1 IS NULL;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM point_tbl WHERE f1 IS NOT NULL ORDER BY f1 <-> '0,1';
 statement: SELECT * FROM point_tbl WHERE f1 IS NOT NULL ORDER BY f1 <-> '0,1';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1';
 statement: SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p IS NULL;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p IS NULL;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p IS NOT NULL;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p IS NOT NULL;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl;
 statement: SELECT count(*) FROM quad_point_tbl;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: SELECT count(*) FROM quad_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p << '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p << '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p >> '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p >> '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p <^ '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p <^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p >^ '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p >^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p ~= '(4585, 365)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p ~= '(4585, 365)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: SELECT count(*) FROM kd_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p << '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p << '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p >> '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p >> '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p <^ '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p <^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p >^ '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p >^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p ~= '(4585, 365)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p ~= '(4585, 365)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdef';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdef';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcde';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcde';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdefF';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdefF';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t <    'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t <    'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~<~  'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~<~  'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t <=   'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t <=   'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~<=~ 'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~<=~ 'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t =    'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t =    'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t =    'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t =    'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t >=   'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t >=   'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~>=~ 'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~>=~ 'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t >    'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t >    'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~>~  'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~>~  'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM gpolygon_tbl ORDER BY f1 <-> '(0,0)'::point LIMIT 10;
 statement: SELECT * FROM gpolygon_tbl ORDER BY f1 <-> '(0,0)'::point LIMIT 10;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT circle_center(f1), round(radius(f1)) as radius FROM gcircle_tbl ORDER BY f1 <-> '(200,300)'::point LIMIT 10;
 statement: SELECT circle_center(f1), round(radius(f1)) as radius FROM gcircle_tbl ORDER BY f1 <-> '(200,300)'::point LIMIT 10;
 statement: SET enable_seqscan = OFF;
 statement: SET enable_indexscan = OFF;
 statement: SET enable_bitmapscan = ON;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1';
 statement: SELECT * FROM point_tbl WHERE f1 <@ '(-10,-10),(10,10)':: box ORDER BY f1 <-> '0,1';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p IS NULL;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p IS NULL;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p IS NOT NULL;
 statement: SELECT count(*) FROM quad_point_tbl WHERE p IS NOT NULL;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl;
 statement: SELECT count(*) FROM quad_point_tbl;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: SELECT count(*) FROM quad_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p << '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p << '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p >> '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p >> '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p <^ '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p <^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p >^ '(5000, 4000)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p >^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM quad_point_tbl WHERE p ~= '(4585, 365)';
 statement: SELECT count(*) FROM quad_point_tbl WHERE p ~= '(4585, 365)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p <@ box '(200,200,1000,1000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: SELECT count(*) FROM kd_point_tbl WHERE box '(200,200,1000,1000)' @> p;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p << '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p << '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p >> '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p >> '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p <^ '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p <^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p >^ '(5000, 4000)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p >^ '(5000, 4000)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM kd_point_tbl WHERE p ~= '(4585, 365)';
 statement: SELECT count(*) FROM kd_point_tbl WHERE p ~= '(4585, 365)';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdef';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdef';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcde';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcde';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdefF';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t = 'P0123456789abcdefF';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t <    'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t <    'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~<~  'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~<~  'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t <=   'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t <=   'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~<=~ 'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~<=~ 'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t =    'Aztec                         Ct  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t =    'Aztec                         Ct  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t =    'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t =    'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t >=   'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t >=   'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~>=~ 'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~>=~ 'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t >    'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t >    'Worth                         St  ';
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM radix_text_tbl WHERE t ~>~  'Worth                         St  ';
 statement: SELECT count(*) FROM radix_text_tbl WHERE t ~>~  'Worth                         St  ';
 statement: RESET enable_seqscan;
 statement: RESET enable_indexscan;
 statement: RESET enable_bitmapscan;
 statement: SET enable_seqscan = OFF;
 statement: SET enable_indexscan = OFF;
 statement: SET enable_bitmapscan = ON;
 statement: CREATE INDEX intarrayidx ON array_index_op_test USING gin (i);
 statement: explain (costs off)                                                                                                                                                                                                                                                                     +
 SELECT * FROM array_index_op_test WHERE i @> '{32}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i @> '{32}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i && '{32}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i @> '{17}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i && '{17}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i @> '{32,17}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i && '{32,17}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i <@ '{38,34,32,89}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i = '{47,77}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i = '{}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i @> '{}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i && '{}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i <@ '{}' ORDER BY seqno;
 statement: SELECT * FROM array_op_test WHERE i = '{NULL}' ORDER BY seqno;
 statement: SELECT * FROM array_op_test WHERE i @> '{NULL}' ORDER BY seqno;
 statement: SELECT * FROM array_op_test WHERE i && '{NULL}' ORDER BY seqno;
 statement: SELECT * FROM array_op_test WHERE i <@ '{NULL}' ORDER BY seqno;
 statement: CREATE INDEX textarrayidx ON array_index_op_test USING gin (t);
 statement: explain (costs off)                                                                                                                                                                                                                                                                     +
 SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAA72908}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAA72908}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t && '{AAAAAAAA72908}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAAAA646}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t && '{AAAAAAAAAA646}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAAA72908,AAAAAAAAAA646}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t && '{AAAAAAAA72908,AAAAAAAAAA646}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t <@ '{AAAAAAAA72908,AAAAAAAAAAAAAAAAAAA17075,AA88409,AAAAAAAAAAAAAAAAAA36842,AAAAAAA48038,AAAAAAAAAAAAAA10611}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t = '{AAAAAAAAAA646,A87088}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t = '{}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t @> '{}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t && '{}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t <@ '{}' ORDER BY seqno;
 statement: DROP INDEX intarrayidx, textarrayidx;
 statement: CREATE INDEX botharrayidx ON array_index_op_test USING gin (i, t);
 statement: SELECT * FROM array_index_op_test WHERE i @> '{32}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i && '{32}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t @> '{AAAAAAA80240}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t && '{AAAAAAA80240}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i @> '{32}' AND t && '{AAAAAAA80240}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE i && '{32}' AND t @> '{AAAAAAA80240}' ORDER BY seqno;
 statement: SELECT * FROM array_index_op_test WHERE t = '{}' ORDER BY seqno;
 statement: SELECT * FROM array_op_test WHERE i = '{NULL}' ORDER BY seqno;
 statement: SELECT * FROM array_op_test WHERE i <@ '{NULL}' ORDER BY seqno;
 statement: RESET enable_seqscan;
 statement: RESET enable_indexscan;
 statement: RESET enable_bitmapscan;
 statement: CREATE TABLE array_gin_test (a int[]);
 statement: INSERT INTO array_gin_test SELECT ARRAY[1, g%5, g] FROM generate_series(1, 10000) g;
 statement: CREATE INDEX array_gin_test_idx ON array_gin_test USING gin (a);
 statement: SELECT COUNT(*) FROM array_gin_test WHERE a @> '{2}';
 statement: DROP TABLE array_gin_test;
 statement: CREATE INDEX gin_relopts_test ON array_index_op_test USING gin (i)                                                                                                                                                                                                                      +
   WITH (FASTUPDATE=on, GIN_PENDING_LIST_LIMIT=128);
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(gin_relopts_test)$'                                                                                                                                                                                                                                                           +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: CREATE INDEX hash_i4_index ON hash_i4_heap USING hash (random int4_ops);
 statement: CREATE INDEX hash_name_index ON hash_name_heap USING hash (random name_ops);
 statement: CREATE INDEX hash_txt_index ON hash_txt_heap USING hash (random text_ops);
 statement: CREATE INDEX hash_f8_index ON hash_f8_heap USING hash (random float8_ops);
 statement: CREATE UNLOGGED TABLE unlogged_hash_table (id int4);
 statement: CREATE INDEX unlogged_hash_index ON unlogged_hash_table USING hash (id int4_ops);
 statement: DROP TABLE unlogged_hash_table;
 statement: CREATE TABLE func_index_heap (f1 text, f2 text);
 statement: CREATE UNIQUE INDEX func_index_index on func_index_heap (textcat(f1,f2));
 statement: INSERT INTO func_index_heap VALUES('ABC','DEF');
 statement: INSERT INTO func_index_heap VALUES('AB','CDEFG');
 statement: INSERT INTO func_index_heap VALUES('QWE','RTY');
 statement: INSERT INTO func_index_heap VALUES('ABCD', 'EF');
 statement: INSERT INTO func_index_heap VALUES('QWERTY');
 statement: DROP TABLE func_index_heap;
 statement: CREATE TABLE func_index_heap (f1 text, f2 text);
 statement: CREATE UNIQUE INDEX func_index_index on func_index_heap ((f1 || f2) text_ops);
 statement: INSERT INTO func_index_heap VALUES('ABC','DEF');
 statement: INSERT INTO func_index_heap VALUES('AB','CDEFG');
 statement: INSERT INTO func_index_heap VALUES('QWE','RTY');
 statement: INSERT INTO func_index_heap VALUES('ABCD', 'EF');
 statement: INSERT INTO func_index_heap VALUES('QWERTY');
 statement: create unique index hash_f8_index_1 on hash_f8_heap(abs(random));
 statement: create unique index hash_f8_index_2 on hash_f8_heap((seqno + 1), random);
 statement: create unique index hash_f8_index_3 on hash_f8_heap(random) where seqno > 1000;
 statement: CREATE TABLE concur_heap (f1 text, f2 text);
 statement: CREATE INDEX CONCURRENTLY concur_index1 ON concur_heap(f2,f1);
 statement: CREATE INDEX CONCURRENTLY IF NOT EXISTS concur_index1 ON concur_heap(f2,f1);
 statement: INSERT INTO concur_heap VALUES  ('a','b');
 statement: INSERT INTO concur_heap VALUES  ('b','b');
 statement: CREATE UNIQUE INDEX CONCURRENTLY concur_index2 ON concur_heap(f1);
 statement: CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS concur_index2 ON concur_heap(f1);
 statement: INSERT INTO concur_heap VALUES ('b','x');
 statement: CREATE UNIQUE INDEX CONCURRENTLY concur_index3 ON concur_heap(f2);
 statement: CREATE INDEX CONCURRENTLY concur_index4 on concur_heap(f2) WHERE f1='a';
 statement: CREATE INDEX CONCURRENTLY concur_index5 on concur_heap(f2) WHERE f1='x';
 statement: CREATE INDEX CONCURRENTLY on concur_heap((f2||f1));
 statement: BEGIN;
 statement: CREATE INDEX CONCURRENTLY concur_index7 ON concur_heap(f1);
 statement: COMMIT;
 statement: BEGIN;
 statement: CREATE INDEX std_index on concur_heap(f2);
 statement: COMMIT;
 statement: VACUUM FULL concur_heap;
 statement: REINDEX TABLE concur_heap;
 statement: DELETE FROM concur_heap WHERE f1 = 'b';
 statement: VACUUM FULL concur_heap;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(concur_heap)$'                                                                                                                                                                                                                                                                +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19853';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19853' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                                                    +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                                                          +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                                                          +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                                                       +
 WHERE c.oid = '19853' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                                             +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19853' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19853' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19853' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: REINDEX TABLE concur_heap;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(concur_heap)$'                                                                                                                                                                                                                                                                +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19853';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19853' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                                                    +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                                                          +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                                                          +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                                                       +
 WHERE c.oid = '19853' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                                             +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19853' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19853' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19853' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: DROP INDEX CONCURRENTLY "concur_index2";
 statement: DROP INDEX CONCURRENTLY IF EXISTS "concur_index2";
 statement: DROP INDEX CONCURRENTLY "concur_index2", "concur_index3";
 statement: BEGIN;
 statement: DROP INDEX CONCURRENTLY "concur_index5";
 statement: ROLLBACK;
 statement: DROP INDEX CONCURRENTLY IF EXISTS "concur_index3";
 statement: DROP INDEX CONCURRENTLY "concur_index4";
 statement: DROP INDEX CONCURRENTLY "concur_index5";
 statement: DROP INDEX CONCURRENTLY "concur_index1";
 statement: DROP INDEX CONCURRENTLY "concur_heap_expr_idx";
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(concur_heap)$'                                                                                                                                                                                                                                                                +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19853';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19853' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                                                    +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                                                          +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                                                          +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                                                       +
 WHERE c.oid = '19853' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                                             +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19853' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19853' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19853' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: DROP TABLE concur_heap;
 statement: CREATE TABLE cwi_test( a int , b varchar(10), c char);
 statement: INSERT INTO cwi_test VALUES(1, 2), (3, 4), (5, 6);
 statement: CREATE UNIQUE INDEX cwi_uniq_idx ON cwi_test(a , b);
 statement: ALTER TABLE cwi_test ADD primary key USING INDEX cwi_uniq_idx;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(cwi_test)$'                                                                                                                                                                                                                                                                   +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19903';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19903' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                                                    +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                                                          +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                                                          +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                                                       +
 WHERE c.oid = '19903' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                                             +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19903' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19903' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19903' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(cwi_uniq_idx)$'                                                                                                                                                                                                                                                               +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19906';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   pg_catalog.pg_get_indexdef(a.attrelid, a.attnum, TRUE) AS indexdef,                                                                                                                                                                                                                              +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19906' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT i.indisunique, i.indisprimary, i.indisclustered, i.indisvalid,                                                                                                                                                                                                                   +
   (NOT i.indimmediate) AND EXISTS (SELECT 1 FROM pg_catalog.pg_constraint WHERE conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x') AND condeferrable) AS condeferrable,                                                                                                +
   (NOT i.indimmediate) AND EXISTS (SELECT 1 FROM pg_catalog.pg_constraint WHERE conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x') AND condeferred) AS condeferred,                                                                                                    +
 i.indisreplident,                                                                                                                                                                                                                                                                                  +
   a.amname, c2.relname, pg_catalog.pg_get_expr(i.indpred, i.indrelid, true)                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_index i, pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_am a                                                                                                                                                                                                      +
 WHERE i.indexrelid = c.oid AND c.oid = '19906' AND c.relam = a.oid                                                                                                                                                                                                                                 +
 AND i.indrelid = c2.oid;
 statement: CREATE UNIQUE INDEX cwi_uniq2_idx ON cwi_test(b , a);
 statement: ALTER TABLE cwi_test DROP CONSTRAINT cwi_uniq_idx,                                                                                                                                                                                                                                      +
         ADD CONSTRAINT cwi_replaced_pkey PRIMARY KEY                                                                                                                                                                                                                                               +
                 USING INDEX cwi_uniq2_idx;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(cwi_test)$'                                                                                                                                                                                                                                                                   +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19903';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19903' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                                                    +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                                                          +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                                                          +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                                                       +
 WHERE c.oid = '19903' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                                             +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19903' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19903' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19903' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(cwi_replaced_pkey)$'                                                                                                                                                                                                                                                          +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19908';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   pg_catalog.pg_get_indexdef(a.attrelid, a.attnum, TRUE) AS indexdef,                                                                                                                                                                                                                              +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19908' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT i.indisunique, i.indisprimary, i.indisclustered, i.indisvalid,                                                                                                                                                                                                                   +
   (NOT i.indimmediate) AND EXISTS (SELECT 1 FROM pg_catalog.pg_constraint WHERE conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x') AND condeferrable) AS condeferrable,                                                                                                +
   (NOT i.indimmediate) AND EXISTS (SELECT 1 FROM pg_catalog.pg_constraint WHERE conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x') AND condeferred) AS condeferred,                                                                                                    +
 i.indisreplident,                                                                                                                                                                                                                                                                                  +
   a.amname, c2.relname, pg_catalog.pg_get_expr(i.indpred, i.indrelid, true)                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_index i, pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_am a                                                                                                                                                                                                      +
 WHERE i.indexrelid = c.oid AND c.oid = '19908' AND c.relam = a.oid                                                                                                                                                                                                                                 +
 AND i.indrelid = c2.oid;
 statement: DROP INDEX cwi_replaced_pkey;
 statement: DROP TABLE cwi_test;
 statement: SELECT unique1, unique2 INTO onek_with_null FROM onek;
 statement: INSERT INTO onek_with_null (unique1,unique2) VALUES (NULL, -1), (NULL, NULL);
 statement: CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2,unique1);
 statement: SET enable_seqscan = OFF;
 statement: SET enable_indexscan = ON;
 statement: SET enable_bitmapscan = ON;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL AND unique1 > 500;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique1 > 500;
 statement: DROP INDEX onek_nulltest;
 statement: CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2 desc,unique1);
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL AND unique1 > 500;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique1 > 500;
 statement: DROP INDEX onek_nulltest;
 statement: CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2 desc nulls last,unique1);
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL AND unique1 > 500;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique1 > 500;
 statement: DROP INDEX onek_nulltest;
 statement: CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2  nulls first,unique1);
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique2 IS NOT NULL;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NOT NULL AND unique1 > 500;
 statement: SELECT count(*) FROM onek_with_null WHERE unique1 IS NULL AND unique1 > 500;
 statement: DROP INDEX onek_nulltest;
 statement: CREATE UNIQUE INDEX onek_nulltest ON onek_with_null (unique2);
 statement: SET enable_seqscan = OFF;
 statement: SET enable_indexscan = ON;
 statement: SET enable_bitmapscan = OFF;
 statement: SELECT unique1, unique2 FROM onek_with_null                                                                                                                                                                                                                                             +
   ORDER BY unique2 LIMIT 2;
 statement: SELECT unique1, unique2 FROM onek_with_null WHERE unique2 >= -1                                                                                                                                                                                                                         +
   ORDER BY unique2 LIMIT 2;
 statement: SELECT unique1, unique2 FROM onek_with_null WHERE unique2 >= 0                                                                                                                                                                                                                          +
   ORDER BY unique2 LIMIT 2;
 statement: SELECT unique1, unique2 FROM onek_with_null                                                                                                                                                                                                                                             +
   ORDER BY unique2 DESC LIMIT 2;
 statement: SELECT unique1, unique2 FROM onek_with_null WHERE unique2 >= -1                                                                                                                                                                                                                         +
   ORDER BY unique2 DESC LIMIT 2;
 statement: SELECT unique1, unique2 FROM onek_with_null WHERE unique2 < 999                                                                                                                                                                                                                         +
   ORDER BY unique2 DESC LIMIT 2;
 statement: RESET enable_seqscan;
 statement: RESET enable_indexscan;
 statement: RESET enable_bitmapscan;
 statement: DROP TABLE onek_with_null;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT * FROM tenk1                                                                                                                                                                                                                                                                                +
   WHERE thousand = 42 AND (tenthous = 1 OR tenthous = 3 OR tenthous = 42);
 statement: SELECT * FROM tenk1                                                                                                                                                                                                                                                                     +
   WHERE thousand = 42 AND (tenthous = 1 OR tenthous = 3 OR tenthous = 42);
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
 SELECT count(*) FROM tenk1                                                                                                                                                                                                                                                                         +
   WHERE hundred = 42 AND (thousand = 42 OR thousand = 99);
 statement: SELECT count(*) FROM tenk1                                                                                                                                                                                                                                                              +
   WHERE hundred = 42 AND (thousand = 42 OR thousand = 99);
 statement: CREATE TABLE dupindexcols AS                                                                                                                                                                                                                                                            +
   SELECT unique1 as id, stringu2::text as f1 FROM tenk1;
 statement: CREATE INDEX dupindexcols_i ON dupindexcols (f1, id, f1 text_pattern_ops);
 statement: ANALYZE dupindexcols;
 statement: EXPLAIN (COSTS OFF)                                                                                                                                                                                                                                                                     +
   SELECT count(*) FROM dupindexcols                                                                                                                                                                                                                                                                +
     WHERE f1 BETWEEN 'WA' AND 'ZZZ' and id < 1000 and f1 ~<~ 'YX';
 statement: SELECT count(*) FROM dupindexcols                                                                                                                                                                                                                                                       +
   WHERE f1 BETWEEN 'WA' AND 'ZZZ' and id < 1000 and f1 ~<~ 'YX';
 statement: vacuum tenk1;
 statement: explain (costs off)                                                                                                                                                                                                                                                                     +
 SELECT unique1 FROM tenk1                                                                                                                                                                                                                                                                          +
 WHERE unique1 IN (1,42,7)                                                                                                                                                                                                                                                                          +
 ORDER BY unique1;
 statement: SELECT unique1 FROM tenk1                                                                                                                                                                                                                                                               +
 WHERE unique1 IN (1,42,7)                                                                                                                                                                                                                                                                          +
 ORDER BY unique1;
 statement: explain (costs off)                                                                                                                                                                                                                                                                     +
 SELECT thousand, tenthous FROM tenk1                                                                                                                                                                                                                                                               +
 WHERE thousand < 2 AND tenthous IN (1001,3000)                                                                                                                                                                                                                                                     +
 ORDER BY thousand;
 statement: SELECT thousand, tenthous FROM tenk1                                                                                                                                                                                                                                                    +
 WHERE thousand < 2 AND tenthous IN (1001,3000)                                                                                                                                                                                                                                                     +
 ORDER BY thousand;
 statement: SET enable_indexonlyscan = OFF;
 statement: explain (costs off)                                                                                                                                                                                                                                                                     +
 SELECT thousand, tenthous FROM tenk1                                                                                                                                                                                                                                                               +
 WHERE thousand < 2 AND tenthous IN (1001,3000)                                                                                                                                                                                                                                                     +
 ORDER BY thousand;
 statement: SELECT thousand, tenthous FROM tenk1                                                                                                                                                                                                                                                    +
 WHERE thousand < 2 AND tenthous IN (1001,3000)                                                                                                                                                                                                                                                     +
 ORDER BY thousand;
 statement: RESET enable_indexonlyscan;
 statement: explain (costs off)                                                                                                                                                                                                                                                                     +
   select * from tenk1 where (thousand, tenthous) in ((1,1001), (null,null));
 statement: CREATE TABLE reindex_verbose(id integer primary key);
 statement: REINDEX (VERBOSE) TABLE reindex_verbose;
 statement: DROP TABLE reindex_verbose;
 statement: REINDEX SCHEMA schema_to_reindex;
 statement: CREATE SCHEMA schema_to_reindex;
 statement: SET search_path = 'schema_to_reindex';
 statement: CREATE TABLE table1(col1 SERIAL PRIMARY KEY);
 statement: INSERT INTO table1 SELECT generate_series(1,400);
 statement: CREATE TABLE table2(col1 SERIAL PRIMARY KEY, col2 TEXT NOT NULL);
 statement: INSERT INTO table2 SELECT generate_series(1,400), 'abc';
 statement: CREATE INDEX ON table2(col2);
 statement: CREATE MATERIALIZED VIEW matview AS SELECT col1 FROM table2;
 statement: CREATE INDEX ON matview(col1);
 statement: CREATE VIEW view AS SELECT col2 FROM table2;
 statement: CREATE TABLE reindex_before AS                                                                                                                                                                                                                                                          +
 SELECT oid, relname, relfilenode, relkind, reltoastrelid                                                                                                                                                                                                                                           +
         FROM pg_class                                                                                                                                                                                                                                                                              +
         where relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'schema_to_reindex');
 statement: INSERT INTO reindex_before                                                                                                                                                                                                                                                              +
 SELECT oid, 'pg_toast_TABLE', relfilenode, relkind, reltoastrelid                                                                                                                                                                                                                                  +
 FROM pg_class WHERE oid IN                                                                                                                                                                                                                                                                         +
         (SELECT reltoastrelid FROM reindex_before WHERE reltoastrelid > 0);
 statement: INSERT INTO reindex_before                                                                                                                                                                                                                                                              +
 SELECT oid, 'pg_toast_TABLE_index', relfilenode, relkind, reltoastrelid                                                                                                                                                                                                                            +
 FROM pg_class where oid in                                                                                                                                                                                                                                                                         +
         (select indexrelid from pg_index where indrelid in                                                                                                                                                                                                                                         +
                 (select reltoastrelid from reindex_before where reltoastrelid > 0));
 statement: REINDEX SCHEMA schema_to_reindex;
 statement: CREATE TABLE reindex_after AS SELECT oid, relname, relfilenode, relkind                                                                                                                                                                                                                 +
         FROM pg_class                                                                                                                                                                                                                                                                              +
         where relnamespace = (SELECT oid FROM pg_namespace WHERE nspname = 'schema_to_reindex');
 statement: SELECT  b.relname,                                                                                                                                                                                                                                                                      +
         b.relkind,                                                                                                                                                                                                                                                                                 +
         CASE WHEN a.relfilenode = b.relfilenode THEN 'relfilenode is unchanged'                                                                                                                                                                                                                    +
         ELSE 'relfilenode has changed' END                                                                                                                                                                                                                                                         +
   FROM reindex_before b JOIN pg_class a ON b.oid = a.oid                                                                                                                                                                                                                                           +
   ORDER BY 1;
 statement: REINDEX SCHEMA schema_to_reindex;
 statement: BEGIN;
 statement: REINDEX SCHEMA schema_to_reindex;
 statement: END;
 statement: CREATE ROLE regression_reindexuser NOLOGIN;
 statement: SET SESSION ROLE regression_reindexuser;
 statement: REINDEX SCHEMA schema_to_reindex;
 statement: RESET ROLE;
 statement: DROP ROLE regression_reindexuser;
 statement: SET client_min_messages TO 'warning';
 statement: DROP SCHEMA schema_to_reindex CASCADE;
 statement: RESET client_min_messages;

