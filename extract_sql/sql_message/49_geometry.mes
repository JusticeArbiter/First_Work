LOG:  statement: select message from postgres_log where query is null;
 statement: SET extra_float_digits TO -3;
 statement: SELECT '' AS four, center(f1) AS center                                                +
    FROM BOX_TBL;
 statement: SELECT '' AS four, (@@ f1) AS center                                                   +
    FROM BOX_TBL;
 statement: SELECT '' AS six, point(f1) AS center                                                  +
    FROM CIRCLE_TBL;
 statement: SELECT '' AS six, (@@ f1) AS center                                                    +
    FROM CIRCLE_TBL;
 statement: SELECT '' AS two, (@@ f1) AS center                                                    +
    FROM POLYGON_TBL                                                                               +
    WHERE (# f1) > 2;
 statement: SELECT '' AS two, p1.f1                                                                +
    FROM POINT_TBL p1                                                                              +
    WHERE ishorizontal(p1.f1, point '(0,0)');
 statement: SELECT '' AS two, p1.f1                                                                +
    FROM POINT_TBL p1                                                                              +
    WHERE p1.f1 ?- point '(0,0)';
 statement: SELECT '' AS one, p1.f1                                                                +
    FROM POINT_TBL p1                                                                              +
    WHERE isvertical(p1.f1, point '(5.1,34.5)');
 statement: SELECT '' AS one, p1.f1                                                                +
    FROM POINT_TBL p1                                                                              +
    WHERE p1.f1 ?| point '(5.1,34.5)';
 statement: SELECT '' AS count, p.f1, l.s, l.s # p.f1 AS intersection                              +
    FROM LSEG_TBL l, POINT_TBL p;
 statement: SELECT '' AS thirty, p.f1, l.s, p.f1 ## l.s AS closest                                 +
    FROM LSEG_TBL l, POINT_TBL p;
 statement: SELECT '' as six, box(f1) AS box FROM CIRCLE_TBL;
 statement: SELECT '' AS twentyfour, b.f1 + p.f1 AS translation                                    +
    FROM BOX_TBL b, POINT_TBL p;
 statement: SELECT '' AS twentyfour, b.f1 - p.f1 AS translation                                    +
    FROM BOX_TBL b, POINT_TBL p;
 statement: SELECT '' AS twentyfour, b.f1 * p.f1 AS rotation                                       +
    FROM BOX_TBL b, POINT_TBL p;
 statement: SELECT '' AS twenty, b.f1 / p.f1 AS rotation                                           +
    FROM BOX_TBL b, POINT_TBL p                                                                    +
    WHERE (p.f1 <-> point '(0,0)') >= 1;
 statement: SELECT f1::box                                                                         +
         FROM POINT_TBL;
 statement: SELECT bound_box(a.f1, b.f1)                                                           +
         FROM BOX_TBL a, BOX_TBL b;
 statement: SELECT '' AS eight, npoints(f1) AS npoints, f1 AS path FROM PATH_TBL;
 statement: SELECT '' AS four, path(f1) FROM POLYGON_TBL;
 statement: SELECT '' AS eight, p1.f1 + point '(10,10)' AS dist_add                                +
    FROM PATH_TBL p1;
 statement: SELECT '' AS eight, p1.f1 * point '(2,-1)' AS dist_mul                                 +
    FROM PATH_TBL p1;
 statement: SELECT '' AS twentyfour, p.f1, poly.f1, poly.f1 @> p.f1 AS contains                    +
    FROM POLYGON_TBL poly, POINT_TBL p;
 statement: SELECT '' AS twentyfour, p.f1, poly.f1, p.f1 <@ poly.f1 AS contained                   +
    FROM POLYGON_TBL poly, POINT_TBL p;
 statement: SELECT '' AS four, npoints(f1) AS npoints, f1 AS polygon                               +
    FROM POLYGON_TBL;
 statement: SELECT '' AS four, polygon(f1)                                                         +
    FROM BOX_TBL;
 statement: SELECT '' AS four, polygon(f1)                                                         +
    FROM PATH_TBL WHERE isclosed(f1);
 statement: SELECT '' AS four, f1 AS open_path, polygon( pclose(f1)) AS polygon                    +
    FROM PATH_TBL                                                                                  +
    WHERE isopen(f1);
 statement: SELECT '' AS six, polygon(f1)                                                          +
    FROM CIRCLE_TBL;
 statement: SELECT '' AS six, polygon(8, f1)                                                       +
    FROM CIRCLE_TBL;
 statement: SELECT '' AS six, circle(f1, 50.0)                                                     +
    FROM POINT_TBL;
 statement: SELECT '' AS four, circle(f1)                                                          +
    FROM BOX_TBL;
 statement: SELECT '' AS two, circle(f1)                                                           +
    FROM POLYGON_TBL                                                                               +
    WHERE (# f1) >= 3;
 statement: SELECT '' AS twentyfour, c1.f1 AS circle, p1.f1 AS point, (p1.f1 <-> c1.f1) AS distance+
    FROM CIRCLE_TBL c1, POINT_TBL p1                                                               +
    WHERE (p1.f1 <-> c1.f1) > 0                                                                    +
    ORDER BY distance, area(c1.f1), p1.f1[0];

