LOG:  statement: select message from postgres_log where query is null;
 statement: SELECT '""'::jsonb;
 statement: SELECT $$''$$::jsonb;
 statement: SELECT '"abc"'::jsonb;
 statement: SELECT '"abc'::jsonb;
 statement: SELECT '"abc                                                                                                                                                                                                             +
 def"'::jsonb;
 statement: SELECT '"\n\"\\"'::jsonb;
 statement: SELECT '"\v"'::jsonb;
 statement: SELECT '1'::jsonb;
 statement: SELECT '0'::jsonb;
 statement: SELECT '01'::jsonb;
 statement: SELECT '0.1'::jsonb;
 statement: SELECT '9223372036854775808'::jsonb;
 statement: SELECT '1e100'::jsonb;
 statement: SELECT '1.3e100'::jsonb;
 statement: SELECT '1f2'::jsonb;
 statement: SELECT '0.x1'::jsonb;
 statement: SELECT '1.3ex100'::jsonb;
 statement: SELECT '[]'::jsonb;
 statement: SELECT '[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'::jsonb;
 statement: SELECT '[1,2]'::jsonb;
 statement: SELECT '[1,2,]'::jsonb;
 statement: SELECT '[1,2'::jsonb;
 statement: SELECT '[1,[2]'::jsonb;
 statement: SELECT '{}'::jsonb;
 statement: SELECT '{"abc"}'::jsonb;
 statement: SELECT '{"abc":1}'::jsonb;
 statement: SELECT '{1:"abc"}'::jsonb;
 statement: SELECT '{"abc",1}'::jsonb;
 statement: SELECT '{"abc"=1}'::jsonb;
 statement: SELECT '{"abc"::1}'::jsonb;
 statement: SELECT '{"abc":1,"def":2,"ghi":[3,4],"hij":{"klm":5,"nop":[6]}}'::jsonb;
 statement: SELECT '{"abc":1:2}'::jsonb;
 statement: SELECT '{"abc":1,3}'::jsonb;
 statement: SET max_stack_depth = '100kB';
 statement: SELECT repeat('[', 10000)::jsonb;
 statement: SELECT repeat('{"a":', 10000)::jsonb;
 statement: RESET max_stack_depth;
 statement: SELECT 'true'::jsonb;
 statement: SELECT 'false'::jsonb;
 statement: SELECT 'null'::jsonb;
 statement: SELECT ' true '::jsonb;
 statement: SELECT 'true false'::jsonb;
 statement: SELECT 'true, false'::jsonb;
 statement: SELECT 'truf'::jsonb;
 statement: SELECT 'trues'::jsonb;
 statement: SELECT ''::jsonb;
 statement: SELECT '    '::jsonb;
 statement: SELECT array_to_json(ARRAY [jsonb '{"a":1}', jsonb '{"b":[2,3]}']);
 statement: select to_jsonb(timestamp '2014-05-28 12:22:35.614298');
 statement: BEGIN;
 statement: SET LOCAL TIME ZONE 10.5;
 statement: select to_jsonb(timestamptz '2014-05-28 12:22:35.614298-04');
 statement: SET LOCAL TIME ZONE -8;
 statement: select to_jsonb(timestamptz '2014-05-28 12:22:35.614298-04');
 statement: COMMIT;
 statement: select to_jsonb(date '2014-05-28');
 statement: select to_jsonb(date 'Infinity');
 statement: select to_jsonb(date '-Infinity');
 statement: select to_jsonb(timestamp 'Infinity');
 statement: select to_jsonb(timestamp '-Infinity');
 statement: select to_jsonb(timestamptz 'Infinity');
 statement: select to_jsonb(timestamptz '-Infinity');
 statement: CREATE TEMP TABLE rows AS                                                                                                                                                                                                +
 SELECT x, 'txt' || x as y                                                                                                                                                                                                           +
 FROM generate_series(1,3) AS x;
 statement: SELECT jsonb_agg(q)                                                                                                                                                                                                      +
   FROM ( SELECT $$a$$ || x AS b, y AS c,                                                                                                                                                                                            +
                ARRAY[ROW(x.*,ARRAY[1,2,3]),                                                                                                                                                                                         +
                ROW(y.*,ARRAY[4,5,6])] AS z                                                                                                                                                                                          +
          FROM generate_series(1,2) x,                                                                                                                                                                                               +
               generate_series(4,5) y) q;
 statement: SELECT jsonb_agg(q ORDER BY x, y)                                                                                                                                                                                        +
   FROM rows q;
 statement: UPDATE rows SET x = NULL WHERE x = 1;
 statement: SELECT jsonb_agg(q ORDER BY x NULLS FIRST, y)                                                                                                                                                                            +
   FROM rows q;
 statement: CREATE TEMP TABLE test_jsonb (                                                                                                                                                                                           +
        json_type text,                                                                                                                                                                                                              +
        test_json jsonb                                                                                                                                                                                                              +
 );
 statement: INSERT INTO test_jsonb VALUES                                                                                                                                                                                            +
 ('scalar','"a scalar"'),                                                                                                                                                                                                            +
 ('array','["zero", "one","two",null,"four","five", [1,2,3],{"f1":9}]'),                                                                                                                                                             +
 ('object','{"field1":"val1","field2":"val2","field3":null, "field4": 4, "field5": [1,2,3], "field6": {"f1":9}}');
 statement: SELECT test_json -> 'x' FROM test_jsonb WHERE json_type = 'scalar';
 statement: SELECT test_json -> 'x' FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json -> 'x' FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json -> 'field2' FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json ->> 'field2' FROM test_jsonb WHERE json_type = 'scalar';
 statement: SELECT test_json ->> 'field2' FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json ->> 'field2' FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json -> 2 FROM test_jsonb WHERE json_type = 'scalar';
 statement: SELECT test_json -> 2 FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json -> 9 FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json -> 2 FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json ->> 6 FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json ->> 7 FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json ->> 'field4' FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json ->> 'field5' FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json ->> 'field6' FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT test_json ->> 2 FROM test_jsonb WHERE json_type = 'scalar';
 statement: SELECT test_json ->> 2 FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT test_json ->> 2 FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT jsonb_object_keys(test_json) FROM test_jsonb WHERE json_type = 'scalar';
 statement: SELECT jsonb_object_keys(test_json) FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT jsonb_object_keys(test_json) FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT (test_json->'field3') IS NULL AS expect_false FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT (test_json->>'field3') IS NULL AS expect_true FROM test_jsonb WHERE json_type = 'object';
 statement: SELECT (test_json->3) IS NULL AS expect_false FROM test_jsonb WHERE json_type = 'array';
 statement: SELECT (test_json->>3) IS NULL AS expect_true FROM test_jsonb WHERE json_type = 'array';
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb -> null::text;
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb -> null::int;
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb -> 1;
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb -> 'z';
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb -> '';
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb -> 1;
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb -> 3;
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb -> 'z';
 statement: select '{"a": "c", "b": null}'::jsonb -> 'b';
 statement: select '"foo"'::jsonb -> 1;
 statement: select '"foo"'::jsonb -> 'z';
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb ->> null::text;
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb ->> null::int;
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb ->> 1;
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb ->> 'z';
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb ->> '';
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb ->> 1;
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb ->> 3;
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb ->> 'z';
 statement: select '{"a": "c", "b": null}'::jsonb ->> 'b';
 statement: select '"foo"'::jsonb ->> 1;
 statement: select '"foo"'::jsonb ->> 'z';
 statement: SELECT '{"x":"y"}'::jsonb = '{"x":"y"}'::jsonb;
 statement: SELECT '{"x":"y"}'::jsonb = '{"x":"z"}'::jsonb;
 statement: SELECT '{"x":"y"}'::jsonb <> '{"x":"y"}'::jsonb;
 statement: SELECT '{"x":"y"}'::jsonb <> '{"x":"z"}'::jsonb;
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"a":"b"}');
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"a":"b", "c":null}');
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"a":"b", "g":null}');
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"g":null}');
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"a":"c"}');
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"a":"b"}');
 statement: SELECT jsonb_contains('{"a":"b", "b":1, "c":null}', '{"a":"b", "c":"q"}');
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"a":"b"}';
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"a":"b", "c":null}';
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"a":"b", "g":null}';
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"g":null}';
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"a":"c"}';
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"a":"b"}';
 statement: SELECT '{"a":"b", "b":1, "c":null}'::jsonb @> '{"a":"b", "c":"q"}';
 statement: SELECT '[1,2]'::jsonb @> '[1,2,2]'::jsonb;
 statement: SELECT '[1,1,2]'::jsonb @> '[1,2,2]'::jsonb;
 statement: SELECT '[[1,2]]'::jsonb @> '[[1,2,2]]'::jsonb;
 statement: SELECT '[1,2,2]'::jsonb <@ '[1,2]'::jsonb;
 statement: SELECT '[1,2,2]'::jsonb <@ '[1,1,2]'::jsonb;
 statement: SELECT '[[1,2,2]]'::jsonb <@ '[[1,2]]'::jsonb;
 statement: SELECT jsonb_contained('{"a":"b"}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT jsonb_contained('{"a":"b", "c":null}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT jsonb_contained('{"a":"b", "g":null}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT jsonb_contained('{"g":null}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT jsonb_contained('{"a":"c"}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT jsonb_contained('{"a":"b"}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT jsonb_contained('{"a":"b", "c":"q"}', '{"a":"b", "b":1, "c":null}');
 statement: SELECT '{"a":"b"}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '{"a":"b", "c":null}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '{"a":"b", "g":null}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '{"g":null}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '{"a":"c"}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '{"a":"b"}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '{"a":"b", "c":"q"}'::jsonb <@ '{"a":"b", "b":1, "c":null}';
 statement: SELECT '[5]'::jsonb @> '[5]';
 statement: SELECT '5'::jsonb @> '5';
 statement: SELECT '[5]'::jsonb @> '5';
 statement: SELECT '5'::jsonb @> '[5]';
 statement: SELECT '["9", ["7", "3"], 1]'::jsonb @> '["9", ["7", "3"], 1]'::jsonb;
 statement: SELECT '["9", ["7", "3"], ["1"]]'::jsonb @> '["9", ["7", "3"], ["1"]]'::jsonb;
 statement: SELECT '{ "name": "Bob", "tags": [ "enim", "qui"]}'::jsonb @> '{"tags":["qu"]}';
 statement: SELECT jsonb_array_length('[1,2,3,{"f1":1,"f2":[5,6]},4]');
 statement: SELECT jsonb_array_length('[]');
 statement: SELECT jsonb_array_length('{"f1":1,"f2":[5,6]}');
 statement: SELECT jsonb_array_length('4');
 statement: SELECT jsonb_each('{"f1":[1,2,3],"f2":{"f3":1},"f4":null}');
 statement: SELECT jsonb_each('{"a":{"b":"c","c":"b","1":"first"},"b":[1,2],"c":"cc","1":"first","n":null}'::jsonb) AS q;
 statement: SELECT * FROM jsonb_each('{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":99,"f6":"stringy"}') q;
 statement: SELECT * FROM jsonb_each('{"a":{"b":"c","c":"b","1":"first"},"b":[1,2],"c":"cc","1":"first","n":null}'::jsonb) AS q;
 statement: SELECT jsonb_each_text('{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":"null"}');
 statement: SELECT jsonb_each_text('{"a":{"b":"c","c":"b","1":"first"},"b":[1,2],"c":"cc","1":"first","n":null}'::jsonb) AS q;
 statement: SELECT * FROM jsonb_each_text('{"f1":[1,2,3],"f2":{"f3":1},"f4":null,"f5":99,"f6":"stringy"}') q;
 statement: SELECT * FROM jsonb_each_text('{"a":{"b":"c","c":"b","1":"first"},"b":[1,2],"c":"cc","1":"first","n":null}'::jsonb) AS q;
 statement: SELECT jsonb_exists('{"a":null, "b":"qq"}', 'a');
 statement: SELECT jsonb_exists('{"a":null, "b":"qq"}', 'b');
 statement: SELECT jsonb_exists('{"a":null, "b":"qq"}', 'c');
 statement: SELECT jsonb_exists('{"a":"null", "b":"qq"}', 'a');
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ? 'a';
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ? 'b';
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ? 'c';
 statement: SELECT jsonb '{"a":"null", "b":"qq"}' ? 'a';
 statement: SELECT count(*) from testjsonb  WHERE j->'array' ? 'bar';
 statement: SELECT count(*) from testjsonb  WHERE j->'array' ? '5'::text;
 statement: SELECT count(*) from testjsonb  WHERE j->'array' @> '5'::jsonb;
 statement: SELECT jsonb_exists_any('{"a":null, "b":"qq"}', ARRAY['a','b']);
 statement: SELECT jsonb_exists_any('{"a":null, "b":"qq"}', ARRAY['b','a']);
 statement: SELECT jsonb_exists_any('{"a":null, "b":"qq"}', ARRAY['c','a']);
 statement: SELECT jsonb_exists_any('{"a":null, "b":"qq"}', ARRAY['c','d']);
 statement: SELECT jsonb_exists_any('{"a":null, "b":"qq"}', '{}'::text[]);
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?| ARRAY['a','b'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?| ARRAY['b','a'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?| ARRAY['c','a'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?| ARRAY['c','d'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?| '{}'::text[];
 statement: SELECT jsonb_exists_all('{"a":null, "b":"qq"}', ARRAY['a','b']);
 statement: SELECT jsonb_exists_all('{"a":null, "b":"qq"}', ARRAY['b','a']);
 statement: SELECT jsonb_exists_all('{"a":null, "b":"qq"}', ARRAY['c','a']);
 statement: SELECT jsonb_exists_all('{"a":null, "b":"qq"}', ARRAY['c','d']);
 statement: SELECT jsonb_exists_all('{"a":null, "b":"qq"}', '{}'::text[]);
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?& ARRAY['a','b'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?& ARRAY['b','a'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?& ARRAY['c','a'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?& ARRAY['c','d'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?& ARRAY['a','a', 'b', 'b', 'b'];
 statement: SELECT jsonb '{"a":null, "b":"qq"}' ?& '{}'::text[];
 statement: SELECT jsonb_typeof('{}') AS object;
 statement: SELECT jsonb_typeof('{"c":3,"p":"o"}') AS object;
 statement: SELECT jsonb_typeof('[]') AS array;
 statement: SELECT jsonb_typeof('["a", 1]') AS array;
 statement: SELECT jsonb_typeof('null') AS "null";
 statement: SELECT jsonb_typeof('1') AS number;
 statement: SELECT jsonb_typeof('-1') AS number;
 statement: SELECT jsonb_typeof('1.0') AS number;
 statement: SELECT jsonb_typeof('1e2') AS number;
 statement: SELECT jsonb_typeof('-1.0') AS number;
 statement: SELECT jsonb_typeof('true') AS boolean;
 statement: SELECT jsonb_typeof('false') AS boolean;
 statement: SELECT jsonb_typeof('"hello"') AS string;
 statement: SELECT jsonb_typeof('"true"') AS string;
 statement: SELECT jsonb_typeof('"1.0"') AS string;
 statement: SELECT jsonb_build_array('a',1,'b',1.2,'c',true,'d',null,'e',json '{"x": 3, "y": [1,2,3]}');
 statement: SELECT jsonb_build_array('a', NULL);
 statement: SELECT jsonb_build_array(VARIADIC NULL::text[]);
 statement: SELECT jsonb_build_array(VARIADIC '{}'::text[]);
 statement: SELECT jsonb_build_array(VARIADIC '{a,b,c}'::text[]);
 statement: SELECT jsonb_build_array(VARIADIC ARRAY['a', NULL]::text[]);
 statement: SELECT jsonb_build_array(VARIADIC '{1,2,3,4}'::text[]);
 statement: SELECT jsonb_build_array(VARIADIC '{1,2,3,4}'::int[]);
 statement: SELECT jsonb_build_array(VARIADIC '{{1,4},{2,5},{3,6}}'::int[][]);
 statement: SELECT jsonb_build_object('a',1,'b',1.2,'c',true,'d',null,'e',json '{"x": 3, "y": [1,2,3]}');
 statement: SELECT jsonb_build_object(                                                                                                                                                                                               +
        'a', jsonb_build_object('b',false,'c',99),                                                                                                                                                                                   +
        'd', jsonb_build_object('e',array[9,8,7]::int[],                                                                                                                                                                             +
            'f', (select row_to_json(r) from ( select relkind, oid::regclass as name from pg_class where relname = 'pg_class') r)));
 statement: SELECT jsonb_build_object('{a,b,c}'::text[]);
 statement: SELECT jsonb_build_object('{a,b,c}'::text[], '{d,e,f}'::text[]);
 statement: SELECT jsonb_build_object('a', 'b', 'c');
 statement: SELECT jsonb_build_object(NULL, 'a');
 statement: SELECT jsonb_build_object('a', NULL);
 statement: SELECT jsonb_build_object(VARIADIC NULL::text[]);
 statement: SELECT jsonb_build_object(VARIADIC '{}'::text[]);
 statement: SELECT jsonb_build_object(VARIADIC '{a,b,c}'::text[]);
 statement: SELECT jsonb_build_object(VARIADIC ARRAY['a', NULL]::text[]);
 statement: SELECT jsonb_build_object(VARIADIC ARRAY[NULL, 'a']::text[]);
 statement: SELECT jsonb_build_object(VARIADIC '{1,2,3,4}'::text[]);
 statement: SELECT jsonb_build_object(VARIADIC '{1,2,3,4}'::int[]);
 statement: SELECT jsonb_build_object(VARIADIC '{{1,4},{2,5},{3,6}}'::int[][]);
 statement: SELECT jsonb_build_array();
 statement: SELECT jsonb_build_object();
 statement: SELECT jsonb_build_object(1,2);
 statement: SELECT jsonb_build_object(null,2);
 statement: SELECT jsonb_build_object(r,2) FROM (SELECT 1 AS a, 2 AS b) r;
 statement: SELECT jsonb_build_object(json '{"a":1,"b":2}', 3);
 statement: SELECT jsonb_build_object('{1,2,3}'::int[], 3);
 statement: SELECT jsonb_object_agg(1, NULL::jsonb);
 statement: SELECT jsonb_object_agg(NULL, '{"a":1}');
 statement: CREATE TEMP TABLE foo (serial_num int, name text, type text);
 statement: INSERT INTO foo VALUES (847001,'t15','GE1043');
 statement: INSERT INTO foo VALUES (847002,'t16','GE1043');
 statement: INSERT INTO foo VALUES (847003,'sub-alpha','GESS90');
 statement: SELECT jsonb_build_object('turbines',jsonb_object_agg(serial_num,jsonb_build_object('name',name,'type',type)))                                                                                                           +
 FROM foo;
 statement: SELECT jsonb_object_agg(name, type) FROM foo;
 statement: INSERT INTO foo VALUES (999999, NULL, 'bar');
 statement: SELECT jsonb_object_agg(name, type) FROM foo;
 statement: SELECT jsonb_object('{}');
 statement: SELECT jsonb_object('{}', '{}');
 statement: SELECT jsonb_object('{a,1,b,2,3,NULL,"d e f","a b c"}');
 statement: SELECT jsonb_object('{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}');
 statement: SELECT jsonb_object('{a,b,c}');
 statement: SELECT jsonb_object('{{a},{b}}');
 statement: SELECT jsonb_object('{{a,b,c},{b,c,d}}');
 statement: SELECT jsonb_object('{{{a,b},{c,d}},{{b,c},{d,e}}}');
 statement: select jsonb_object('{a,b,c,"d e f"}','{1,2,3,"a b c"}');
 statement: SELECT jsonb_object('{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}', '{{a,1},{b,2},{3,NULL},{"d e f","a b c"}}');
 statement: select jsonb_object('{a,b,c,"d e f",g}','{1,2,3,"a b c"}');
 statement: select jsonb_object('{a,b,c,"d e f"}','{1,2,3,"a b c",g}');
 statement: select jsonb_object('{a,b,NULL,"d e f"}','{1,2,3,"a b c"}');
 statement: select jsonb_object('{a,b,"","d e f"}','{1,2,3,"a b c"}');
 statement: SELECT jsonb_extract_path('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f4','f6');
 statement: SELECT jsonb_extract_path('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f2');
 statement: SELECT jsonb_extract_path('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',0::text);
 statement: SELECT jsonb_extract_path('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',1::text);
 statement: SELECT jsonb_extract_path_text('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f4','f6');
 statement: SELECT jsonb_extract_path_text('{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}','f2');
 statement: SELECT jsonb_extract_path_text('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',0::text);
 statement: SELECT jsonb_extract_path_text('{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}','f2',1::text);
 statement: SELECT jsonb_extract_path('{"f2":{"f3":1},"f4":{"f5":null,"f6":"stringy"}}','f4','f5') IS NULL AS expect_false;
 statement: SELECT jsonb_extract_path_text('{"f2":{"f3":1},"f4":{"f5":null,"f6":"stringy"}}','f4','f5') IS NULL AS expect_true;
 statement: SELECT jsonb_extract_path('{"f2":{"f3":1},"f4":[0,1,2,null]}','f4','3') IS NULL AS expect_false;
 statement: SELECT jsonb_extract_path_text('{"f2":{"f3":1},"f4":[0,1,2,null]}','f4','3') IS NULL AS expect_true;
 statement: SELECT '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>array['f4','f6'];
 statement: SELECT '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>array['f2'];
 statement: SELECT '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>array['f2','0'];
 statement: SELECT '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>array['f2','1'];
 statement: SELECT '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>>array['f4','f6'];
 statement: SELECT '{"f2":{"f3":1},"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>>array['f2'];
 statement: SELECT '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>>array['f2','0'];
 statement: SELECT '{"f2":["f3",1],"f4":{"f5":99,"f6":"stringy"}}'::jsonb#>>array['f2','1'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> '{}';
 statement: select '[1,2,3]'::jsonb #> '{}';
 statement: select '"foo"'::jsonb #> '{}';
 statement: select '42'::jsonb #> '{}';
 statement: select 'null'::jsonb #> '{}';
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a', null];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a', ''];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a','b'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a','b','c'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a','b','c','d'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #> array['a','z','c'];
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb #> array['a','1','b'];
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb #> array['a','z','b'];
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb #> array['1','b'];
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb #> array['z','b'];
 statement: select '[{"b": "c"}, {"b": null}]'::jsonb #> array['1','b'];
 statement: select '"foo"'::jsonb #> array['z'];
 statement: select '42'::jsonb #> array['f2'];
 statement: select '42'::jsonb #> array['0'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> '{}';
 statement: select '[1,2,3]'::jsonb #>> '{}';
 statement: select '"foo"'::jsonb #>> '{}';
 statement: select '42'::jsonb #>> '{}';
 statement: select 'null'::jsonb #>> '{}';
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a', null];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a', ''];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a','b'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a','b','c'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a','b','c','d'];
 statement: select '{"a": {"b":{"c": "foo"}}}'::jsonb #>> array['a','z','c'];
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb #>> array['a','1','b'];
 statement: select '{"a": [{"b": "c"}, {"b": "cc"}]}'::jsonb #>> array['a','z','b'];
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb #>> array['1','b'];
 statement: select '[{"b": "c"}, {"b": "cc"}]'::jsonb #>> array['z','b'];
 statement: select '[{"b": "c"}, {"b": null}]'::jsonb #>> array['1','b'];
 statement: select '"foo"'::jsonb #>> array['z'];
 statement: select '42'::jsonb #>> array['f2'];
 statement: select '42'::jsonb #>> array['0'];
 statement: SELECT jsonb_array_elements('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false]');
 statement: SELECT * FROM jsonb_array_elements('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false]') q;
 statement: SELECT jsonb_array_elements_text('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]');
 statement: SELECT * FROM jsonb_array_elements_text('[1,true,[1,[2,3]],null,{"f1":1,"f2":[7,8,9]},false,"stringy"]') q;
 statement: CREATE TYPE jbpop AS (a text, b int, c timestamp);
 statement: SELECT * FROM jsonb_populate_record(NULL::jbpop,'{"a":"blurfl","x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_record(row('x',3,'2012-12-31 15:30:56')::jbpop,'{"a":"blurfl","x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_record(NULL::jbpop,'{"a":"blurfl","x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_record(row('x',3,'2012-12-31 15:30:56')::jbpop,'{"a":"blurfl","x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_record(NULL::jbpop,'{"a":[100,200,false],"x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_record(row('x',3,'2012-12-31 15:30:56')::jbpop,'{"a":[100,200,false],"x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_record(row('x',3,'2012-12-31 15:30:56')::jbpop,'{"c":[100,200,false],"x":43.2}') q;
 statement: SELECT * FROM jsonb_populate_recordset(NULL::jbpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(NULL::jbpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"a":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"c":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(NULL::jbpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"a":"blurfl","x":43.2},{"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: SELECT * FROM jsonb_populate_recordset(row('def',99,NULL)::jbpop,'[{"a":[100,200,300],"x":43.2},{"a":{"z":true},"b":3,"c":"2012-01-20 10:42:53"}]') q;
 statement: select * from jsonb_populate_recordset(row(0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
 statement: select * from jsonb_populate_recordset(row(0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
 statement: select * from jsonb_populate_recordset(row(0::int,0::int,0::int),'[{"a":"1","b":"2"},{"a":"3"}]') q (a text, b text);
 statement: select * from jsonb_populate_recordset(row(1000000000::int,50::int),'[{"b":"2"},{"a":"3"}]') q (a text, b text);
 statement: select * from jsonb_to_record('{"a":1,"b":"foo","c":"bar"}')                                                                                                                                                             +
     as x(a int, b text, d text);
 statement: select * from jsonb_to_recordset('[{"a":1,"b":"foo","d":false},{"a":2,"b":"bar","c":true}]')                                                                                                                             +
     as x(a int, b text, c boolean);
 statement: select *, c is null as c_is_null                                                                                                                                                                                         +
 from jsonb_to_record('{"a":1, "b":{"c":16, "d":2}, "x":8}'::jsonb)                                                                                                                                                                  +
     as t(a int, b jsonb, c text, x int);
 statement: select *, c is null as c_is_null                                                                                                                                                                                         +
 from jsonb_to_recordset('[{"a":1, "b":{"c":16, "d":2}, "x":8}]'::jsonb)                                                                                                                                                             +
     as t(a int, b jsonb, c text, x int);
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":null}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":"CC"}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":"CC", "public":true}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"age":25}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"age":25.0}';
 statement: SELECT count(*) FROM testjsonb WHERE j ? 'public';
 statement: SELECT count(*) FROM testjsonb WHERE j ? 'bar';
 statement: SELECT count(*) FROM testjsonb WHERE j ?| ARRAY['public','disabled'];
 statement: SELECT count(*) FROM testjsonb WHERE j ?& ARRAY['public','disabled'];
 statement: CREATE INDEX jidx ON testjsonb USING gin (j);
 statement: SET enable_seqscan = off;
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":null}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":"CC"}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":"CC", "public":true}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"age":25}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"age":25.0}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"array":["foo"]}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"array":["bar"]}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{}';
 statement: SELECT count(*) FROM testjsonb WHERE j ? 'public';
 statement: SELECT count(*) FROM testjsonb WHERE j ? 'bar';
 statement: SELECT count(*) FROM testjsonb WHERE j ?| ARRAY['public','disabled'];
 statement: SELECT count(*) FROM testjsonb WHERE j ?& ARRAY['public','disabled'];
 statement: CREATE INDEX jidx_array ON testjsonb USING gin((j->'array'));
 statement: SELECT count(*) from testjsonb  WHERE j->'array' ? 'bar';
 statement: SELECT count(*) from testjsonb  WHERE j->'array' ? '5'::text;
 statement: SELECT count(*) from testjsonb  WHERE j->'array' @> '5'::jsonb;
 statement: RESET enable_seqscan;
 statement: SELECT count(*) FROM (SELECT (jsonb_each(j)).key FROM testjsonb) AS wow;
 statement: SELECT key, count(*) FROM (SELECT (jsonb_each(j)).key FROM testjsonb) AS wow GROUP BY key ORDER BY count DESC, key;
 statement: SELECT count(distinct j) FROM testjsonb;
 statement: SET enable_hashagg = off;
 statement: SELECT count(*) FROM (SELECT j FROM (SELECT * FROM testjsonb UNION ALL SELECT * FROM testjsonb) js GROUP BY j) js2;
 statement: SET enable_hashagg = on;
 statement: SET enable_sort = off;
 statement: SELECT count(*) FROM (SELECT j FROM (SELECT * FROM testjsonb UNION ALL SELECT * FROM testjsonb) js GROUP BY j) js2;
 statement: SELECT distinct * FROM (values (jsonb '{}' || ''::text),('{}')) v(j);
 statement: SET enable_sort = on;
 statement: RESET enable_hashagg;
 statement: RESET enable_sort;
 statement: DROP INDEX jidx;
 statement: DROP INDEX jidx_array;
 statement: CREATE INDEX jidx ON testjsonb USING btree (j);
 statement: SET enable_seqscan = off;
 statement: SELECT count(*) FROM testjsonb WHERE j > '{"p":1}';
 statement: SELECT count(*) FROM testjsonb WHERE j = '{"pos":98, "line":371, "node":"CBA", "indexed":true}';
 statement: DROP INDEX jidx;
 statement: CREATE INDEX jidx ON testjsonb USING gin (j jsonb_path_ops);
 statement: SET enable_seqscan = off;
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":null}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":"CC"}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"wait":"CC", "public":true}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"age":25}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{"age":25.0}';
 statement: SELECT count(*) FROM testjsonb WHERE j @> '{}';
 statement: RESET enable_seqscan;
 statement: DROP INDEX jidx;
 statement: SELECT '{"ff":{"a":12,"b":16}}'::jsonb;
 statement: SELECT '{"ff":{"a":12,"b":16},"qq":123}'::jsonb;
 statement: SELECT '{"aa":["a","aaa"],"qq":{"a":12,"b":16,"c":["c1","c2"],"d":{"d1":"d1","d2":"d2","d1":"d3"}}}'::jsonb;
 statement: SELECT '{"aa":["a","aaa"],"qq":{"a":"12","b":"16","c":["c1","c2"],"d":{"d1":"d1","d2":"d2"}}}'::jsonb;
 statement: SELECT '{"aa":["a","aaa"],"qq":{"a":"12","b":"16","c":["c1","c2",["c3"],{"c4":4}],"d":{"d1":"d1","d2":"d2"}}}'::jsonb;
 statement: SELECT '{"ff":["a","aaa"]}'::jsonb;
 statement: SELECT                                                                                                                                                                                                                   +
   '{"ff":{"a":12,"b":16},"qq":123,"x":[1,2],"Y":null}'::jsonb -> 'ff',                                                                                                                                                              +
   '{"ff":{"a":12,"b":16},"qq":123,"x":[1,2],"Y":null}'::jsonb -> 'qq',                                                                                                                                                              +
   ('{"ff":{"a":12,"b":16},"qq":123,"x":[1,2],"Y":null}'::jsonb -> 'Y') IS NULL AS f,                                                                                                                                                +
   ('{"ff":{"a":12,"b":16},"qq":123,"x":[1,2],"Y":null}'::jsonb ->> 'Y') IS NULL AS t,                                                                                                                                               +
    '{"ff":{"a":12,"b":16},"qq":123,"x":[1,2],"Y":null}'::jsonb -> 'x';
 statement: SELECT '{"a":[1,2],"c":"b"}'::jsonb @> '{"a":[1,2]}';
 statement: SELECT '{"a":[2,1],"c":"b"}'::jsonb @> '{"a":[1,2]}';
 statement: SELECT '{"a":{"1":2},"c":"b"}'::jsonb @> '{"a":[1,2]}';
 statement: SELECT '{"a":{"2":1},"c":"b"}'::jsonb @> '{"a":[1,2]}';
 statement: SELECT '{"a":{"1":2},"c":"b"}'::jsonb @> '{"a":{"1":2}}';
 statement: SELECT '{"a":{"2":1},"c":"b"}'::jsonb @> '{"a":{"1":2}}';
 statement: SELECT '["a","b"]'::jsonb @> '["a","b","c","b"]';
 statement: SELECT '["a","b","c","b"]'::jsonb @> '["a","b"]';
 statement: SELECT '["a","b","c",[1,2]]'::jsonb @> '["a",[1,2]]';
 statement: SELECT '["a","b","c",[1,2]]'::jsonb @> '["b",[1,2]]';
 statement: SELECT '{"a":[1,2],"c":"b"}'::jsonb @> '{"a":[1]}';
 statement: SELECT '{"a":[1,2],"c":"b"}'::jsonb @> '{"a":[2]}';
 statement: SELECT '{"a":[1,2],"c":"b"}'::jsonb @> '{"a":[3]}';
 statement: SELECT '{"a":[1,2,{"c":3,"x":4}],"c":"b"}'::jsonb @> '{"a":[{"c":3}]}';
 statement: SELECT '{"a":[1,2,{"c":3,"x":4}],"c":"b"}'::jsonb @> '{"a":[{"x":4}]}';
 statement: SELECT '{"a":[1,2,{"c":3,"x":4}],"c":"b"}'::jsonb @> '{"a":[{"x":4},3]}';
 statement: SELECT '{"a":[1,2,{"c":3,"x":4}],"c":"b"}'::jsonb @> '{"a":[{"x":4},1]}';
 statement: create temp table nestjsonb (j jsonb);
 statement: insert into nestjsonb (j) values ('{"a":[["b",{"x":1}],["b",{"x":2}]],"c":3}');
 statement: insert into nestjsonb (j) values ('[[14,2,3]]');
 statement: insert into nestjsonb (j) values ('[1,[14,2,3]]');
 statement: create index on nestjsonb using gin(j jsonb_path_ops);
 statement: set enable_seqscan = on;
 statement: set enable_bitmapscan = off;
 statement: select * from nestjsonb where j @> '{"a":[[{"x":2}]]}'::jsonb;
 statement: select * from nestjsonb where j @> '{"c":3}';
 statement: select * from nestjsonb where j @> '[[14]]';
 statement: set enable_seqscan = off;
 statement: set enable_bitmapscan = on;
 statement: select * from nestjsonb where j @> '{"a":[[{"x":2}]]}'::jsonb;
 statement: select * from nestjsonb where j @> '{"c":3}';
 statement: select * from nestjsonb where j @> '[[14]]';
 statement: reset enable_seqscan;
 statement: reset enable_bitmapscan;
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'n';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'a';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'b';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'c';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'd';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'd' -> '1';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 'e';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb -> 0;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 0;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 1;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 2;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 3;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 3 -> 1;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 4;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> 5;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> -1;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> -5;
 statement: SELECT '["a","b","c",[1,2],null]'::jsonb -> -6;
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{0}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{a}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,0}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,1}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,2}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,3}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,-1}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,-3}';
 statement: SELECT '{"a":"b","c":[1,2,3]}'::jsonb #> '{c,-4}';
 statement: SELECT '[0,1,2,[3,4],{"5":"five"}]'::jsonb #> '{0}';
 statement: SELECT '[0,1,2,[3,4],{"5":"five"}]'::jsonb #> '{3}';
 statement: SELECT '[0,1,2,[3,4],{"5":"five"}]'::jsonb #> '{4}';
 statement: SELECT '[0,1,2,[3,4],{"5":"five"}]'::jsonb #> '{4,5}';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb ? 'n';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb ? 'a';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb ? 'b';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb ? 'c';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb ? 'd';
 statement: SELECT '{"n":null,"a":1,"b":[1,2],"c":{"1":2},"d":{"1":[2,3]}}'::jsonb ? 'e';
 statement: select jsonb_strip_nulls(null);
 statement: select jsonb_strip_nulls('1');
 statement: select jsonb_strip_nulls('"a string"');
 statement: select jsonb_strip_nulls('null');
 statement: select jsonb_strip_nulls('[1,2,null,3,4]');
 statement: select jsonb_strip_nulls('{"a":1,"b":null,"c":[2,null,3],"d":{"e":4,"f":null}}');
 statement: select jsonb_strip_nulls('[1,{"a":1,"b":null,"c":2},3]');
 statement: select jsonb_strip_nulls('{"a": {"b": null, "c": null}, "d": {} }');
 statement: select jsonb_pretty('{"a": "test", "b": [1, 2, 3], "c": "test3", "d":{"dd": "test4", "dd2":{"ddd": "test5"}}}');
 statement: select jsonb_pretty('[{"f1":1,"f2":null},2,null,[[{"x":true},6,7],8],3]');
 statement: select jsonb_pretty('{"a":["b", "c"], "d": {"e":"f"}}');
 statement: select jsonb_concat('{"d": "test", "a": [1, 2]}', '{"g": "test2", "c": {"c1":1, "c2":2}}');
 statement: select '{"aa":1 , "b":2, "cq":3}'::jsonb || '{"cq":"l", "b":"g", "fg":false}';
 statement: select '{"aa":1 , "b":2, "cq":3}'::jsonb || '{"aq":"l"}';
 statement: select '{"aa":1 , "b":2, "cq":3}'::jsonb || '{"aa":"l"}';
 statement: select '{"aa":1 , "b":2, "cq":3}'::jsonb || '{}';
 statement: select '["a", "b"]'::jsonb || '["c"]';
 statement: select '["a", "b"]'::jsonb || '["c", "d"]';
 statement: select '["c"]' || '["a", "b"]'::jsonb;
 statement: select '["a", "b"]'::jsonb || '"c"';
 statement: select '"c"' || '["a", "b"]'::jsonb;
 statement: select '[]'::jsonb || '["a"]'::jsonb;
 statement: select '[]'::jsonb || '"a"'::jsonb;
 statement: select '"b"'::jsonb || '"a"'::jsonb;
 statement: select '{}'::jsonb || '{"a":"b"}'::jsonb;
 statement: select '[]'::jsonb || '{"a":"b"}'::jsonb;
 statement: select '{"a":"b"}'::jsonb || '[]'::jsonb;
 statement: select '"a"'::jsonb || '{"a":1}';
 statement: select '{"a":1}' || '"a"'::jsonb;
 statement: select '["a", "b"]'::jsonb || '{"c":1}';
 statement: select '{"c": 1}'::jsonb || '["a", "b"]';
 statement: select '{}'::jsonb || '{"cq":"l", "b":"g", "fg":false}';
 statement: select pg_column_size('{}'::jsonb || '{}'::jsonb) = pg_column_size('{}'::jsonb);
 statement: select pg_column_size('{"aa":1}'::jsonb || '{"b":2}'::jsonb) = pg_column_size('{"aa":1, "b":2}'::jsonb);
 statement: select pg_column_size('{"aa":1, "b":2}'::jsonb || '{}'::jsonb) = pg_column_size('{"aa":1, "b":2}'::jsonb);
 statement: select pg_column_size('{}'::jsonb || '{"aa":1, "b":2}'::jsonb) = pg_column_size('{"aa":1, "b":2}'::jsonb);
 statement: select jsonb_delete('{"a":1 , "b":2, "c":3}'::jsonb, 'a');
 statement: select jsonb_delete('{"a":null , "b":2, "c":3}'::jsonb, 'a');
 statement: select jsonb_delete('{"a":1 , "b":2, "c":3}'::jsonb, 'b');
 statement: select jsonb_delete('{"a":1 , "b":2, "c":3}'::jsonb, 'c');
 statement: select jsonb_delete('{"a":1 , "b":2, "c":3}'::jsonb, 'd');
 statement: select '{"a":1 , "b":2, "c":3}'::jsonb - 'a';
 statement: select '{"a":null , "b":2, "c":3}'::jsonb - 'a';
 statement: select '{"a":1 , "b":2, "c":3}'::jsonb - 'b';
 statement: select '{"a":1 , "b":2, "c":3}'::jsonb - 'c';
 statement: select '{"a":1 , "b":2, "c":3}'::jsonb - 'd';
 statement: select pg_column_size('{"a":1 , "b":2, "c":3}'::jsonb - 'b') = pg_column_size('{"a":1, "b":2}'::jsonb);
 statement: select '["a","b","c"]'::jsonb - 3;
 statement: select '["a","b","c"]'::jsonb - 2;
 statement: select '["a","b","c"]'::jsonb - 1;
 statement: select '["a","b","c"]'::jsonb - 0;
 statement: select '["a","b","c"]'::jsonb - -1;
 statement: select '["a","b","c"]'::jsonb - -2;
 statement: select '["a","b","c"]'::jsonb - -3;
 statement: select '["a","b","c"]'::jsonb - -4;
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{n}', '[1,2,3]');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{b,-1}', '[1,2,3]');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{d,1,0}', '[1,2,3]');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{d,NULL,0}', '[1,2,3]');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{n}', '{"1": 2}');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{b,-1}', '{"1": 2}');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{d,1,0}', '{"1": 2}');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{d,NULL,0}', '{"1": 2}');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{b,-1}', '"test"');
 statement: select jsonb_set('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb, '{b,-1}', '{"f": "test"}');
 statement: select jsonb_delete_path('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}', '{n}');
 statement: select jsonb_delete_path('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}', '{b,-1}');
 statement: select jsonb_delete_path('{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}', '{d,1,0}');
 statement: select '{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb #- '{n}';
 statement: select '{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb #- '{b,-1}';
 statement: select '{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb #- '{b,-1e}';
 statement: select '{"n":null, "a":1, "b":[1,2], "c":{"1":2}, "d":{"1":[2,3]}}'::jsonb #- '{d,1,0}';
 statement: select '"a"'::jsonb - 'a';
 statement: select '{}'::jsonb - 'a';
 statement: select '[]'::jsonb - 'a';
 statement: select '"a"'::jsonb - 1;
 statement: select '{}'::jsonb -  1;
 statement: select '[]'::jsonb - 1;
 statement: select '"a"'::jsonb #- '{a}';
 statement: select '{}'::jsonb #- '{a}';
 statement: select '[]'::jsonb #- '{a}';
 statement: select jsonb_set('"a"','{a}','"b"');
 statement: select jsonb_set('{}','{a}','"b"', false);
 statement: select jsonb_set('[]','{1}','"b"', false);
 statement: select jsonb_set('{"a":1,"b":[0,1,2],"c":{"d":4}}','{b,-33}','{"foo":123}');
 statement: select jsonb_set('{"a":1,"b":[0,1,2],"c":{"d":4}}','{b,33}','{"foo":123}');
 statement: select jsonb_set('{"a":1,"b":[4,5,[0,1,2],6,7],"c":{"d":4}}','{b,2,33}','{"foo":123}');
 statement: select jsonb_set('{"a":1,"b":[0,1,2],"c":{"d":4}}','{c,e}','{"foo":123}');
 statement: select jsonb_set('{"a":1,"b":[0,1,2],"c":{"d":4}}','{x,-33}','{"foo":123}');
 statement: select jsonb_set('{"a":1,"b":[0,1,2],"c":{"d":4}}','{x,y}','{"foo":123}');
 statement: select jsonb_set('{}','{x}','{"foo":123}');
 statement: select jsonb_set('[]','{0}','{"foo":123}');
 statement: select jsonb_set('[]','{99}','{"foo":123}');
 statement: select jsonb_set('[]','{-99}','{"foo":123}');
 statement: select jsonb_set('{"a": [1, 2, 3]}', '{a, non_integer}', '"new_value"');
 statement: select jsonb_set('{"a": {"b": [1, 2, 3]}}', '{a, b, non_integer}', '"new_value"');
 statement: select jsonb_set('{"a": {"b": [1, 2, 3]}}', '{a, b, NULL}', '"new_value"');

