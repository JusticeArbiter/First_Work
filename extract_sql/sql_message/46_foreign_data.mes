LOG:  statement: select message from postgres_log where query is null;
 statement: SET client_min_messages TO 'error';
 statement: DROP ROLE IF EXISTS foreign_data_user, regress_test_role, regress_test_role2, regress_test_role_super, regress_test_indirect, unpriviled_role;
 statement: RESET client_min_messages;
 statement: CREATE ROLE foreign_data_user LOGIN SUPERUSER;
 statement: SET SESSION AUTHORIZATION 'foreign_data_user';
 statement: CREATE ROLE regress_test_role;
 statement: CREATE ROLE regress_test_role2;
 statement: CREATE ROLE regress_test_role_super SUPERUSER;
 statement: CREATE ROLE regress_test_indirect;
 statement: CREATE ROLE unprivileged_role;
 statement: CREATE FOREIGN DATA WRAPPER dummy;
 statement: COMMENT ON FOREIGN DATA WRAPPER dummy IS 'useless';
 statement: CREATE FOREIGN DATA WRAPPER postgresql VALIDATOR postgresql_fdw_validator;
 statement: SELECT fdwname, fdwhandler::regproc, fdwvalidator::regproc, fdwoptions FROM pg_foreign_data_wrapper ORDER BY 1, 2, 3;
 statement: SELECT srvname, srvoptions FROM pg_foreign_server;
 statement: SELECT * FROM pg_user_mapping;
 statement: CREATE FOREIGN DATA WRAPPER foo VALIDATOR bar;
 statement: CREATE FOREIGN DATA WRAPPER foo;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator"                                                                                                                                                                                                                                              +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 ORDER BY 1;
 statement: CREATE FOREIGN DATA WRAPPER foo;
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1');
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1', testing '2');
 statement: CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1', another '2');
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: SET ROLE regress_test_role;
 statement: CREATE FOREIGN DATA WRAPPER foo;
 statement: RESET ROLE;
 statement: CREATE FOREIGN DATA WRAPPER foo VALIDATOR postgresql_fdw_validator;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo VALIDATOR bar;
 statement: ALTER FOREIGN DATA WRAPPER foo NO VALIDATOR;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (a '1', b '2');
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (SET c '4');
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (DROP c);
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD x '1', DROP x);
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (DROP a, SET b '3', ADD c '4');
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (a '2');
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (b '4');
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: SET ROLE regress_test_role;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD d '5');
 statement: SET ROLE regress_test_role_super;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD d '5');
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_test_role;
 statement: ALTER FOREIGN DATA WRAPPER foo OWNER TO regress_test_role_super;
 statement: ALTER ROLE regress_test_role_super NOSUPERUSER;
 statement: SET ROLE regress_test_role_super;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD e '6');
 statement: RESET ROLE;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo RENAME TO foo1;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: ALTER FOREIGN DATA WRAPPER foo1 RENAME TO foo;
 statement: DROP FOREIGN DATA WRAPPER nonexistent;
 statement: DROP FOREIGN DATA WRAPPER IF EXISTS nonexistent;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: DROP ROLE regress_test_role_super;
 statement: SET ROLE regress_test_role_super;
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: RESET ROLE;
 statement: DROP ROLE regress_test_role_super;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: CREATE FOREIGN DATA WRAPPER foo;
 statement: CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
 statement: COMMENT ON SERVER s1 IS 'foreign server';
 statement: CREATE USER MAPPING FOR current_user SERVER s1;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name",                                                                                                                                                                                                                                                                       +
  CASE WHEN umoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(umoptions)),  ', ') || ')'   END AS "FDW Options"                      +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: SET ROLE regress_test_role;
 statement: DROP FOREIGN DATA WRAPPER foo CASCADE;
 statement: RESET ROLE;
 statement: DROP FOREIGN DATA WRAPPER foo CASCADE;
 statement: SELECT fdw.fdwname AS "Name",                                                                                                                                                                                                                                                           +
   pg_catalog.pg_get_userbyid(fdw.fdwowner) AS "Owner",                                                                                                                                                                                                                                             +
   fdw.fdwhandler::pg_catalog.regproc AS "Handler",                                                                                                                                                                                                                                                 +
   fdw.fdwvalidator::pg_catalog.regproc AS "Validator",                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(fdwacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                                +
  CASE WHEN fdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(fdwoptions)),  ', ') || ')'   END AS "FDW Options",                   +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_data_wrapper fdw                                                                                                                                                                                                                                                        +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = fdw.tableoid AND d.objoid = fdw.oid AND d.objsubid = 0                                                                                                                                                                                                                      +
 ORDER BY 1;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name",                                                                                                                                                                                                                                                                       +
  CASE WHEN umoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(umoptions)),  ', ') || ')'   END AS "FDW Options"                      +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
 statement: CREATE FOREIGN DATA WRAPPER foo OPTIONS ("test wrapper" 'true');
 statement: CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
 statement: CREATE SERVER s1 FOREIGN DATA WRAPPER foo;
 statement: CREATE SERVER s2 FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
 statement: CREATE SERVER s3 TYPE 'oracle' FOREIGN DATA WRAPPER foo;
 statement: CREATE SERVER s4 TYPE 'oracle' FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
 statement: CREATE SERVER s5 VERSION '15.0' FOREIGN DATA WRAPPER foo;
 statement: CREATE SERVER s6 VERSION '16.0' FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
 statement: CREATE SERVER s7 TYPE 'oracle' VERSION '17.0' FOREIGN DATA WRAPPER foo OPTIONS (host 'a', dbname 'b');
 statement: CREATE SERVER s8 FOREIGN DATA WRAPPER postgresql OPTIONS (foo '1');
 statement: CREATE SERVER s8 FOREIGN DATA WRAPPER postgresql OPTIONS (host 'localhost', dbname 's8db');
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: SET ROLE regress_test_role;
 statement: CREATE SERVER t1 FOREIGN DATA WRAPPER foo;
 statement: RESET ROLE;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
 statement: SET ROLE regress_test_role;
 statement: CREATE SERVER t1 FOREIGN DATA WRAPPER foo;
 statement: RESET ROLE;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM regress_test_role;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_indirect;
 statement: SET ROLE regress_test_role;
 statement: CREATE SERVER t2 FOREIGN DATA WRAPPER foo;
 statement: RESET ROLE;
 statement: GRANT regress_test_indirect TO regress_test_role;
 statement: SET ROLE regress_test_role;
 statement: CREATE SERVER t2 FOREIGN DATA WRAPPER foo;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: RESET ROLE;
 statement: REVOKE regress_test_indirect FROM regress_test_role;
 statement: ALTER SERVER s0 OPTIONS (a '1');
 statement: ALTER SERVER s1 VERSION '1.0' OPTIONS (servername 's1');
 statement: ALTER SERVER s2 VERSION '1.1';
 statement: ALTER SERVER s3 OPTIONS ("tns name" 'orcl', port '1521');
 statement: GRANT USAGE ON FOREIGN SERVER s1 TO regress_test_role;
 statement: GRANT USAGE ON FOREIGN SERVER s6 TO regress_test_role2 WITH GRANT OPTION;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: SET ROLE regress_test_role;
 statement: ALTER SERVER s1 VERSION '1.1';
 statement: ALTER SERVER s1 OWNER TO regress_test_role;
 statement: RESET ROLE;
 statement: ALTER SERVER s1 OWNER TO regress_test_role;
 statement: GRANT regress_test_role2 TO regress_test_role;
 statement: SET ROLE regress_test_role;
 statement: ALTER SERVER s1 VERSION '1.1';
 statement: ALTER SERVER s1 OWNER TO regress_test_role2;
 statement: RESET ROLE;
 statement: ALTER SERVER s8 OPTIONS (foo '1');
 statement: ALTER SERVER s8 OPTIONS (connect_timeout '30', SET dbname 'db1', DROP host);
 statement: SET ROLE regress_test_role;
 statement: ALTER SERVER s1 OWNER TO regress_test_indirect;
 statement: RESET ROLE;
 statement: GRANT regress_test_indirect TO regress_test_role;
 statement: SET ROLE regress_test_role;
 statement: ALTER SERVER s1 OWNER TO regress_test_indirect;
 statement: RESET ROLE;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_indirect;
 statement: SET ROLE regress_test_role;
 statement: ALTER SERVER s1 OWNER TO regress_test_indirect;
 statement: RESET ROLE;
 statement: DROP ROLE regress_test_indirect;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: ALTER SERVER s8 RENAME to s8new;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper",                                                                                                                                                                                                                                                             +
   pg_catalog.array_to_string(s.srvacl, E'\n') AS "Access privileges",                                                                                                                                                                                                                              +
   s.srvtype AS "Type",                                                                                                                                                                                                                                                                             +
   s.srvversion AS "Version",                                                                                                                                                                                                                                                                       +
   CASE WHEN srvoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(srvoptions)),  ', ') || ')'   END AS "FDW Options",                  +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                              +
        ON d.classoid = s.tableoid AND d.objoid = s.oid AND d.objsubid = 0                                                                                                                                                                                                                          +
 ORDER BY 1;
 statement: ALTER SERVER s8new RENAME to s8;
 statement: DROP SERVER nonexistent;
 statement: DROP SERVER IF EXISTS nonexistent;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper"                                                                                                                                                                                                                                                              +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 ORDER BY 1;
 statement: SET ROLE regress_test_role;
 statement: DROP SERVER s2;
 statement: DROP SERVER s1;
 statement: RESET ROLE;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper"                                                                                                                                                                                                                                                              +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 ORDER BY 1;
 statement: ALTER SERVER s2 OWNER TO regress_test_role;
 statement: SET ROLE regress_test_role;
 statement: DROP SERVER s2;
 statement: RESET ROLE;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper"                                                                                                                                                                                                                                                              +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 ORDER BY 1;
 statement: CREATE USER MAPPING FOR current_user SERVER s3;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name"                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: DROP SERVER s3;
 statement: DROP SERVER s3 CASCADE;
 statement: SELECT s.srvname AS "Name",                                                                                                                                                                                                                                                             +
   pg_catalog.pg_get_userbyid(s.srvowner) AS "Owner",                                                                                                                                                                                                                                               +
   f.fdwname AS "Foreign-data wrapper"                                                                                                                                                                                                                                                              +
 FROM pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
      JOIN pg_catalog.pg_foreign_data_wrapper f ON f.oid=s.srvfdw                                                                                                                                                                                                                                   +
 ORDER BY 1;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name"                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: CREATE USER MAPPING FOR regress_test_missing_role SERVER s1;
 statement: CREATE USER MAPPING FOR current_user SERVER s1;
 statement: CREATE USER MAPPING FOR current_user SERVER s4;
 statement: CREATE USER MAPPING FOR user SERVER s4;
 statement: CREATE USER MAPPING FOR public SERVER s4 OPTIONS ("this mapping" 'is public');
 statement: CREATE USER MAPPING FOR user SERVER s8 OPTIONS (username 'test', password 'secret');
 statement: CREATE USER MAPPING FOR user SERVER s8 OPTIONS (user 'test', password 'secret');
 statement: ALTER SERVER s5 OWNER TO regress_test_role;
 statement: ALTER SERVER s6 OWNER TO regress_test_indirect;
 statement: SET ROLE regress_test_role;
 statement: CREATE USER MAPPING FOR current_user SERVER s5;
 statement: CREATE USER MAPPING FOR current_user SERVER s6 OPTIONS (username 'test');
 statement: CREATE USER MAPPING FOR current_user SERVER s7;
 statement: CREATE USER MAPPING FOR public SERVER s8;
 statement: RESET ROLE;
 statement: ALTER SERVER t1 OWNER TO regress_test_indirect;
 statement: SET ROLE regress_test_role;
 statement: CREATE USER MAPPING FOR current_user SERVER t1 OPTIONS (username 'bob', password 'boo');
 statement: CREATE USER MAPPING FOR public SERVER t1;
 statement: RESET ROLE;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name"                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: ALTER USER MAPPING FOR regress_test_missing_role SERVER s4 OPTIONS (gotcha 'true');
 statement: ALTER USER MAPPING FOR user SERVER ss4 OPTIONS (gotcha 'true');
 statement: ALTER USER MAPPING FOR public SERVER s5 OPTIONS (gotcha 'true');
 statement: ALTER USER MAPPING FOR current_user SERVER s8 OPTIONS (username 'test');
 statement: ALTER USER MAPPING FOR current_user SERVER s8 OPTIONS (DROP user, SET password 'public');
 statement: SET ROLE regress_test_role;
 statement: ALTER USER MAPPING FOR current_user SERVER s5 OPTIONS (ADD modified '1');
 statement: ALTER USER MAPPING FOR public SERVER s4 OPTIONS (ADD modified '1');
 statement: ALTER USER MAPPING FOR public SERVER t1 OPTIONS (ADD modified '1');
 statement: RESET ROLE;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name",                                                                                                                                                                                                                                                                       +
  CASE WHEN umoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(umoptions)),  ', ') || ')'   END AS "FDW Options"                      +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: DROP USER MAPPING FOR regress_test_missing_role SERVER s4;
 statement: DROP USER MAPPING FOR user SERVER ss4;
 statement: DROP USER MAPPING FOR public SERVER s7;
 statement: DROP USER MAPPING IF EXISTS FOR regress_test_missing_role SERVER s4;
 statement: DROP USER MAPPING IF EXISTS FOR user SERVER ss4;
 statement: DROP USER MAPPING IF EXISTS FOR public SERVER s7;
 statement: CREATE USER MAPPING FOR public SERVER s8;
 statement: SET ROLE regress_test_role;
 statement: DROP USER MAPPING FOR public SERVER s8;
 statement: RESET ROLE;
 statement: DROP SERVER s7;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name"                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: CREATE SCHEMA foreign_schema;
 statement: CREATE SERVER s0 FOREIGN DATA WRAPPER dummy;
 statement: CREATE FOREIGN TABLE ft1 () SERVER no_server;
 statement: CREATE FOREIGN TABLE ft1 (                                                                                                                                                                                                                                                              +
         c1 integer OPTIONS ("param 1" 'val1') PRIMARY KEY,                                                                                                                                                                                                                                         +
         c2 text OPTIONS (param2 'val2', param3 'val3'),                                                                                                                                                                                                                                            +
         c3 date                                                                                                                                                                                                                                                                                    +
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: CREATE TABLE ref_table (id integer PRIMARY KEY);
 statement: CREATE FOREIGN TABLE ft1 (                                                                                                                                                                                                                                                              +
         c1 integer OPTIONS ("param 1" 'val1') REFERENCES ref_table (id),                                                                                                                                                                                                                           +
         c2 text OPTIONS (param2 'val2', param3 'val3'),                                                                                                                                                                                                                                            +
         c3 date                                                                                                                                                                                                                                                                                    +
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: DROP TABLE ref_table;
 statement: CREATE FOREIGN TABLE ft1 (                                                                                                                                                                                                                                                              +
         c1 integer OPTIONS ("param 1" 'val1') NOT NULL,                                                                                                                                                                                                                                            +
         c2 text OPTIONS (param2 'val2', param3 'val3'),                                                                                                                                                                                                                                            +
         c3 date,                                                                                                                                                                                                                                                                                   +
         UNIQUE (c3)                                                                                                                                                                                                                                                                                +
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: CREATE FOREIGN TABLE ft1 (                                                                                                                                                                                                                                                              +
         c1 integer OPTIONS ("param 1" 'val1') NOT NULL,                                                                                                                                                                                                                                            +
         c2 text OPTIONS (param2 'val2', param3 'val3') CHECK (c2 <> ''),                                                                                                                                                                                                                           +
         c3 date,                                                                                                                                                                                                                                                                                   +
         CHECK (c3 BETWEEN '1994-01-01'::date AND '1994-01-31'::date)                                                                                                                                                                                                                               +
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: COMMENT ON FOREIGN TABLE ft1 IS 'ft1';
 statement: COMMENT ON COLUMN ft1.c1 IS 'ft1.c1';
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21501';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21501' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21501' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21501' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21501' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21501' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21501' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT n.nspname AS "Schema",                                                                                                                                                                                                                                                           +
   c.relname AS "Table",                                                                                                                                                                                                                                                                            +
   s.srvname AS "Server",                                                                                                                                                                                                                                                                           +
  CASE WHEN ftoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(ftoptions)),  ', ') || ')'   END AS "FDW Options",                     +
   d.description AS "Description"                                                                                                                                                                                                                                                                   +
 FROM pg_catalog.pg_foreign_table ft                                                                                                                                                                                                                                                                +
   INNER JOIN pg_catalog.pg_class c ON c.oid = ft.ftrelid                                                                                                                                                                                                                                           +
   INNER JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                   +
   INNER JOIN pg_catalog.pg_foreign_server s ON s.oid = ft.ftserver                                                                                                                                                                                                                                 +
    LEFT JOIN pg_catalog.pg_description d                                                                                                                                                                                                                                                           +
           ON d.classoid = c.tableoid AND d.objoid = c.oid AND d.objsubid = 0                                                                                                                                                                                                                       +
 WHERE pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 1, 2;
 statement: CREATE INDEX id_ft1_c2 ON ft1 (c2);
 statement: SELECT * FROM ft1;
 statement: EXPLAIN SELECT * FROM ft1;
 statement: COMMENT ON FOREIGN TABLE ft1 IS 'foreign table';
 statement: COMMENT ON FOREIGN TABLE ft1 IS NULL;
 statement: COMMENT ON COLUMN ft1.c1 IS 'foreign column';
 statement: COMMENT ON COLUMN ft1.c1 IS NULL;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c4 integer;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c5 integer DEFAULT 0;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c6 integer;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c7 integer NOT NULL;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c8 integer;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c9 integer;
 statement: ALTER FOREIGN TABLE ft1 ADD COLUMN c10 integer OPTIONS (p1 'v1');
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c4 SET DEFAULT 0;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c5 DROP DEFAULT;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c6 SET NOT NULL;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c7 DROP NOT NULL;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10) USING '0';
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 TYPE char(10);
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET DATA TYPE text;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN xmin OPTIONS (ADD p1 'v1');
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c7 OPTIONS (ADD p1 'v1', ADD p2 'v2'),                                                                                                                                                                                                             +
                         ALTER COLUMN c8 OPTIONS (ADD p1 'v1', ADD p2 'v2');
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 OPTIONS (SET p2 'V2', DROP p1);
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c1 SET STATISTICS 10000;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c1 SET (n_distinct = 100);
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET STATISTICS -1;
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET STORAGE PLAIN;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21501';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21501' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21501' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21501' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21501' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21501' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21501' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE use_ft1_column_type (x ft1);
 statement: ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET DATA TYPE integer;
 statement: DROP TABLE use_ft1_column_type;
 statement: ALTER FOREIGN TABLE ft1 ADD PRIMARY KEY (c7);
 statement: ALTER FOREIGN TABLE ft1 ADD CONSTRAINT ft1_c9_check CHECK (c9 < 0) NOT VALID;
 statement: ALTER FOREIGN TABLE ft1 ALTER CONSTRAINT ft1_c9_check DEFERRABLE;
 statement: ALTER FOREIGN TABLE ft1 DROP CONSTRAINT ft1_c9_check;
 statement: ALTER FOREIGN TABLE ft1 DROP CONSTRAINT no_const;
 statement: ALTER FOREIGN TABLE ft1 DROP CONSTRAINT IF EXISTS no_const;
 statement: ALTER FOREIGN TABLE ft1 SET WITH OIDS;
 statement: ALTER FOREIGN TABLE ft1 OWNER TO regress_test_role;
 statement: ALTER FOREIGN TABLE ft1 OPTIONS (DROP delimiter, SET quote '~', ADD escape '@');
 statement: ALTER FOREIGN TABLE ft1 DROP COLUMN no_column;
 statement: ALTER FOREIGN TABLE ft1 DROP COLUMN IF EXISTS no_column;
 statement: ALTER FOREIGN TABLE ft1 DROP COLUMN c9;
 statement: ALTER FOREIGN TABLE ft1 SET SCHEMA foreign_schema;
 statement: ALTER FOREIGN TABLE ft1 SET TABLESPACE ts;
 statement: ALTER FOREIGN TABLE foreign_schema.ft1 RENAME c1 TO foreign_column_1;
 statement: ALTER FOREIGN TABLE foreign_schema.ft1 RENAME TO foreign_table_1;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(foreign_table_1)$'                                                                                                                                                                                                                                                            +
   AND n.nspname ~ '^(foreign_schema)$'                                                                                                                                                                                                                                                             +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21501';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions                    +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21501' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21501' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21501' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21501' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21501' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21501' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c4 integer;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c6 integer;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c7 integer NOT NULL;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c8 integer;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c9 integer;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ADD COLUMN c10 integer OPTIONS (p1 'v1');
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c6 SET NOT NULL;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c7 DROP NOT NULL;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c8 TYPE char(10);
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c8 SET DATA TYPE text;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c7 OPTIONS (ADD p1 'v1', ADD p2 'v2'),                                                                                                                                                                                      +
                         ALTER COLUMN c8 OPTIONS (ADD p1 'v1', ADD p2 'v2');
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 ALTER COLUMN c8 OPTIONS (SET p2 'V2', DROP p1);
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP CONSTRAINT IF EXISTS no_const;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP CONSTRAINT ft1_c1_check;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 OWNER TO regress_test_role;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 OPTIONS (DROP delimiter, SET quote '~', ADD escape '@');
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP COLUMN IF EXISTS no_column;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 DROP COLUMN c9;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 SET SCHEMA foreign_schema;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 RENAME c1 TO foreign_column_1;
 statement: ALTER FOREIGN TABLE IF EXISTS doesnt_exist_ft1 RENAME TO foreign_table_1;
 statement: SELECT * FROM information_schema.foreign_data_wrappers ORDER BY 1, 2;
 statement: SELECT * FROM information_schema.foreign_data_wrapper_options ORDER BY 1, 2, 3;
 statement: SELECT * FROM information_schema.foreign_servers ORDER BY 1, 2;
 statement: SELECT * FROM information_schema.foreign_server_options ORDER BY 1, 2, 3;
 statement: SELECT * FROM information_schema.user_mappings ORDER BY lower(authorization_identifier), 2, 3;
 statement: SELECT * FROM information_schema.user_mapping_options ORDER BY lower(authorization_identifier), 2, 3, 4;
 statement: SELECT * FROM information_schema.usage_privileges WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
 statement: SELECT * FROM information_schema.role_usage_grants WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
 statement: SELECT * FROM information_schema.foreign_tables ORDER BY 1, 2, 3;
 statement: SELECT * FROM information_schema.foreign_table_options ORDER BY 1, 2, 3, 4;
 statement: SET ROLE regress_test_role;
 statement: SELECT * FROM information_schema.user_mapping_options ORDER BY 1, 2, 3, 4;
 statement: SELECT * FROM information_schema.usage_privileges WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
 statement: SELECT * FROM information_schema.role_usage_grants WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
 statement: DROP USER MAPPING FOR current_user SERVER t1;
 statement: SET ROLE regress_test_role2;
 statement: SELECT * FROM information_schema.user_mapping_options ORDER BY 1, 2, 3, 4;
 statement: RESET ROLE;
 statement: SELECT has_foreign_data_wrapper_privilege('regress_test_role',                                                                                                                                                                                                                          +
     (SELECT oid FROM pg_foreign_data_wrapper WHERE fdwname='foo'), 'USAGE');
 statement: SELECT has_foreign_data_wrapper_privilege('regress_test_role', 'foo', 'USAGE');
 statement: SELECT has_foreign_data_wrapper_privilege(                                                                                                                                                                                                                                              +
     (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'),                                                                                                                                                                                                                                  +
     (SELECT oid FROM pg_foreign_data_wrapper WHERE fdwname='foo'), 'USAGE');
 statement: SELECT has_foreign_data_wrapper_privilege(                                                                                                                                                                                                                                              +
     (SELECT oid FROM pg_foreign_data_wrapper WHERE fdwname='foo'), 'USAGE');
 statement: SELECT has_foreign_data_wrapper_privilege(                                                                                                                                                                                                                                              +
     (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'), 'foo', 'USAGE');
 statement: SELECT has_foreign_data_wrapper_privilege('foo', 'USAGE');
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
 statement: SELECT has_foreign_data_wrapper_privilege('regress_test_role', 'foo', 'USAGE');
 statement: SELECT has_server_privilege('regress_test_role',                                                                                                                                                                                                                                        +
     (SELECT oid FROM pg_foreign_server WHERE srvname='s8'), 'USAGE');
 statement: SELECT has_server_privilege('regress_test_role', 's8', 'USAGE');
 statement: SELECT has_server_privilege(                                                                                                                                                                                                                                                            +
     (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'),                                                                                                                                                                                                                                  +
     (SELECT oid FROM pg_foreign_server WHERE srvname='s8'), 'USAGE');
 statement: SELECT has_server_privilege(                                                                                                                                                                                                                                                            +
     (SELECT oid FROM pg_foreign_server WHERE srvname='s8'), 'USAGE');
 statement: SELECT has_server_privilege(                                                                                                                                                                                                                                                            +
     (SELECT oid FROM pg_roles WHERE rolname='regress_test_role'), 's8', 'USAGE');
 statement: SELECT has_server_privilege('s8', 'USAGE');
 statement: GRANT USAGE ON FOREIGN SERVER s8 TO regress_test_role;
 statement: SELECT has_server_privilege('regress_test_role', 's8', 'USAGE');
 statement: REVOKE USAGE ON FOREIGN SERVER s8 FROM regress_test_role;
 statement: GRANT USAGE ON FOREIGN SERVER s4 TO regress_test_role;
 statement: DROP USER MAPPING FOR public SERVER s4;
 statement: ALTER SERVER s6 OPTIONS (DROP host, DROP dbname);
 statement: ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (DROP username);
 statement: ALTER FOREIGN DATA WRAPPER foo VALIDATOR postgresql_fdw_validator;
 statement: SET ROLE unprivileged_role;
 statement: CREATE FOREIGN DATA WRAPPER foobar;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (gotcha 'true');
 statement: ALTER FOREIGN DATA WRAPPER foo OWNER TO unprivileged_role;
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
 statement: CREATE SERVER s9 FOREIGN DATA WRAPPER foo;
 statement: ALTER SERVER s4 VERSION '0.5';
 statement: ALTER SERVER s4 OWNER TO unprivileged_role;
 statement: DROP SERVER s4;
 statement: GRANT USAGE ON FOREIGN SERVER s4 TO regress_test_role;
 statement: CREATE USER MAPPING FOR public SERVER s4;
 statement: ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (gotcha 'true');
 statement: DROP USER MAPPING FOR regress_test_role SERVER s6;
 statement: RESET ROLE;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER postgresql TO unprivileged_role;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO unprivileged_role WITH GRANT OPTION;
 statement: SET ROLE unprivileged_role;
 statement: CREATE FOREIGN DATA WRAPPER foobar;
 statement: ALTER FOREIGN DATA WRAPPER foo OPTIONS (gotcha 'true');
 statement: DROP FOREIGN DATA WRAPPER foo;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER postgresql TO regress_test_role;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
 statement: CREATE SERVER s9 FOREIGN DATA WRAPPER postgresql;
 statement: ALTER SERVER s6 VERSION '0.5';
 statement: DROP SERVER s6;
 statement: GRANT USAGE ON FOREIGN SERVER s6 TO regress_test_role;
 statement: GRANT USAGE ON FOREIGN SERVER s9 TO regress_test_role;
 statement: CREATE USER MAPPING FOR public SERVER s6;
 statement: CREATE USER MAPPING FOR public SERVER s9;
 statement: ALTER USER MAPPING FOR regress_test_role SERVER s6 OPTIONS (gotcha 'true');
 statement: DROP USER MAPPING FOR regress_test_role SERVER s6;
 statement: RESET ROLE;
 statement: REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM unprivileged_role;
 statement: REVOKE USAGE ON FOREIGN DATA WRAPPER foo FROM unprivileged_role CASCADE;
 statement: SET ROLE unprivileged_role;
 statement: GRANT USAGE ON FOREIGN DATA WRAPPER foo TO regress_test_role;
 statement: CREATE SERVER s10 FOREIGN DATA WRAPPER foo;
 statement: ALTER SERVER s9 VERSION '1.1';
 statement: GRANT USAGE ON FOREIGN SERVER s9 TO regress_test_role;
 statement: CREATE USER MAPPING FOR current_user SERVER s9;
 statement: DROP SERVER s9 CASCADE;
 statement: RESET ROLE;
 statement: CREATE SERVER s9 FOREIGN DATA WRAPPER foo;
 statement: GRANT USAGE ON FOREIGN SERVER s9 TO unprivileged_role;
 statement: SET ROLE unprivileged_role;
 statement: ALTER SERVER s9 VERSION '1.2';
 statement: GRANT USAGE ON FOREIGN SERVER s9 TO regress_test_role;
 statement: CREATE USER MAPPING FOR current_user SERVER s9;
 statement: DROP SERVER s9 CASCADE;
 statement: SET ROLE regress_test_role;
 statement: CREATE SERVER s10 FOREIGN DATA WRAPPER foo;
 statement: CREATE USER MAPPING FOR public SERVER s10 OPTIONS (user 'secret');
 statement: CREATE USER MAPPING FOR unprivileged_role SERVER s10 OPTIONS (user 'secret');
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name",                                                                                                                                                                                                                                                                       +
  CASE WHEN umoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(umoptions)),  ', ') || ')'   END AS "FDW Options"                      +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: RESET ROLE;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name",                                                                                                                                                                                                                                                                       +
  CASE WHEN umoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(umoptions)),  ', ') || ')'   END AS "FDW Options"                      +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: SET ROLE unprivileged_role;
 statement: SELECT um.srvname AS "Server",                                                                                                                                                                                                                                                          +
   um.usename AS "User name",                                                                                                                                                                                                                                                                       +
  CASE WHEN umoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT   pg_catalog.quote_ident(option_name) ||  ' ' ||   pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(umoptions)),  ', ') || ')'   END AS "FDW Options"                      +
 FROM pg_catalog.pg_user_mappings um                                                                                                                                                                                                                                                                +
 ORDER BY 1, 2;
 statement: RESET ROLE;
 statement: DROP SERVER s10 CASCADE;
 statement: CREATE FUNCTION dummy_trigger() RETURNS TRIGGER AS $$                                                                                                                                                                                                                                   +
   BEGIN                                                                                                                                                                                                                                                                                            +
     RETURN NULL;                                                                                                                                                                                                                                                                                   +
   END                                                                                                                                                                                                                                                                                              +
 $$ language plpgsql;
 statement: CREATE TRIGGER trigtest_before_stmt BEFORE INSERT OR UPDATE OR DELETE                                                                                                                                                                                                                   +
 ON foreign_schema.foreign_table_1                                                                                                                                                                                                                                                                  +
 FOR EACH STATEMENT                                                                                                                                                                                                                                                                                 +
 EXECUTE PROCEDURE dummy_trigger();
 statement: CREATE TRIGGER trigtest_after_stmt AFTER INSERT OR UPDATE OR DELETE                                                                                                                                                                                                                     +
 ON foreign_schema.foreign_table_1                                                                                                                                                                                                                                                                  +
 FOR EACH STATEMENT                                                                                                                                                                                                                                                                                 +
 EXECUTE PROCEDURE dummy_trigger();
 statement: CREATE TRIGGER trigtest_before_row BEFORE INSERT OR UPDATE OR DELETE                                                                                                                                                                                                                    +
 ON foreign_schema.foreign_table_1                                                                                                                                                                                                                                                                  +
 FOR EACH ROW                                                                                                                                                                                                                                                                                       +
 EXECUTE PROCEDURE dummy_trigger();
 statement: CREATE TRIGGER trigtest_after_row AFTER INSERT OR UPDATE OR DELETE                                                                                                                                                                                                                      +
 ON foreign_schema.foreign_table_1                                                                                                                                                                                                                                                                  +
 FOR EACH ROW                                                                                                                                                                                                                                                                                       +
 EXECUTE PROCEDURE dummy_trigger();
 statement: CREATE CONSTRAINT TRIGGER trigtest_constraint AFTER INSERT OR UPDATE OR DELETE                                                                                                                                                                                                          +
 ON foreign_schema.foreign_table_1                                                                                                                                                                                                                                                                  +
 FOR EACH ROW                                                                                                                                                                                                                                                                                       +
 EXECUTE PROCEDURE dummy_trigger();
 statement: ALTER FOREIGN TABLE foreign_schema.foreign_table_1                                                                                                                                                                                                                                      +
         DISABLE TRIGGER trigtest_before_stmt;
 statement: ALTER FOREIGN TABLE foreign_schema.foreign_table_1                                                                                                                                                                                                                                      +
         ENABLE TRIGGER trigtest_before_stmt;
 statement: DROP TRIGGER trigtest_before_stmt ON foreign_schema.foreign_table_1;
 statement: DROP TRIGGER trigtest_before_row ON foreign_schema.foreign_table_1;
 statement: DROP TRIGGER trigtest_after_stmt ON foreign_schema.foreign_table_1;
 statement: DROP TRIGGER trigtest_after_row ON foreign_schema.foreign_table_1;
 statement: DROP FUNCTION dummy_trigger();
 statement: CREATE TABLE pt1 (                                                                                                                                                                                                                                                                      +
         c1 integer NOT NULL,                                                                                                                                                                                                                                                                       +
         c2 text,                                                                                                                                                                                                                                                                                   +
         c3 date                                                                                                                                                                                                                                                                                    +
 );
 statement: CREATE FOREIGN TABLE ft2 () INHERITS (pt1)                                                                                                                                                                                                                                              +
   SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21534';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21534' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21534' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21534' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21534' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21534' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: DROP FOREIGN TABLE ft2;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE FOREIGN TABLE ft2 (                                                                                                                                                                                                                                                              +
         c1 integer NOT NULL,                                                                                                                                                                                                                                                                       +
         c2 text,                                                                                                                                                                                                                                                                                   +
         c3 date                                                                                                                                                                                                                                                                                    +
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER FOREIGN TABLE ft2 INHERIT pt1;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE ct3() INHERITS(ft2);
 statement: CREATE FOREIGN TABLE ft3 (                                                                                                                                                                                                                                                              +
         c1 integer NOT NULL,                                                                                                                                                                                                                                                                       +
         c2 text,                                                                                                                                                                                                                                                                                   +
         c3 date                                                                                                                                                                                                                                                                                    +
 ) INHERITS(ft2)                                                                                                                                                                                                                                                                                    +
   SERVER s0;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ct3)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21540';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21540' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21540' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21540' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21540' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft3)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21546';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21546' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21546' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21546' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21546' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21546' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 ADD COLUMN c4 integer;
 statement: ALTER TABLE pt1 ADD COLUMN c5 integer DEFAULT 0;
 statement: ALTER TABLE pt1 ADD COLUMN c6 integer;
 statement: ALTER TABLE pt1 ADD COLUMN c7 integer NOT NULL;
 statement: ALTER TABLE pt1 ADD COLUMN c8 integer;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ct3)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21540';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21540' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21540' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21540' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21540' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft3)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21546';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21546' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21546' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21546' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21546' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21546' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 ALTER COLUMN c4 SET DEFAULT 0;
 statement: ALTER TABLE pt1 ALTER COLUMN c5 DROP DEFAULT;
 statement: ALTER TABLE pt1 ALTER COLUMN c6 SET NOT NULL;
 statement: ALTER TABLE pt1 ALTER COLUMN c7 DROP NOT NULL;
 statement: ALTER TABLE pt1 ALTER COLUMN c8 TYPE char(10) USING '0';
 statement: ALTER TABLE pt1 ALTER COLUMN c8 TYPE char(10);
 statement: ALTER TABLE pt1 ALTER COLUMN c8 SET DATA TYPE text;
 statement: ALTER TABLE pt1 ALTER COLUMN c1 SET STATISTICS 10000;
 statement: ALTER TABLE pt1 ALTER COLUMN c1 SET (n_distinct = 100);
 statement: ALTER TABLE pt1 ALTER COLUMN c8 SET STATISTICS -1;
 statement: ALTER TABLE pt1 ALTER COLUMN c8 SET STORAGE EXTERNAL;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 DROP COLUMN c4;
 statement: ALTER TABLE pt1 DROP COLUMN c5;
 statement: ALTER TABLE pt1 DROP COLUMN c6;
 statement: ALTER TABLE pt1 DROP COLUMN c7;
 statement: ALTER TABLE pt1 DROP COLUMN c8;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 ADD CONSTRAINT pt1chk1 CHECK (c1 > 0) NO INHERIT;
 statement: ALTER TABLE pt1 ADD CONSTRAINT pt1chk2 CHECK (c2 <> '');
 statement: SELECT relname, conname, contype, conislocal, coninhcount, connoinherit                                                                                                                                                                                                                 +
   FROM pg_class AS pc JOIN pg_constraint AS pgc ON (conrelid = pc.oid)                                                                                                                                                                                                                             +
   WHERE pc.relname = 'pt1'                                                                                                                                                                                                                                                                         +
   ORDER BY 1,2;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21537';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21537' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21537' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21537' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21537' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21537' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21537' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: DROP FOREIGN TABLE ft2;
 statement: DROP FOREIGN TABLE ft2 CASCADE;
 statement: CREATE FOREIGN TABLE ft2 (                                                                                                                                                                                                                                                              +
         c1 integer NOT NULL,                                                                                                                                                                                                                                                                       +
         c2 text,                                                                                                                                                                                                                                                                                   +
         c3 date                                                                                                                                                                                                                                                                                    +
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 statement: ALTER FOREIGN TABLE ft2 INHERIT pt1;
 statement: ALTER FOREIGN TABLE ft2 ADD CONSTRAINT pt1chk2 CHECK (c2 <> '');
 statement: ALTER FOREIGN TABLE ft2 INHERIT pt1;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21598';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21598' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21598' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21598' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21598' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21598' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21598' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 DROP CONSTRAINT pt1chk1 CASCADE;
 statement: ALTER TABLE pt1 DROP CONSTRAINT pt1chk2 CASCADE;
 statement: INSERT INTO pt1 VALUES (1, 'pt1'::text, '1994-01-01'::date);
 statement: ALTER TABLE pt1 ADD CONSTRAINT pt1chk3 CHECK (c2 <> '') NOT VALID;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21598';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21598' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21598' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21598' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21598' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21598' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21598' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 VALIDATE CONSTRAINT pt1chk3;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21598';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21598' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21598' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21598' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21598' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21598' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21598' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 SET WITH OIDS;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21598';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21598' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21598' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21598' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21598' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21598' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21598' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE ft2 SET WITHOUT OIDS;
 statement: ALTER TABLE pt1 SET WITHOUT OIDS;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21598';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21598' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21598' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21598' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21598' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21598' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21598' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: ALTER TABLE pt1 RENAME COLUMN c1 TO f1;
 statement: ALTER TABLE pt1 RENAME COLUMN c2 TO f2;
 statement: ALTER TABLE pt1 RENAME COLUMN c3 TO f3;
 statement: ALTER TABLE pt1 RENAME CONSTRAINT pt1chk3 TO f2_check;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(pt1)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21528';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                                                           +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21528' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21528' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21528' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21528' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21528' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(ft2)$'                                                                                                                                                                                                                                                                        +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')                             +
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                                                   +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '21598';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   CASE WHEN attfdwoptions IS NULL THEN '' ELSE   '(' || pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) ||  ' ' || pg_catalog.quote_literal(option_value)  FROM   pg_catalog.pg_options_to_table(attfdwoptions)), ', ') || ')' END AS attfdwoptions,                   +
   a.attstorage,                                                                                                                                                                                                                                                                                    +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                                               +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '21598' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT r.conname, pg_catalog.pg_get_constraintdef(r.oid, true)                                                                                                                                                                                                                          +
 FROM pg_catalog.pg_constraint r                                                                                                                                                                                                                                                                    +
 WHERE r.conrelid = '21598' AND r.contype = 'c'                                                                                                                                                                                                                                                     +
 ORDER BY 1;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '21598' ORDER BY 1;
 statement: SELECT s.srvname,                                                                                                                                                                                                                                                                       +
   pg_catalog.array_to_string(ARRAY(                                                                                                                                                                                                                                                                +
     SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value)                                                                                                                                                                                                    +
     FROM pg_catalog.pg_options_to_table(ftoptions)),  ', ')                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_foreign_table f,                                                                                                                                                                                                                                                                +
      pg_catalog.pg_foreign_server s                                                                                                                                                                                                                                                                +
 WHERE f.ftrelid = '21598' AND s.oid = f.ftserver;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '21598' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '21598' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: TRUNCATE ft2;
 statement: TRUNCATE pt1;
 statement: DROP TABLE pt1 CASCADE;
 statement: IMPORT FOREIGN SCHEMA s1 FROM SERVER s9 INTO public;
 statement: IMPORT FOREIGN SCHEMA s1 LIMIT TO (t1) FROM SERVER s9 INTO public;
 statement: IMPORT FOREIGN SCHEMA s1 EXCEPT (t1) FROM SERVER s9 INTO public;
 statement: IMPORT FOREIGN SCHEMA s1 EXCEPT (t1, t2) FROM SERVER s9 INTO public                                                                                                                                                                                                                     +
 OPTIONS (option1 'value1', option2 'value2');
 statement: DROP FOREIGN TABLE no_table;
 statement: DROP FOREIGN TABLE IF EXISTS no_table;
 statement: DROP FOREIGN TABLE foreign_schema.foreign_table_1;
 statement: REASSIGN OWNED BY regress_test_role TO regress_test_role2;
 statement: DROP OWNED BY regress_test_role2;
 statement: DROP OWNED BY regress_test_role2 CASCADE;
 statement: DROP SCHEMA foreign_schema CASCADE;
 statement: DROP ROLE regress_test_role;
 statement: DROP SERVER t1 CASCADE;
 statement: DROP USER MAPPING FOR regress_test_role SERVER s6;
 statement: DROP FOREIGN DATA WRAPPER foo CASCADE;
 statement: DROP SERVER s8 CASCADE;
 statement: DROP ROLE regress_test_indirect;
 statement: DROP ROLE regress_test_role;
 statement: DROP ROLE unprivileged_role;
 statement: REVOKE ALL ON FOREIGN DATA WRAPPER postgresql FROM unprivileged_role;
 statement: DROP ROLE unprivileged_role;
 statement: DROP ROLE regress_test_role2;
 statement: DROP FOREIGN DATA WRAPPER postgresql CASCADE;
 statement: DROP FOREIGN DATA WRAPPER dummy CASCADE;
 statement: DROP ROLE foreign_data_user;
 statement: SELECT fdwname, fdwhandler, fdwvalidator, fdwoptions FROM pg_foreign_data_wrapper;
 statement: SELECT srvname, srvoptions FROM pg_foreign_server;
 statement: SELECT * FROM pg_user_mapping;

