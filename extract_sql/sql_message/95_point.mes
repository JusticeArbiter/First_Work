LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE TABLE POINT_TBL(f1 point);
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(0.0,0.0)');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(-10.0,0.0)');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(-3.0,4.0)');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(5.1, 34.5)');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(-5.0,-12.0)');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('asdfasdf');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('10.0,10.0');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(10.0 10.0)');
 statement: INSERT INTO POINT_TBL(f1) VALUES ('(10.0,10.0');
 statement: SELECT '' AS six, * FROM POINT_TBL;
 statement: SELECT '' AS three, p.* FROM POINT_TBL p WHERE p.f1 << '(0.0, 0.0)';
 statement: SELECT '' AS three, p.* FROM POINT_TBL p WHERE '(0.0,0.0)' >> p.f1;
 statement: SELECT '' AS one, p.* FROM POINT_TBL p WHERE '(0.0,0.0)' >^ p.f1;
 statement: SELECT '' AS one, p.* FROM POINT_TBL p WHERE p.f1 <^ '(0.0, 0.0)';
 statement: SELECT '' AS one, p.* FROM POINT_TBL p WHERE p.f1 ~= '(5.1, 34.5)';
 statement: SELECT '' AS three, p.* FROM POINT_TBL p                                                           +
    WHERE p.f1 <@ box '(0,0,100,100)';
 statement: SELECT '' AS three, p.* FROM POINT_TBL p                                                           +
    WHERE box '(0,0,100,100)' @> p.f1;
 statement: SELECT '' AS three, p.* FROM POINT_TBL p                                                           +
    WHERE not p.f1 <@ box '(0,0,100,100)';
 statement: SELECT '' AS two, p.* FROM POINT_TBL p                                                             +
    WHERE p.f1 <@ path '[(0,0),(-10,0),(-10,10)]';
 statement: SELECT '' AS three, p.* FROM POINT_TBL p                                                           +
    WHERE not box '(0,0,100,100)' @> p.f1;
 statement: SELECT '' AS six, p.f1, p.f1 <-> point '(0,0)' AS dist                                             +
    FROM POINT_TBL p                                                                                           +
    ORDER BY dist;
 statement: SELECT '' AS thirtysix, p1.f1 AS point1, p2.f1 AS point2, p1.f1 <-> p2.f1 AS dist                  +
    FROM POINT_TBL p1, POINT_TBL p2                                                                            +
    ORDER BY dist, p1.f1[0], p2.f1[0];
 statement: SELECT '' AS thirty, p1.f1 AS point1, p2.f1 AS point2                                              +
    FROM POINT_TBL p1, POINT_TBL p2                                                                            +
    WHERE (p1.f1 <-> p2.f1) > 3;
 statement: SELECT '' AS fifteen, p1.f1 AS point1, p2.f1 AS point2, (p1.f1 <-> p2.f1) AS distance              +
    FROM POINT_TBL p1, POINT_TBL p2                                                                            +
    WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1                                                             +
    ORDER BY distance, p1.f1[0], p2.f1[0];
 statement: SELECT '' AS three, p1.f1 AS point1, p2.f1 AS point2, (p1.f1 <-> p2.f1) AS distance                +
    FROM POINT_TBL p1, POINT_TBL p2                                                                            +
    WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1 and p1.f1 >^ p2.f1                                          +
    ORDER BY distance;
 statement: CREATE TEMP TABLE point_gist_tbl(f1 point);
 statement: INSERT INTO point_gist_tbl SELECT '(0,0)' FROM generate_series(0,1000);
 statement: CREATE INDEX point_gist_tbl_index ON point_gist_tbl USING gist (f1);
 statement: INSERT INTO point_gist_tbl VALUES ('(0.0000009,0.0000009)');
 statement: SET enable_seqscan TO true;
 statement: SET enable_indexscan TO false;
 statement: SET enable_bitmapscan TO false;
 statement: SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000009,0.0000009)'::point;
 statement: SELECT COUNT(*) FROM point_gist_tbl WHERE f1 <@ '(0.0000009,0.0000009),(0.0000009,0.0000009)'::box;
 statement: SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000018,0.0000018)'::point;
 statement: SET enable_seqscan TO false;
 statement: SET enable_indexscan TO true;
 statement: SET enable_bitmapscan TO true;
 statement: SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000009,0.0000009)'::point;
 statement: SELECT COUNT(*) FROM point_gist_tbl WHERE f1 <@ '(0.0000009,0.0000009),(0.0000009,0.0000009)'::box;
 statement: SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000018,0.0000018)'::point;
 statement: RESET enable_seqscan;
 statement: RESET enable_indexscan;
 statement: RESET enable_bitmapscan;

