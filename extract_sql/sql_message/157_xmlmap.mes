LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE SCHEMA testxmlschema;
 statement: CREATE TABLE testxmlschema.test1 (a int, b text);
 statement: INSERT INTO testxmlschema.test1 VALUES (1, 'one'), (2, 'two'), (-1, null);
 statement: CREATE DOMAIN testxmldomain AS varchar;
 statement: CREATE TABLE testxmlschema.test2 (z int, y varchar(500), x char(6), w numeric(9,2), v smallint, u bigint, t real, s time, r timestamp, q date, p xml, o testxmldomain, n bool, m bytea, aaa text);
 statement: ALTER TABLE testxmlschema.test2 DROP COLUMN aaa;
 statement: INSERT INTO testxmlschema.test2 VALUES (55, 'abc', 'def', 98.6, 2, 999, 0, '21:07', '2009-06-08 21:07:30', '2009-06-08', NULL, 'ABC', true, 'XYZ');
 statement: SELECT table_to_xml('testxmlschema.test1', false, false, '');
 statement: SELECT table_to_xml('testxmlschema.test1', true, false, 'foo');
 statement: SELECT table_to_xml('testxmlschema.test1', false, true, '');
 statement: SELECT table_to_xml('testxmlschema.test1', true, true, '');
 statement: SELECT table_to_xml('testxmlschema.test2', false, false, '');
 statement: SELECT table_to_xmlschema('testxmlschema.test1', false, false, '');
 statement: SELECT table_to_xmlschema('testxmlschema.test1', true, false, '');
 statement: SELECT table_to_xmlschema('testxmlschema.test1', false, true, 'foo');
 statement: SELECT table_to_xmlschema('testxmlschema.test1', true, true, '');
 statement: SELECT table_to_xmlschema('testxmlschema.test2', false, false, '');
 statement: SELECT table_to_xml_and_xmlschema('testxmlschema.test1', false, false, '');
 statement: SELECT table_to_xml_and_xmlschema('testxmlschema.test1', true, false, '');
 statement: SELECT table_to_xml_and_xmlschema('testxmlschema.test1', false, true, '');
 statement: SELECT table_to_xml_and_xmlschema('testxmlschema.test1', true, true, 'foo');
 statement: SELECT query_to_xml('SELECT * FROM testxmlschema.test1', false, false, '');
 statement: SELECT query_to_xmlschema('SELECT * FROM testxmlschema.test1', false, false, '');
 statement: SELECT query_to_xml_and_xmlschema('SELECT * FROM testxmlschema.test1', true, true, '');
 statement: DECLARE xc CURSOR WITH HOLD FOR SELECT * FROM testxmlschema.test1 ORDER BY 1, 2;
 statement: SELECT cursor_to_xml('xc'::refcursor, 5, false, true, '');
 statement: SELECT cursor_to_xmlschema('xc'::refcursor, false, true, '');
 statement: MOVE BACKWARD ALL IN xc;
 statement: SELECT cursor_to_xml('xc'::refcursor, 5, true, false, '');
 statement: SELECT cursor_to_xmlschema('xc'::refcursor, true, false, '');
 statement: SELECT schema_to_xml('testxmlschema', false, true, '');
 statement: SELECT schema_to_xml('testxmlschema', true, false, '');
 statement: SELECT schema_to_xmlschema('testxmlschema', false, true, '');
 statement: SELECT schema_to_xmlschema('testxmlschema', true, false, '');
 statement: SELECT schema_to_xml_and_xmlschema('testxmlschema', true, true, 'foo');
 statement: CREATE DOMAIN testboolxmldomain AS bool;
 statement: CREATE DOMAIN testdatexmldomain AS date;
 statement: CREATE TABLE testxmlschema.test3                                                                                                                                                                  +
     AS SELECT true c1,                                                                                                                                                                                       +
               true::testboolxmldomain c2,                                                                                                                                                                    +
               '2013-02-21'::date c3,                                                                                                                                                                         +
               '2013-02-21'::testdatexmldomain c4;
 statement: SELECT xmlforest(c1, c2, c3, c4) FROM testxmlschema.test3;
 statement: SELECT table_to_xml('testxmlschema.test3', true, true, '');

