LOG:  statement: select message from postgres_log where query is null;
 statement: SET client_min_messages TO 'warning';
 statement: DROP ROLE IF EXISTS seclabel_user1;
 statement: DROP ROLE IF EXISTS seclabel_user2;
 statement: DROP TABLE IF EXISTS seclabel_tbl1;
 statement: DROP TABLE IF EXISTS seclabel_tbl2;
 statement: DROP TABLE IF EXISTS seclabel_tbl3;
 statement: CREATE USER seclabel_user1 WITH CREATEROLE;
 statement: CREATE USER seclabel_user2;
 statement: CREATE TABLE seclabel_tbl1 (a int, b text);
 statement: CREATE TABLE seclabel_tbl2 (x int, y text);
 statement: CREATE VIEW seclabel_view1 AS SELECT * FROM seclabel_tbl2;
 statement: CREATE FUNCTION seclabel_four() RETURNS integer AS $$SELECT 4$$ language sql;
 statement: CREATE DOMAIN seclabel_domain AS text;
 statement: ALTER TABLE seclabel_tbl1 OWNER TO seclabel_user1;
 statement: ALTER TABLE seclabel_tbl2 OWNER TO seclabel_user2;
 statement: RESET client_min_messages;
 statement: SECURITY LABEL ON TABLE seclabel_tbl1 IS 'classified';
 statement: SECURITY LABEL FOR 'dummy' ON TABLE seclabel_tbl1 IS 'classified';
 statement: SECURITY LABEL ON TABLE seclabel_tbl1 IS '...invalid label...';
 statement: SECURITY LABEL ON TABLE seclabel_tbl3 IS 'unclassified';
 statement: SECURITY LABEL ON ROLE seclabel_user1 IS 'classified';
 statement: SECURITY LABEL FOR 'dummy' ON ROLE seclabel_user1 IS 'classified';
 statement: SECURITY LABEL ON ROLE seclabel_user1 IS '...invalid label...';
 statement: SECURITY LABEL ON ROLE seclabel_user3 IS 'unclassified';
 statement: DROP FUNCTION seclabel_four();
 statement: DROP DOMAIN seclabel_domain;
 statement: DROP VIEW seclabel_view1;
 statement: DROP TABLE seclabel_tbl1;
 statement: DROP TABLE seclabel_tbl2;
 statement: DROP USER seclabel_user1;
 statement: DROP USER seclabel_user2;

