LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE SCHEMA lock_schema1;
 statement: SET search_path = lock_schema1;
 statement: CREATE TABLE lock_tbl1 (a BIGINT);
 statement: CREATE VIEW lock_view1 AS SELECT 1;
 statement: CREATE ROLE regress_rol_lock1;
 statement: ALTER ROLE regress_rol_lock1 SET search_path = lock_schema1;
 statement: GRANT USAGE ON SCHEMA lock_schema1 TO regress_rol_lock1;
 statement: BEGIN TRANSACTION;
 statement: LOCK TABLE lock_tbl1 IN ACCESS SHARE MODE;
 statement: LOCK lock_tbl1 IN ROW SHARE MODE;
 statement: LOCK TABLE lock_tbl1 IN ROW EXCLUSIVE MODE;
 statement: LOCK TABLE lock_tbl1 IN SHARE UPDATE EXCLUSIVE MODE;
 statement: LOCK TABLE lock_tbl1 IN SHARE MODE;
 statement: LOCK lock_tbl1 IN SHARE ROW EXCLUSIVE MODE;
 statement: LOCK TABLE lock_tbl1 IN EXCLUSIVE MODE;
 statement: LOCK TABLE lock_tbl1 IN ACCESS EXCLUSIVE MODE;
 statement: ROLLBACK;
 statement: BEGIN TRANSACTION;
 statement: LOCK TABLE lock_tbl1 IN ACCESS SHARE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN ROW SHARE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN ROW EXCLUSIVE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN SHARE UPDATE EXCLUSIVE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN SHARE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN SHARE ROW EXCLUSIVE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN EXCLUSIVE MODE NOWAIT;
 statement: LOCK TABLE lock_tbl1 IN ACCESS EXCLUSIVE MODE NOWAIT;
 statement: LOCK TABLE lock_view1 IN EXCLUSIVE MODE;
 statement: ROLLBACK;
 statement: CREATE TABLE lock_tbl2 (b BIGINT) INHERITS (lock_tbl1);
 statement: CREATE TABLE lock_tbl3 () INHERITS (lock_tbl2);
 statement: BEGIN TRANSACTION;
 statement: LOCK TABLE lock_tbl1 * IN ACCESS EXCLUSIVE MODE;
 statement: ROLLBACK;
 statement: GRANT UPDATE ON TABLE lock_tbl1 TO regress_rol_lock1;
 statement: SET ROLE regress_rol_lock1;
 statement: BEGIN;
 statement: LOCK TABLE lock_tbl1 * IN ACCESS EXCLUSIVE MODE;
 statement: ROLLBACK;
 statement: BEGIN;
 statement: LOCK TABLE ONLY lock_tbl1;
 statement: ROLLBACK;
 statement: RESET ROLE;
 statement: DROP VIEW lock_view1;
 statement: DROP TABLE lock_tbl3;
 statement: DROP TABLE lock_tbl2;
 statement: DROP TABLE lock_tbl1;
 statement: DROP SCHEMA lock_schema1 CASCADE;
 statement: DROP ROLE regress_rol_lock1;
 statement: RESET search_path;
 statement: SELECT test_atomic_ops();

