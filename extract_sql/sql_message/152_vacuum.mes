LOG:  statement: select message from postgres_log where query is null;
 statement: CREATE TABLE vactst (i INT);
 statement: INSERT INTO vactst VALUES (1);
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst VALUES (0);
 statement: SELECT count(*) FROM vactst;
 statement: DELETE FROM vactst WHERE i != 0;
 statement: SELECT * FROM vactst;
 statement: VACUUM FULL vactst;
 statement: UPDATE vactst SET i = i + 1;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst SELECT * FROM vactst;
 statement: INSERT INTO vactst VALUES (0);
 statement: SELECT count(*) FROM vactst;
 statement: DELETE FROM vactst WHERE i != 0;
 statement: VACUUM (FULL) vactst;
 statement: DELETE FROM vactst;
 statement: SELECT * FROM vactst;
 statement: VACUUM (FULL, FREEZE) vactst;
 statement: VACUUM (ANALYZE, FULL) vactst;
 statement: CREATE TABLE vaccluster (i INT PRIMARY KEY);
 statement: ALTER TABLE vaccluster CLUSTER ON vaccluster_pkey;
 statement: CLUSTER vaccluster;
 statement: CREATE FUNCTION do_analyze() RETURNS VOID VOLATILE LANGUAGE SQL          +
         AS 'ANALYZE pg_am';
 statement: CREATE FUNCTION wrap_do_analyze(c INT) RETURNS INT IMMUTABLE LANGUAGE SQL+
         AS 'SELECT $1 FROM do_analyze()';
 statement: CREATE INDEX ON vaccluster(wrap_do_analyze(i));
 statement: INSERT INTO vaccluster VALUES (1), (2);
 statement: ANALYZE vaccluster;
 statement: VACUUM FULL pg_am;
 statement: VACUUM FULL pg_class;
 statement: VACUUM FULL pg_database;
 statement: VACUUM FULL vaccluster;
 statement: VACUUM FULL vactst;
 statement: VACUUM ANALYZE vaccluster(i,i);
 statement: ANALYZE vaccluster(i,i);
 statement: DROP TABLE vaccluster;
 statement: DROP TABLE vactst;

