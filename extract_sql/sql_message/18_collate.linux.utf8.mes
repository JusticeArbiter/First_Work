LOG:  statement: select message from postgres_log where query is null;
 statement: /*                                                                                                                                                                                                                                                                                      +
  * This test is for Linux/glibc systems and assumes that a full set of                                                                                                                                                                                                                             +
  * locales is installed.  It must be run in a database with UTF-8 encoding,                                                                                                                                                                                                                        +
  * because other encodings don't support all the characters used.                                                                                                                                                                                                                                  +
  */                                                                                                                                                                                                                                                                                                +
 SET client_encoding TO UTF8;
 statement: CREATE TABLE collate_test1 (                                                                                                                                                                                                                                                            +
     a int,                                                                                                                                                                                                                                                                                         +
     b text COLLATE "en_US" NOT NULL                                                                                                                                                                                                                                                                +
 );
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(collate_test1)$'                                                                                                                                                                                                                                                              +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19427';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19427' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19427' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19427' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19427' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE collate_test_fail (                                                                                                                                                                                                                                                        +
     a int,                                                                                                                                                                                                                                                                                         +
     b text COLLATE "ja_JP.eucjp"                                                                                                                                                                                                                                                                   +
 );
 statement: CREATE TABLE collate_test_fail (                                                                                                                                                                                                                                                        +
     a int,                                                                                                                                                                                                                                                                                         +
     b text COLLATE "foo"                                                                                                                                                                                                                                                                           +
 );
 statement: CREATE TABLE collate_test_fail (                                                                                                                                                                                                                                                        +
     a int COLLATE "en_US",                                                                                                                                                                                                                                                                         +
     b text                                                                                                                                                                                                                                                                                         +
 );
 statement: CREATE TABLE collate_test_like (                                                                                                                                                                                                                                                        +
     LIKE collate_test1                                                                                                                                                                                                                                                                             +
 );
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(collate_test_like)$'                                                                                                                                                                                                                                                          +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19433';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19433' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19433' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19433' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19433' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE collate_test2 (                                                                                                                                                                                                                                                            +
     a int,                                                                                                                                                                                                                                                                                         +
     b text COLLATE "sv_SE"                                                                                                                                                                                                                                                                         +
 );
 statement: CREATE TABLE collate_test3 (                                                                                                                                                                                                                                                            +
     a int,                                                                                                                                                                                                                                                                                         +
     b text COLLATE "C"                                                                                                                                                                                                                                                                             +
 );
 statement: INSERT INTO collate_test1 VALUES (1, 'abc'), (2, 'äbc'), (3, 'bbc'), (4, 'ABC');
 statement: INSERT INTO collate_test2 SELECT * FROM collate_test1;
 statement: INSERT INTO collate_test3 SELECT * FROM collate_test1;
 statement: SELECT * FROM collate_test1 WHERE b >= 'bbc';
 statement: SELECT * FROM collate_test2 WHERE b >= 'bbc';
 statement: SELECT * FROM collate_test3 WHERE b >= 'bbc';
 statement: SELECT * FROM collate_test3 WHERE b >= 'BBC';
 statement: SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc';
 statement: SELECT * FROM collate_test1 WHERE b >= 'bbc' COLLATE "C";
 statement: SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc' COLLATE "C";
 statement: SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc' COLLATE "en_US";
 statement: CREATE DOMAIN testdomain_sv AS text COLLATE "sv_SE";
 statement: CREATE DOMAIN testdomain_i AS int COLLATE "sv_SE";
 statement: CREATE TABLE collate_test4 (                                                                                                                                                                                                                                                            +
     a int,                                                                                                                                                                                                                                                                                         +
     b testdomain_sv                                                                                                                                                                                                                                                                                +
 );
 statement: INSERT INTO collate_test4 SELECT * FROM collate_test1;
 statement: SELECT a, b FROM collate_test4 ORDER BY b;
 statement: CREATE TABLE collate_test5 (                                                                                                                                                                                                                                                            +
     a int,                                                                                                                                                                                                                                                                                         +
     b testdomain_sv COLLATE "en_US"                                                                                                                                                                                                                                                                +
 );
 statement: INSERT INTO collate_test5 SELECT * FROM collate_test1;
 statement: SELECT a, b FROM collate_test5 ORDER BY b;
 statement: SELECT a, b FROM collate_test1 ORDER BY b;
 statement: SELECT a, b FROM collate_test2 ORDER BY b;
 statement: SELECT a, b FROM collate_test3 ORDER BY b;
 statement: SELECT a, b FROM collate_test1 ORDER BY b COLLATE "C";
 statement: SELECT * FROM collate_test1 ORDER BY b;
 statement: SELECT * FROM collate_test2 ORDER BY b;
 statement: SELECT * FROM collate_test3 ORDER BY b;
 statement: SELECT 'bbc' COLLATE "en_US" > 'äbc' COLLATE "en_US" AS "true";
 statement: SELECT 'bbc' COLLATE "sv_SE" > 'äbc' COLLATE "sv_SE" AS "false";
 statement: CREATE TABLE collate_test10 (                                                                                                                                                                                                                                                           +
     a int,                                                                                                                                                                                                                                                                                         +
     x text COLLATE "en_US",                                                                                                                                                                                                                                                                        +
     y text COLLATE "tr_TR"                                                                                                                                                                                                                                                                         +
 );
 statement: INSERT INTO collate_test10 VALUES (1, 'hij', 'hij'), (2, 'HIJ', 'HIJ');
 statement: SELECT a, lower(x), lower(y), upper(x), upper(y), initcap(x), initcap(y) FROM collate_test10;
 statement: SELECT a, lower(x COLLATE "C"), lower(y COLLATE "C") FROM collate_test10;
 statement: SELECT a, x, y FROM collate_test10 ORDER BY lower(y), a;
 statement: SELECT * FROM collate_test1 WHERE b LIKE 'abc';
 statement: SELECT * FROM collate_test1 WHERE b LIKE 'abc%';
 statement: SELECT * FROM collate_test1 WHERE b LIKE '%bc%';
 statement: SELECT * FROM collate_test1 WHERE b ILIKE 'abc';
 statement: SELECT * FROM collate_test1 WHERE b ILIKE 'abc%';
 statement: SELECT * FROM collate_test1 WHERE b ILIKE '%bc%';
 statement: SELECT 'Türkiye' COLLATE "en_US" ILIKE '%KI%' AS "true";
 statement: SELECT 'Türkiye' COLLATE "tr_TR" ILIKE '%KI%' AS "false";
 statement: SELECT 'bıt' ILIKE 'BIT' COLLATE "en_US" AS "false";
 statement: SELECT 'bıt' ILIKE 'BIT' COLLATE "tr_TR" AS "true";
 statement: SELECT relname FROM pg_class WHERE relname ILIKE 'abc%';
 statement: SELECT * FROM collate_test1 WHERE b ~ '^abc$';
 statement: SELECT * FROM collate_test1 WHERE b ~ '^abc';
 statement: SELECT * FROM collate_test1 WHERE b ~ 'bc';
 statement: SELECT * FROM collate_test1 WHERE b ~* '^abc$';
 statement: SELECT * FROM collate_test1 WHERE b ~* '^abc';
 statement: SELECT * FROM collate_test1 WHERE b ~* 'bc';
 statement: SELECT 'Türkiye' COLLATE "en_US" ~* 'KI' AS "true";
 statement: SELECT 'Türkiye' COLLATE "tr_TR" ~* 'KI' AS "false";
 statement: SELECT 'bıt' ~* 'BIT' COLLATE "en_US" AS "false";
 statement: SELECT 'bıt' ~* 'BIT' COLLATE "tr_TR" AS "true";
 statement: SELECT relname FROM pg_class WHERE relname ~* '^abc';
 statement: SET lc_time TO 'tr_TR';
 statement: SELECT to_char(date '2010-04-01', 'DD TMMON YYYY');
 statement: SELECT to_char(date '2010-04-01', 'DD TMMON YYYY' COLLATE "tr_TR");
 statement: CREATE VIEW collview1 AS SELECT * FROM collate_test1 WHERE b COLLATE "C" >= 'bbc';
 statement: CREATE VIEW collview2 AS SELECT a, b FROM collate_test1 ORDER BY b COLLATE "C";
 statement: CREATE VIEW collview3 AS SELECT a, lower((x || x) COLLATE "C") FROM collate_test10;
 statement: SELECT table_name, view_definition FROM information_schema.views                                                                                                                                                                                                                        +
   WHERE table_name LIKE 'collview%' ORDER BY 1;
 statement: SELECT a, coalesce(b, 'foo') FROM collate_test1 ORDER BY 2;
 statement: SELECT a, coalesce(b, 'foo') FROM collate_test2 ORDER BY 2;
 statement: SELECT a, coalesce(b, 'foo') FROM collate_test3 ORDER BY 2;
 statement: SELECT a, lower(coalesce(x, 'foo')), lower(coalesce(y, 'foo')) FROM collate_test10;
 statement: SELECT a, b, greatest(b, 'CCC') FROM collate_test1 ORDER BY 3;
 statement: SELECT a, b, greatest(b, 'CCC') FROM collate_test2 ORDER BY 3;
 statement: SELECT a, b, greatest(b, 'CCC') FROM collate_test3 ORDER BY 3;
 statement: SELECT a, x, y, lower(greatest(x, 'foo')), lower(greatest(y, 'foo')) FROM collate_test10;
 statement: SELECT a, nullif(b, 'abc') FROM collate_test1 ORDER BY 2;
 statement: SELECT a, nullif(b, 'abc') FROM collate_test2 ORDER BY 2;
 statement: SELECT a, nullif(b, 'abc') FROM collate_test3 ORDER BY 2;
 statement: SELECT a, lower(nullif(x, 'foo')), lower(nullif(y, 'foo')) FROM collate_test10;
 statement: SELECT a, CASE b WHEN 'abc' THEN 'abcd' ELSE b END FROM collate_test1 ORDER BY 2;
 statement: SELECT a, CASE b WHEN 'abc' THEN 'abcd' ELSE b END FROM collate_test2 ORDER BY 2;
 statement: SELECT a, CASE b WHEN 'abc' THEN 'abcd' ELSE b END FROM collate_test3 ORDER BY 2;
 statement: CREATE DOMAIN testdomain AS text;
 statement: SELECT a, b::testdomain FROM collate_test1 ORDER BY 2;
 statement: SELECT a, b::testdomain FROM collate_test2 ORDER BY 2;
 statement: SELECT a, b::testdomain FROM collate_test3 ORDER BY 2;
 statement: SELECT a, b::testdomain_sv FROM collate_test3 ORDER BY 2;
 statement: SELECT a, lower(x::testdomain), lower(y::testdomain) FROM collate_test10;
 statement: SELECT min(b), max(b) FROM collate_test1;
 statement: SELECT min(b), max(b) FROM collate_test2;
 statement: SELECT min(b), max(b) FROM collate_test3;
 statement: SELECT array_agg(b ORDER BY b) FROM collate_test1;
 statement: SELECT array_agg(b ORDER BY b) FROM collate_test2;
 statement: SELECT array_agg(b ORDER BY b) FROM collate_test3;
 statement: SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test1 ORDER BY 2;
 statement: SELECT a, b FROM collate_test2 UNION SELECT a, b FROM collate_test2 ORDER BY 2;
 statement: SELECT a, b FROM collate_test3 WHERE a < 4 INTERSECT SELECT a, b FROM collate_test3 WHERE a > 1 ORDER BY 2;
 statement: SELECT a, b FROM collate_test3 EXCEPT SELECT a, b FROM collate_test3 WHERE a < 2 ORDER BY 2;
 statement: SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3 ORDER BY 2;
 statement: SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3;
 statement: SELECT a, b FROM collate_test1 UNION SELECT a, b FROM collate_test3 ORDER BY 2;
 statement: SELECT a, b COLLATE "C" FROM collate_test1 UNION SELECT a, b FROM collate_test3 ORDER BY 2;
 statement: SELECT a, b FROM collate_test1 INTERSECT SELECT a, b FROM collate_test3 ORDER BY 2;
 statement: SELECT a, b FROM collate_test1 EXCEPT SELECT a, b FROM collate_test3 ORDER BY 2;
 statement: CREATE TABLE test_u AS SELECT a, b FROM collate_test1 UNION ALL SELECT a, b FROM collate_test3;
 statement: select x < y from collate_test10;
 statement: select x || y from collate_test10;
 statement: select x, y from collate_test10 order by x || y;
 statement: WITH RECURSIVE foo(x) AS                                                                                                                                                                                                                                                                +
    (SELECT x FROM (VALUES('a' COLLATE "en_US"),('b')) t(x)                                                                                                                                                                                                                                         +
    UNION ALL                                                                                                                                                                                                                                                                                       +
    SELECT (x || 'c') COLLATE "de_DE" FROM foo WHERE length(x) < 10)                                                                                                                                                                                                                                +
 SELECT * FROM foo;
 statement: SELECT a, CAST(b AS varchar) FROM collate_test1 ORDER BY 2;
 statement: SELECT a, CAST(b AS varchar) FROM collate_test2 ORDER BY 2;
 statement: SELECT a, CAST(b AS varchar) FROM collate_test3 ORDER BY 2;
 statement: CREATE FUNCTION mylt (text, text) RETURNS boolean LANGUAGE sql                                                                                                                                                                                                                          +
     AS $$ select $1 < $2 $$;
 statement: CREATE FUNCTION mylt_noninline (text, text) RETURNS boolean LANGUAGE sql                                                                                                                                                                                                                +
     AS $$ select $1 < $2 limit 1 $$;
 statement: CREATE FUNCTION mylt_plpgsql (text, text) RETURNS boolean LANGUAGE plpgsql                                                                                                                                                                                                              +
     AS $$ begin return $1 < $2; end $$;
 statement: SELECT a.b AS a, b.b AS b, a.b < b.b AS lt,                                                                                                                                                                                                                                             +
        mylt(a.b, b.b), mylt_noninline(a.b, b.b), mylt_plpgsql(a.b, b.b)                                                                                                                                                                                                                            +
 FROM collate_test1 a, collate_test1 b                                                                                                                                                                                                                                                              +
 ORDER BY a.b, b.b;
 statement: SELECT a.b AS a, b.b AS b, a.b < b.b COLLATE "C" AS lt,                                                                                                                                                                                                                                 +
        mylt(a.b, b.b COLLATE "C"), mylt_noninline(a.b, b.b COLLATE "C"),                                                                                                                                                                                                                           +
        mylt_plpgsql(a.b, b.b COLLATE "C")                                                                                                                                                                                                                                                          +
 FROM collate_test1 a, collate_test1 b                                                                                                                                                                                                                                                              +
 ORDER BY a.b, b.b;
 statement: CREATE FUNCTION mylt2 (x text, y text) RETURNS boolean LANGUAGE plpgsql AS $$                                                                                                                                                                                                           +
 declare                                                                                                                                                                                                                                                                                            +
   xx text := x;                                                                                                                                                                                                                                                                                    +
   yy text := y;                                                                                                                                                                                                                                                                                    +
 begin                                                                                                                                                                                                                                                                                              +
   return xx < yy;                                                                                                                                                                                                                                                                                  +
 end                                                                                                                                                                                                                                                                                                +
 $$;
 statement: SELECT mylt2('a', 'B' collate "en_US") as t, mylt2('a', 'B' collate "C") as f;
 statement: CREATE OR REPLACE FUNCTION                                                                                                                                                                                                                                                              +
   mylt2 (x text, y text) RETURNS boolean LANGUAGE plpgsql AS $$                                                                                                                                                                                                                                    +
 declare                                                                                                                                                                                                                                                                                            +
   xx text COLLATE "POSIX" := x;                                                                                                                                                                                                                                                                    +
   yy text := y;                                                                                                                                                                                                                                                                                    +
 begin                                                                                                                                                                                                                                                                                              +
   return xx < yy;                                                                                                                                                                                                                                                                                  +
 end                                                                                                                                                                                                                                                                                                +
 $$;
 statement: SELECT mylt2('a', 'B') as f;
 statement: SELECT mylt2('a', 'B' collate "C") as fail;
 statement: SELECT mylt2('a', 'B' collate "POSIX") as f;
 statement: SELECT * FROM unnest((SELECT array_agg(b ORDER BY b) FROM collate_test1)) ORDER BY 1;
 statement: SELECT * FROM unnest((SELECT array_agg(b ORDER BY b) FROM collate_test2)) ORDER BY 1;
 statement: SELECT * FROM unnest((SELECT array_agg(b ORDER BY b) FROM collate_test3)) ORDER BY 1;
 statement: CREATE FUNCTION dup (anyelement) RETURNS anyelement                                                                                                                                                                                                                                     +
     AS 'select $1' LANGUAGE sql;
 statement: SELECT a, dup(b) FROM collate_test1 ORDER BY 2;
 statement: SELECT a, dup(b) FROM collate_test2 ORDER BY 2;
 statement: SELECT a, dup(b) FROM collate_test3 ORDER BY 2;
 statement: CREATE INDEX collate_test1_idx1 ON collate_test1 (b);
 statement: CREATE INDEX collate_test1_idx2 ON collate_test1 (b COLLATE "C");
 statement: CREATE INDEX collate_test1_idx3 ON collate_test1 ((b COLLATE "C"));
 statement: CREATE INDEX collate_test1_idx4 ON collate_test1 (((b||'foo') COLLATE "POSIX"));
 statement: CREATE INDEX collate_test1_idx5 ON collate_test1 (a COLLATE "C");
 statement: CREATE INDEX collate_test1_idx6 ON collate_test1 ((a COLLATE "C"));
 statement: SELECT relname, pg_get_indexdef(oid) FROM pg_class WHERE relname LIKE 'collate_test%_idx%' ORDER BY 1;
 statement: CREATE ROLE regress_test_role;
 statement: CREATE SCHEMA test_schema;
 statement: do $$                                                                                                                                                                                                                                                                                   +
 BEGIN                                                                                                                                                                                                                                                                                              +
   EXECUTE 'CREATE COLLATION test0 (locale = ' ||                                                                                                                                                                                                                                                   +
           quote_literal(current_setting('lc_collate')) || ');';                                                                                                                                                                                                                                    +
 END                                                                                                                                                                                                                                                                                                +
 $$;
 statement: CREATE COLLATION test0 FROM "C";
 statement: do $$                                                                                                                                                                                                                                                                                   +
 BEGIN                                                                                                                                                                                                                                                                                              +
   EXECUTE 'CREATE COLLATION test1 (lc_collate = ' ||                                                                                                                                                                                                                                               +
           quote_literal(current_setting('lc_collate')) ||                                                                                                                                                                                                                                          +
           ', lc_ctype = ' ||                                                                                                                                                                                                                                                                       +
           quote_literal(current_setting('lc_ctype')) || ');';                                                                                                                                                                                                                                      +
 END                                                                                                                                                                                                                                                                                                +
 $$;
 statement: CREATE COLLATION test3 (lc_collate = 'en_US.utf8');
 statement: CREATE COLLATION testx (locale = 'nonsense');
 statement: CREATE COLLATION test4 FROM nonsense;
 statement: CREATE COLLATION test5 FROM test0;
 statement: SELECT collname FROM pg_collation WHERE collname LIKE 'test%' ORDER BY 1;
 statement: ALTER COLLATION test1 RENAME TO test11;
 statement: ALTER COLLATION test0 RENAME TO test11;
 statement: ALTER COLLATION test1 RENAME TO test22;
 statement: ALTER COLLATION test11 OWNER TO regress_test_role;
 statement: ALTER COLLATION test11 OWNER TO nonsense;
 statement: ALTER COLLATION test11 SET SCHEMA test_schema;
 statement: COMMENT ON COLLATION test0 IS 'US English';
 statement: SELECT collname, nspname, obj_description(pg_collation.oid, 'pg_collation')                                                                                                                                                                                                             +
     FROM pg_collation JOIN pg_namespace ON (collnamespace = pg_namespace.oid)                                                                                                                                                                                                                      +
     WHERE collname LIKE 'test%'                                                                                                                                                                                                                                                                    +
     ORDER BY 1;
 statement: DROP COLLATION test0, test_schema.test11, test5;
 statement: DROP COLLATION test0;
 statement: DROP COLLATION IF EXISTS test0;
 statement: SELECT collname FROM pg_collation WHERE collname LIKE 'test%';
 statement: DROP SCHEMA test_schema;
 statement: DROP ROLE regress_test_role;
 statement: CREATE COLLATION test0 FROM "C";
 statement: CREATE TABLE collate_dep_test1 (a int, b text COLLATE test0);
 statement: CREATE DOMAIN collate_dep_dom1 AS text COLLATE test0;
 statement: CREATE TYPE collate_dep_test2 AS (x int, y text COLLATE test0);
 statement: CREATE VIEW collate_dep_test3 AS SELECT text 'foo' COLLATE test0 AS foo;
 statement: CREATE TABLE collate_dep_test4t (a int, b text);
 statement: CREATE INDEX collate_dep_test4i ON collate_dep_test4t (b COLLATE test0);
 statement: DROP COLLATION test0 RESTRICT;
 statement: DROP COLLATION test0 CASCADE;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(collate_dep_test1)$'                                                                                                                                                                                                                                                          +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19499';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19499' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                                                     +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                                                        +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                                                 +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                                                            +
 CASE pol.polcmd                                                                                                                                                                                                                                                                                    +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                                             +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                                             +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                                             +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                                             +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                                                +
 END AS cmd                                                                                                                                                                                                                                                                                         +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                                                      +
 WHERE pol.polrelid = '19499' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '19499' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '19499' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: SELECT c.oid,                                                                                                                                                                                                                                                                           +
   n.nspname,                                                                                                                                                                                                                                                                                       +
   c.relname                                                                                                                                                                                                                                                                                        +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                                                 +
 WHERE c.relname ~ '^(collate_dep_test2)$'                                                                                                                                                                                                                                                          +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                                                        +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, '', c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident+
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                                                         +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                                                    +
 WHERE c.oid = '19506';
 statement: SELECT a.attname,                                                                                                                                                                                                                                                                       +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                                                 +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                                                            +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                                                    +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                                                           +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                                                          +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                                                          +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                                                      +
   NULL AS indexdef,                                                                                                                                                                                                                                                                                +
   NULL AS attfdwoptions                                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                                                     +
 WHERE a.attrelid = '19506' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                                                 +
 ORDER BY a.attnum;
 statement: DROP TABLE collate_dep_test1, collate_dep_test4t;
 statement: DROP TYPE collate_dep_test2;
 statement: create type textrange_c as range(subtype=text, collation="C");
 statement: create type textrange_en_us as range(subtype=text, collation="en_US");
 statement: select textrange_c('A','Z') @> 'b'::text;
 statement: select textrange_en_us('A','Z') @> 'b'::text;
 statement: drop type textrange_c;
 statement: drop type textrange_en_us;

