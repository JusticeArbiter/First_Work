LOG:  statement: select message from postgres_log where query is null;
 statement: create domain domaindroptest int4;
 statement: comment on domain domaindroptest is 'About to drop this..';
 statement: create domain dependenttypetest domaindroptest;
 statement: drop domain domaindroptest;
 statement: drop domain domaindroptest cascade;
 statement: drop domain domaindroptest cascade;
 statement: create domain domainvarchar varchar(5);
 statement: create domain domainnumeric numeric(8,2);
 statement: create domain domainint4 int4;
 statement: create domain domaintext text;
 statement: SELECT cast('123456' as domainvarchar);
 statement: SELECT cast('12345' as domainvarchar);
 statement: create table basictest                                                                                                                                                                                                                                     +
            ( testint4 domainint4                                                                                                                                                                                                                                      +
            , testtext domaintext                                                                                                                                                                                                                                      +
            , testvarchar domainvarchar                                                                                                                                                                                                                                +
            , testnumeric domainnumeric                                                                                                                                                                                                                                +
            );
 statement: INSERT INTO basictest values ('88', 'haha', 'short', '123.12');
 statement: INSERT INTO basictest values ('88', 'haha', 'short text', '123.12');
 statement: INSERT INTO basictest values ('88', 'haha', 'short', '123.1212');
 statement: COPY basictest (testvarchar) FROM stdin;
 statement: COPY basictest (testvarchar) FROM stdin;
 statement: select * from basictest;
 statement: select testtext || testvarchar as concat, testnumeric + 42 as sum                                                                                                                                                                                          +
 from basictest;
 statement: select coalesce(4::domainint4, 7) is of (int4) as t;
 statement: select coalesce(4::domainint4, 7) is of (domainint4) as f;
 statement: select coalesce(4::domainint4, 7::domainint4) is of (domainint4) as t;
 statement: drop table basictest;
 statement: drop domain domainvarchar restrict;
 statement: drop domain domainnumeric restrict;
 statement: drop domain domainint4 restrict;
 statement: drop domain domaintext;
 statement: create domain domainint4arr int4[1];
 statement: create domain domainchar4arr varchar(4)[2][3];
 statement: create table domarrtest                                                                                                                                                                                                                                    +
            ( testint4arr domainint4arr                                                                                                                                                                                                                                +
            , testchar4arr domainchar4arr                                                                                                                                                                                                                              +
             );
 statement: INSERT INTO domarrtest values ('{2,2}', '{{"a","b"},{"c","d"}}');
 statement: INSERT INTO domarrtest values ('{{2,2},{2,2}}', '{{"a","b"}}');
 statement: INSERT INTO domarrtest values ('{2,2}', '{{"a","b"},{"c","d"},{"e","f"}}');
 statement: INSERT INTO domarrtest values ('{2,2}', '{{"a"},{"c"}}');
 statement: INSERT INTO domarrtest values (NULL, '{{"a","b","c"},{"d","e","f"}}');
 statement: INSERT INTO domarrtest values (NULL, '{{"toolong","b","c"},{"d","e","f"}}');
 statement: INSERT INTO domarrtest (testint4arr[1], testint4arr[3]) values (11,22);
 statement: select * from domarrtest;
 statement: select testint4arr[1], testchar4arr[2:2] from domarrtest;
 statement: select array_dims(testint4arr), array_dims(testchar4arr) from domarrtest;
 statement: COPY domarrtest FROM stdin;
 statement: COPY domarrtest FROM stdin;
 statement: select * from domarrtest;
 statement: update domarrtest set                                                                                                                                                                                                                                      +
   testint4arr[1] = testint4arr[1] + 1,                                                                                                                                                                                                                                +
   testint4arr[3] = testint4arr[3] - 1                                                                                                                                                                                                                                 +
 where testchar4arr is null;
 statement: select * from domarrtest where testchar4arr is null;
 statement: drop table domarrtest;
 statement: drop domain domainint4arr restrict;
 statement: drop domain domainchar4arr restrict;
 statement: create domain dia as int[];
 statement: select '{1,2,3}'::dia;
 statement: select array_dims('{1,2,3}'::dia);
 statement: select pg_typeof('{1,2,3}'::dia);
 statement: select pg_typeof('{1,2,3}'::dia || 42);
 statement: drop domain dia;
 statement: create type comptype as (r float8, i float8);
 statement: create domain dcomptypea as comptype[];
 statement: create table dcomptable (d1 dcomptypea unique);
 statement: insert into dcomptable values (array[row(1,2)]::dcomptypea);
 statement: insert into dcomptable values (array[row(3,4), row(5,6)]::comptype[]);
 statement: insert into dcomptable values (array[row(7,8)::comptype, row(9,10)::comptype]);
 statement: insert into dcomptable values (array[row(1,2)]::dcomptypea);
 statement: insert into dcomptable (d1[1]) values(row(9,10));
 statement: insert into dcomptable (d1[1].r) values(11);
 statement: select * from dcomptable;
 statement: select d1[2], d1[1].r, d1[1].i from dcomptable;
 statement: update dcomptable set d1[2] = row(d1[2].i, d1[2].r);
 statement: select * from dcomptable;
 statement: update dcomptable set d1[1].r = d1[1].r + 1 where d1[1].i > 0;
 statement: select * from dcomptable;
 statement: alter domain dcomptypea add constraint c1 check (value[1].r <= value[1].i);
 statement: alter domain dcomptypea add constraint c2 check (value[1].r > value[1].i);
 statement: select array[row(2,1)]::dcomptypea;
 statement: insert into dcomptable values (array[row(1,2)]::comptype[]);
 statement: insert into dcomptable values (array[row(2,1)]::comptype[]);
 statement: insert into dcomptable (d1[1].r) values(99);
 statement: insert into dcomptable (d1[1].r, d1[1].i) values(99, 100);
 statement: insert into dcomptable (d1[1].r, d1[1].i) values(100, 99);
 statement: update dcomptable set d1[1].r = d1[1].r + 1 where d1[1].i > 0;
 statement: update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1                                                                                                                                                                                         +
   where d1[1].i > 0;
 statement: select * from dcomptable;
 statement: explain (verbose, costs off)                                                                                                                                                                                                                               +
   update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1                                                                                                                                                                                                  +
     where d1[1].i > 0;
 statement: create rule silly as on delete to dcomptable do instead                                                                                                                                                                                                    +
   update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1                                                                                                                                                                                                  +
     where d1[1].i > 0;
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(dcomptable)$'                                                                                                                                                                                                                                    +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '20899';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '20899' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT c2.relname, i.indisprimary, i.indisunique, i.indisclustered, i.indisvalid, pg_catalog.pg_get_indexdef(i.indexrelid, 0, true),                                                                                                                       +
   pg_catalog.pg_get_constraintdef(con.oid, true), contype, condeferrable, condeferred, i.indisreplident, c2.reltablespace                                                                                                                                             +
 FROM pg_catalog.pg_class c, pg_catalog.pg_class c2, pg_catalog.pg_index i                                                                                                                                                                                             +
   LEFT JOIN pg_catalog.pg_constraint con ON (conrelid = i.indrelid AND conindid = i.indexrelid AND contype IN ('p','u','x'))                                                                                                                                          +
 WHERE c.oid = '20899' AND c.oid = i.indrelid AND i.indexrelid = c2.oid                                                                                                                                                                                                +
 ORDER BY i.indisprimary DESC, i.indisunique DESC, c2.relname;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '20899' ORDER BY 1;
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true)), ev_enabled                                                                                                                                                              +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '20899' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '20899' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '20899' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: drop table dcomptable;
 statement: drop type comptype cascade;
 statement: create domain dnotnull varchar(15) NOT NULL;
 statement: create domain dnull    varchar(15);
 statement: create domain dcheck   varchar(15) NOT NULL CHECK (VALUE = 'a' OR VALUE = 'c' OR VALUE = 'd');
 statement: create table nulltest                                                                                                                                                                                                                                      +
            ( col1 dnotnull                                                                                                                                                                                                                                            +
            , col2 dnotnull NULL                                                                                                                                                                                                                                       +
            , col3 dnull    NOT NULL                                                                                                                                                                                                                                   +
            , col4 dnull                                                                                                                                                                                                                                               +
            , col5 dcheck CHECK (col5 IN ('c', 'd'))                                                                                                                                                                                                                   +
            );
 statement: INSERT INTO nulltest DEFAULT VALUES;
 statement: INSERT INTO nulltest values ('a', 'b', 'c', 'd', 'c');
 statement: insert into nulltest values ('a', 'b', 'c', 'd', NULL);
 statement: insert into nulltest values ('a', 'b', 'c', 'd', 'a');
 statement: INSERT INTO nulltest values (NULL, 'b', 'c', 'd', 'd');
 statement: INSERT INTO nulltest values ('a', NULL, 'c', 'd', 'c');
 statement: INSERT INTO nulltest values ('a', 'b', NULL, 'd', 'c');
 statement: INSERT INTO nulltest values ('a', 'b', 'c', NULL, 'd');
 statement: COPY nulltest FROM stdin;
 statement: COPY nulltest FROM stdin;
 statement: COPY nulltest FROM stdin;
 statement: select * from nulltest;
 statement: SELECT cast('1' as dnotnull);
 statement: SELECT cast(NULL as dnotnull);
 statement: SELECT cast(cast(NULL as dnull) as dnotnull);
 statement: SELECT cast(col4 as dnotnull) from nulltest;
 statement: drop table nulltest;
 statement: drop domain dnotnull restrict;
 statement: drop domain dnull restrict;
 statement: drop domain dcheck restrict;
 statement: create domain ddef1 int4 DEFAULT 3;
 statement: create domain ddef2 oid DEFAULT '12';
 statement: create domain ddef3 text DEFAULT 5;
 statement: create sequence ddef4_seq;
 statement: create domain ddef4 int4 DEFAULT nextval('ddef4_seq');
 statement: create domain ddef5 numeric(8,2) NOT NULL DEFAULT '12.12';
 statement: create table defaulttest                                                                                                                                                                                                                                   +
             ( col1 ddef1                                                                                                                                                                                                                                              +
             , col2 ddef2                                                                                                                                                                                                                                              +
             , col3 ddef3                                                                                                                                                                                                                                              +
             , col4 ddef4 PRIMARY KEY                                                                                                                                                                                                                                  +
             , col5 ddef1 NOT NULL DEFAULT NULL                                                                                                                                                                                                                        +
             , col6 ddef2 DEFAULT '88'                                                                                                                                                                                                                                 +
             , col7 ddef4 DEFAULT 8000                                                                                                                                                                                                                                 +
             , col8 ddef5                                                                                                                                                                                                                                              +
             );
 statement: insert into defaulttest(col4) values(0);
 statement: alter table defaulttest alter column col5 drop default;
 statement: insert into defaulttest default values;
 statement: alter table defaulttest alter column col5 set default null;
 statement: insert into defaulttest(col4) values(0);
 statement: alter table defaulttest alter column col5 drop default;
 statement: insert into defaulttest default values;
 statement: insert into defaulttest default values;
 statement: COPY defaulttest(col5) FROM stdin;
 statement: select * from defaulttest;
 statement: drop table defaulttest cascade;
 statement: create domain dnotnulltest integer;
 statement: create table domnotnull                                                                                                                                                                                                                                    +
 ( col1 dnotnulltest                                                                                                                                                                                                                                                   +
 , col2 dnotnulltest                                                                                                                                                                                                                                                   +
 );
 statement: insert into domnotnull default values;
 statement: alter domain dnotnulltest set not null;
 statement: update domnotnull set col1 = 5;
 statement: alter domain dnotnulltest set not null;
 statement: update domnotnull set col2 = 6;
 statement: alter domain dnotnulltest set not null;
 statement: update domnotnull set col1 = null;
 statement: alter domain dnotnulltest drop not null;
 statement: update domnotnull set col1 = null;
 statement: drop domain dnotnulltest cascade;
 statement: create table domdeftest (col1 ddef1);
 statement: insert into domdeftest default values;
 statement: select * from domdeftest;
 statement: alter domain ddef1 set default '42';
 statement: insert into domdeftest default values;
 statement: select * from domdeftest;
 statement: alter domain ddef1 drop default;
 statement: insert into domdeftest default values;
 statement: select * from domdeftest;
 statement: drop table domdeftest;
 statement: create domain con as integer;
 statement: create table domcontest (col1 con);
 statement: insert into domcontest values (1);
 statement: insert into domcontest values (2);
 statement: alter domain con add constraint t check (VALUE < 1);
 statement: alter domain con add constraint t check (VALUE < 34);
 statement: alter domain con add check (VALUE > 0);
 statement: insert into domcontest values (-5);
 statement: insert into domcontest values (42);
 statement: insert into domcontest values (5);
 statement: alter domain con drop constraint t;
 statement: insert into domcontest values (-5);
 statement: insert into domcontest values (42);
 statement: alter domain con drop constraint nonexistent;
 statement: alter domain con drop constraint if exists nonexistent;
 statement: create domain things AS INT;
 statement: CREATE TABLE thethings (stuff things);
 statement: INSERT INTO thethings (stuff) VALUES (55);
 statement: ALTER DOMAIN things ADD CONSTRAINT meow CHECK (VALUE < 11);
 statement: ALTER DOMAIN things ADD CONSTRAINT meow CHECK (VALUE < 11) NOT VALID;
 statement: ALTER DOMAIN things VALIDATE CONSTRAINT meow;
 statement: UPDATE thethings SET stuff = 10;
 statement: ALTER DOMAIN things VALIDATE CONSTRAINT meow;
 statement: create table domtab (col1 integer);
 statement: create domain dom as integer;
 statement: create view domview as select cast(col1 as dom) from domtab;
 statement: insert into domtab (col1) values (null);
 statement: insert into domtab (col1) values (5);
 statement: select * from domview;
 statement: alter domain dom set not null;
 statement: select * from domview;
 statement: alter domain dom drop not null;
 statement: select * from domview;
 statement: alter domain dom add constraint domchkgt6 check(value > 6);
 statement: select * from domview;
 statement: alter domain dom drop constraint domchkgt6 restrict;
 statement: select * from domview;
 statement: drop domain ddef1 restrict;
 statement: drop domain ddef2 restrict;
 statement: drop domain ddef3 restrict;
 statement: drop domain ddef4 restrict;
 statement: drop domain ddef5 restrict;
 statement: drop sequence ddef4_seq;
 statement: create domain vchar4 varchar(4);
 statement: create domain dinter vchar4 check (substring(VALUE, 1, 1) = 'x');
 statement: create domain dtop dinter check (substring(VALUE, 2, 1) = '1');
 statement: select 'x123'::dtop;
 statement: select 'x1234'::dtop;
 statement: select 'y1234'::dtop;
 statement: select 'y123'::dtop;
 statement: select 'yz23'::dtop;
 statement: select 'xz23'::dtop;
 statement: create temp table dtest(f1 dtop);
 statement: insert into dtest values('x123');
 statement: insert into dtest values('x1234');
 statement: insert into dtest values('y1234');
 statement: insert into dtest values('y123');
 statement: insert into dtest values('yz23');
 statement: insert into dtest values('xz23');
 statement: drop table dtest;
 statement: drop domain vchar4 cascade;
 statement: create domain str_domain as text not null;
 statement: create table domain_test (a int, b int);
 statement: insert into domain_test values (1, 2);
 statement: insert into domain_test values (1, 2);
 statement: alter table domain_test add column c str_domain;
 statement: create domain str_domain2 as text check (value <> 'foo') default 'foo';
 statement: alter table domain_test add column d str_domain2;
 statement: create domain pos_int as int4 check (value > 0) not null;
 statement: prepare s1 as select $1::pos_int = 10 as "is_ten";
 statement: execute s1(10);
 statement: execute s1(0);
 statement: execute s1(NULL);
 statement: create function doubledecrement(p1 pos_int) returns pos_int as $$                                                                                                                                                                                          +
 declare v pos_int;                                                                                                                                                                                                                                                    +
 begin                                                                                                                                                                                                                                                                 +
     return p1;                                                                                                                                                                                                                                                        +
 end$$ language plpgsql;
 statement: select doubledecrement(3);
 statement: create or replace function doubledecrement(p1 pos_int) returns pos_int as $$                                                                                                                                                                               +
 declare v pos_int := 0;                                                                                                                                                                                                                                               +
 begin                                                                                                                                                                                                                                                                 +
     return p1;                                                                                                                                                                                                                                                        +
 end$$ language plpgsql;
 statement: select doubledecrement(3);
 statement: create or replace function doubledecrement(p1 pos_int) returns pos_int as $$                                                                                                                                                                               +
 declare v pos_int := 1;                                                                                                                                                                                                                                               +
 begin                                                                                                                                                                                                                                                                 +
     v := p1 - 1;                                                                                                                                                                                                                                                      +
     return v - 1;                                                                                                                                                                                                                                                     +
 end$$ language plpgsql;
 statement: select doubledecrement(null);
 statement: select doubledecrement(0);
 statement: select doubledecrement(1);
 statement: select doubledecrement(2);
 statement: select doubledecrement(3);
 statement: create domain posint as int4;
 statement: create type ddtest1 as (f1 posint);
 statement: create table ddtest2(f1 ddtest1);
 statement: insert into ddtest2 values(row(-1));
 statement: alter domain posint add constraint c1 check(value >= 0);
 statement: drop table ddtest2;
 statement: create table ddtest2(f1 ddtest1[]);
 statement: insert into ddtest2 values('{(-1)}');
 statement: alter domain posint add constraint c1 check(value >= 0);
 statement: drop table ddtest2;
 statement: create domain ddtest1d as ddtest1[];
 statement: create table ddtest2(f1 ddtest1d);
 statement: insert into ddtest2 values('{(-1)}');
 statement: alter domain posint add constraint c1 check(value >= 0);
 statement: drop table ddtest2;
 statement: drop domain ddtest1d;
 statement: create type rposint as range (subtype = posint);
 statement: create table ddtest2(f1 rposint);
 statement: insert into ddtest2 values('(-1,3]');
 statement: alter domain posint add constraint c1 check(value >= 0);
 statement: drop table ddtest2;
 statement: drop type rposint;
 statement: alter domain posint add constraint c1 check(value >= 0);
 statement: create domain posint2 as posint check (value % 2 = 0);
 statement: create table ddtest2(f1 posint2);
 statement: insert into ddtest2 values(11);
 statement: insert into ddtest2 values(-2);
 statement: insert into ddtest2 values(2);
 statement: alter domain posint add constraint c2 check(value >= 10);
 statement: alter domain posint add constraint c2 check(value > 0);
 statement: drop table ddtest2;
 statement: drop type ddtest1;
 statement: drop domain posint cascade;
 statement: create or replace function array_elem_check(numeric) returns numeric as $$                                                                                                                                                                                 +
 declare                                                                                                                                                                                                                                                               +
   x numeric(4,2)[1];                                                                                                                                                                                                                                                  +
 begin                                                                                                                                                                                                                                                                 +
   x[1] := $1;                                                                                                                                                                                                                                                         +
   return x[1];                                                                                                                                                                                                                                                        +
 end$$ language plpgsql;
 statement: select array_elem_check(121.00);
 statement: select array_elem_check(1.23456);
 statement: create domain mynums as numeric(4,2)[1];
 statement: create or replace function array_elem_check(numeric) returns numeric as $$                                                                                                                                                                                 +
 declare                                                                                                                                                                                                                                                               +
   x mynums;                                                                                                                                                                                                                                                           +
 begin                                                                                                                                                                                                                                                                 +
   x[1] := $1;                                                                                                                                                                                                                                                         +
   return x[1];                                                                                                                                                                                                                                                        +
 end$$ language plpgsql;
 statement: select array_elem_check(121.00);
 statement: select array_elem_check(1.23456);
 statement: create domain mynums2 as mynums;
 statement: create or replace function array_elem_check(numeric) returns numeric as $$                                                                                                                                                                                 +
 declare                                                                                                                                                                                                                                                               +
   x mynums2;                                                                                                                                                                                                                                                          +
 begin                                                                                                                                                                                                                                                                 +
   x[1] := $1;                                                                                                                                                                                                                                                         +
   return x[1];                                                                                                                                                                                                                                                        +
 end$$ language plpgsql;
 statement: select array_elem_check(121.00);
 statement: select array_elem_check(1.23456);
 statement: drop function array_elem_check(numeric);
 statement: create domain orderedpair as int[2] check (value[1] < value[2]);
 statement: select array[1,2]::orderedpair;
 statement: select array[2,1]::orderedpair;
 statement: create temp table op (f1 orderedpair);
 statement: insert into op values (array[1,2]);
 statement: insert into op values (array[2,1]);
 statement: update op set f1[2] = 3;
 statement: update op set f1[2] = 0;
 statement: select * from op;
 statement: create or replace function array_elem_check(int) returns int as $$                                                                                                                                                                                         +
 declare                                                                                                                                                                                                                                                               +
   x orderedpair := '{1,2}';                                                                                                                                                                                                                                           +
 begin                                                                                                                                                                                                                                                                 +
   x[2] := $1;                                                                                                                                                                                                                                                         +
   return x[2];                                                                                                                                                                                                                                                        +
 end$$ language plpgsql;
 statement: select array_elem_check(3);
 statement: select array_elem_check(-1);
 statement: drop function array_elem_check(int);
 statement: create domain di as int;
 statement: create function dom_check(int) returns di as $$                                                                                                                                                                                                            +
 declare d di;                                                                                                                                                                                                                                                         +
 begin                                                                                                                                                                                                                                                                 +
   d := $1;                                                                                                                                                                                                                                                            +
   return d;                                                                                                                                                                                                                                                           +
 end                                                                                                                                                                                                                                                                   +
 $$ language plpgsql immutable;
 statement: select dom_check(0);
 statement: alter domain di add constraint pos check (value > 0);
 statement: select dom_check(0);
 statement: alter domain di drop constraint pos;
 statement: select dom_check(0);
 statement: drop function dom_check(int);
 statement: drop domain di;
 statement: create function sql_is_distinct_from(anyelement, anyelement)                                                                                                                                                                                               +
 returns boolean language sql                                                                                                                                                                                                                                          +
 as 'select $1 is distinct from $2 limit 1';
 statement: create domain inotnull int                                                                                                                                                                                                                                 +
   check (sql_is_distinct_from(value, null));
 statement: select 1::inotnull;
 statement: select null::inotnull;
 statement: create table dom_table (x inotnull);
 statement: insert into dom_table values ('1');
 statement: insert into dom_table values (1);
 statement: insert into dom_table values (null);
 statement: drop table dom_table;
 statement: drop domain inotnull;
 statement: drop function sql_is_distinct_from(anyelement, anyelement);
 statement: create domain testdomain1 as int;
 statement: alter domain testdomain1 rename to testdomain2;
 statement: alter type testdomain2 rename to testdomain3;
 statement: drop domain testdomain3;
 statement: create domain testdomain1 as int constraint unsigned check (value > 0);
 statement: alter domain testdomain1 rename constraint unsigned to unsigned_foo;
 statement: alter domain testdomain1 drop constraint unsigned_foo;
 statement: drop domain testdomain1;

