LOG:  statement: select message from postgres_log where query is null;
 statement: create table rtest_t1 (a int4, b int4);
 statement: create table rtest_t2 (a int4, b int4);
 statement: create table rtest_t3 (a int4, b int4);
 statement: create view rtest_v1 as select * from rtest_t1;
 statement: create rule rtest_v1_ins as on insert to rtest_v1 do instead                                                                                                                                                                                               +
         insert into rtest_t1 values (new.a, new.b);
 statement: create rule rtest_v1_upd as on update to rtest_v1 do instead                                                                                                                                                                                               +
         update rtest_t1 set a = new.a, b = new.b                                                                                                                                                                                                                      +
         where a = old.a;
 statement: create rule rtest_v1_del as on delete to rtest_v1 do instead                                                                                                                                                                                               +
         delete from rtest_t1 where a = old.a;
 statement: COMMENT ON RULE rtest_v1_bad ON rtest_v1 IS 'bad rule';
 statement: COMMENT ON RULE rtest_v1_del ON rtest_v1 IS 'delete rule';
 statement: COMMENT ON RULE rtest_v1_del ON rtest_v1 IS NULL;
 statement: create table rtest_system (sysname text, sysdesc text);
 statement: create table rtest_interface (sysname text, ifname text);
 statement: create table rtest_person (pname text, pdesc text);
 statement: create table rtest_admin (pname text, sysname text);
 statement: create rule rtest_sys_upd as on update to rtest_system do also (                                                                                                                                                                                           +
         update rtest_interface set sysname = new.sysname                                                                                                                                                                                                              +
                 where sysname = old.sysname;                                                                                                                                                                                                                          +
         update rtest_admin set sysname = new.sysname                                                                                                                                                                                                                  +
                 where sysname = old.sysname                                                                                                                                                                                                                           +
         );
 statement: create rule rtest_sys_del as on delete to rtest_system do also (                                                                                                                                                                                           +
         delete from rtest_interface where sysname = old.sysname;                                                                                                                                                                                                      +
         delete from rtest_admin where sysname = old.sysname;                                                                                                                                                                                                          +
         );
 statement: create rule rtest_pers_upd as on update to rtest_person do also                                                                                                                                                                                            +
         update rtest_admin set pname = new.pname where pname = old.pname;
 statement: create rule rtest_pers_del as on delete to rtest_person do also                                                                                                                                                                                            +
         delete from rtest_admin where pname = old.pname;
 statement: create table rtest_emp (ename char(20), salary money);
 statement: create table rtest_emplog (ename char(20), who name, action char(10), newsal money, oldsal money);
 statement: create table rtest_empmass (ename char(20), salary money);
 statement: create rule rtest_emp_ins as on insert to rtest_emp do                                                                                                                                                                                                     +
         insert into rtest_emplog values (new.ename, current_user,                                                                                                                                                                                                     +
                         'hired', new.salary, '0.00');
 statement: create rule rtest_emp_upd as on update to rtest_emp where new.salary != old.salary do                                                                                                                                                                      +
         insert into rtest_emplog values (new.ename, current_user,                                                                                                                                                                                                     +
                         'honored', new.salary, old.salary);
 statement: create rule rtest_emp_del as on delete to rtest_emp do                                                                                                                                                                                                     +
         insert into rtest_emplog values (old.ename, current_user,                                                                                                                                                                                                     +
                         'fired', '0.00', old.salary);
 statement: create table rtest_t4 (a int4, b text);
 statement: create table rtest_t5 (a int4, b text);
 statement: create table rtest_t6 (a int4, b text);
 statement: create table rtest_t7 (a int4, b text);
 statement: create table rtest_t8 (a int4, b text);
 statement: create table rtest_t9 (a int4, b text);
 statement: create rule rtest_t4_ins1 as on insert to rtest_t4                                                                                                                                                                                                         +
                 where new.a >= 10 and new.a < 20 do instead                                                                                                                                                                                                           +
         insert into rtest_t5 values (new.a, new.b);
 statement: create rule rtest_t4_ins2 as on insert to rtest_t4                                                                                                                                                                                                         +
                 where new.a >= 20 and new.a < 30 do                                                                                                                                                                                                                   +
         insert into rtest_t6 values (new.a, new.b);
 statement: create rule rtest_t5_ins as on insert to rtest_t5                                                                                                                                                                                                          +
                 where new.a > 15 do                                                                                                                                                                                                                                   +
         insert into rtest_t7 values (new.a, new.b);
 statement: create rule rtest_t6_ins as on insert to rtest_t6                                                                                                                                                                                                          +
                 where new.a > 25 do instead                                                                                                                                                                                                                           +
         insert into rtest_t8 values (new.a, new.b);
 statement: create table rtest_order1 (a int4);
 statement: create table rtest_order2 (a int4, b int4, c text);
 statement: create sequence rtest_seq;
 statement: create rule rtest_order_r3 as on insert to rtest_order1 do instead                                                                                                                                                                                         +
         insert into rtest_order2 values (new.a, nextval('rtest_seq'),                                                                                                                                                                                                 +
                 'rule 3 - this should run 3rd');
 statement: create rule rtest_order_r4 as on insert to rtest_order1                                                                                                                                                                                                    +
                 where a < 100 do instead                                                                                                                                                                                                                              +
         insert into rtest_order2 values (new.a, nextval('rtest_seq'),                                                                                                                                                                                                 +
                 'rule 4 - this should run 4th');
 statement: create rule rtest_order_r2 as on insert to rtest_order1 do                                                                                                                                                                                                 +
         insert into rtest_order2 values (new.a, nextval('rtest_seq'),                                                                                                                                                                                                 +
                 'rule 2 - this should run 2nd');
 statement: create rule rtest_order_r1 as on insert to rtest_order1 do instead                                                                                                                                                                                         +
         insert into rtest_order2 values (new.a, nextval('rtest_seq'),                                                                                                                                                                                                 +
                 'rule 1 - this should run 1st');
 statement: create table rtest_nothn1 (a int4, b text);
 statement: create table rtest_nothn2 (a int4, b text);
 statement: create table rtest_nothn3 (a int4, b text);
 statement: create table rtest_nothn4 (a int4, b text);
 statement: create rule rtest_nothn_r1 as on insert to rtest_nothn1                                                                                                                                                                                                    +
         where new.a >= 10 and new.a < 20 do instead nothing;
 statement: create rule rtest_nothn_r2 as on insert to rtest_nothn1                                                                                                                                                                                                    +
         where new.a >= 30 and new.a < 40 do instead nothing;
 statement: create rule rtest_nothn_r3 as on insert to rtest_nothn2                                                                                                                                                                                                    +
         where new.a >= 100 do instead                                                                                                                                                                                                                                 +
         insert into rtest_nothn3 values (new.a, new.b);
 statement: create rule rtest_nothn_r4 as on insert to rtest_nothn2                                                                                                                                                                                                    +
         do instead nothing;
 statement: insert into rtest_t2 values (1, 21);
 statement: insert into rtest_t2 values (2, 22);
 statement: insert into rtest_t2 values (3, 23);
 statement: insert into rtest_t3 values (1, 31);
 statement: insert into rtest_t3 values (2, 32);
 statement: insert into rtest_t3 values (3, 33);
 statement: insert into rtest_t3 values (4, 34);
 statement: insert into rtest_t3 values (5, 35);
 statement: insert into rtest_v1 values (1, 11);
 statement: insert into rtest_v1 values (2, 12);
 statement: select * from rtest_v1;
 statement: delete from rtest_v1 where a = 1;
 statement: select * from rtest_v1;
 statement: insert into rtest_v1 values (1, 11);
 statement: delete from rtest_v1 where b = 12;
 statement: select * from rtest_v1;
 statement: insert into rtest_v1 values (2, 12);
 statement: insert into rtest_v1 values (2, 13);
 statement: select * from rtest_v1;
 statement: delete from rtest_v1 where b = 12;
 statement: select * from rtest_v1;
 statement: delete from rtest_v1;
 statement: insert into rtest_v1 select * from rtest_t2;
 statement: select * from rtest_v1;
 statement: delete from rtest_v1;
 statement: insert into rtest_v1 (b, a) select b, a from rtest_t2;
 statement: select * from rtest_v1;
 statement: insert into rtest_v1 (a) select a from rtest_t3;
 statement: select * from rtest_v1;
 statement: select * from rtest_v1 where b isnull;
 statement: update rtest_t1 set a = a + 10 where b isnull;
 statement: delete from rtest_v1 where b isnull;
 statement: select * from rtest_v1;
 statement: update rtest_v1 set b = 42 where a = 2;
 statement: select * from rtest_v1;
 statement: update rtest_v1 set b = 99 where b = 42;
 statement: select * from rtest_v1;
 statement: update rtest_v1 set b = 88 where b < 50;
 statement: select * from rtest_v1;
 statement: delete from rtest_v1;
 statement: insert into rtest_v1 select rtest_t2.a, rtest_t3.b                                                                                                                                                                                                         +
     from rtest_t2, rtest_t3                                                                                                                                                                                                                                           +
     where rtest_t2.a = rtest_t3.a;
 statement: select * from rtest_v1;
 statement: update rtest_v1 set b = rtest_t2.b from rtest_t2 where rtest_v1.a = rtest_t2.a;
 statement: select * from rtest_v1;
 statement: insert into rtest_v1 select * from rtest_t3;
 statement: select * from rtest_v1;
 statement: update rtest_t1 set a = a + 10 where b > 30;
 statement: select * from rtest_v1;
 statement: update rtest_v1 set a = rtest_t3.a + 20 from rtest_t3 where rtest_v1.b = rtest_t3.b;
 statement: select * from rtest_v1;
 statement: insert into rtest_system values ('orion', 'Linux Jan Wieck');
 statement: insert into rtest_system values ('notjw', 'WinNT Jan Wieck (notebook)');
 statement: insert into rtest_system values ('neptun', 'Fileserver');
 statement: insert into rtest_interface values ('orion', 'eth0');
 statement: insert into rtest_interface values ('orion', 'eth1');
 statement: insert into rtest_interface values ('notjw', 'eth0');
 statement: insert into rtest_interface values ('neptun', 'eth0');
 statement: insert into rtest_person values ('jw', 'Jan Wieck');
 statement: insert into rtest_person values ('bm', 'Bruce Momjian');
 statement: insert into rtest_admin values ('jw', 'orion');
 statement: insert into rtest_admin values ('jw', 'notjw');
 statement: insert into rtest_admin values ('bm', 'neptun');
 statement: update rtest_system set sysname = 'pluto' where sysname = 'neptun';
 statement: select * from rtest_interface;
 statement: select * from rtest_admin;
 statement: update rtest_person set pname = 'jwieck' where pdesc = 'Jan Wieck';
 statement: select * from rtest_admin order by pname, sysname;
 statement: delete from rtest_system where sysname = 'orion';
 statement: select * from rtest_interface;
 statement: select * from rtest_admin;
 statement: insert into rtest_emp values ('wiecc', '5000.00');
 statement: insert into rtest_emp values ('gates', '80000.00');
 statement: update rtest_emp set ename = 'wiecx' where ename = 'wiecc';
 statement: update rtest_emp set ename = 'wieck', salary = '6000.00' where ename = 'wiecx';
 statement: update rtest_emp set salary = '7000.00' where ename = 'wieck';
 statement: delete from rtest_emp where ename = 'gates';
 statement: select ename, who = current_user as "matches user", action, newsal, oldsal from rtest_emplog order by ename, action, newsal;
 statement: insert into rtest_empmass values ('meyer', '4000.00');
 statement: insert into rtest_empmass values ('maier', '5000.00');
 statement: insert into rtest_empmass values ('mayr', '6000.00');
 statement: insert into rtest_emp select * from rtest_empmass;
 statement: select ename, who = current_user as "matches user", action, newsal, oldsal from rtest_emplog order by ename, action, newsal;
 statement: update rtest_empmass set salary = salary + '1000.00';
 statement: update rtest_emp set salary = rtest_empmass.salary from rtest_empmass where rtest_emp.ename = rtest_empmass.ename;
 statement: select ename, who = current_user as "matches user", action, newsal, oldsal from rtest_emplog order by ename, action, newsal;
 statement: delete from rtest_emp using rtest_empmass where rtest_emp.ename = rtest_empmass.ename;
 statement: select ename, who = current_user as "matches user", action, newsal, oldsal from rtest_emplog order by ename, action, newsal;
 statement: insert into rtest_t4 values (1, 'Record should go to rtest_t4');
 statement: insert into rtest_t4 values (2, 'Record should go to rtest_t4');
 statement: insert into rtest_t4 values (10, 'Record should go to rtest_t5');
 statement: insert into rtest_t4 values (15, 'Record should go to rtest_t5');
 statement: insert into rtest_t4 values (19, 'Record should go to rtest_t5 and t7');
 statement: insert into rtest_t4 values (20, 'Record should go to rtest_t4 and t6');
 statement: insert into rtest_t4 values (26, 'Record should go to rtest_t4 and t8');
 statement: insert into rtest_t4 values (28, 'Record should go to rtest_t4 and t8');
 statement: insert into rtest_t4 values (30, 'Record should go to rtest_t4');
 statement: insert into rtest_t4 values (40, 'Record should go to rtest_t4');
 statement: select * from rtest_t4;
 statement: select * from rtest_t5;
 statement: select * from rtest_t6;
 statement: select * from rtest_t7;
 statement: select * from rtest_t8;
 statement: delete from rtest_t4;
 statement: delete from rtest_t5;
 statement: delete from rtest_t6;
 statement: delete from rtest_t7;
 statement: delete from rtest_t8;
 statement: insert into rtest_t9 values (1, 'Record should go to rtest_t4');
 statement: insert into rtest_t9 values (2, 'Record should go to rtest_t4');
 statement: insert into rtest_t9 values (10, 'Record should go to rtest_t5');
 statement: insert into rtest_t9 values (15, 'Record should go to rtest_t5');
 statement: insert into rtest_t9 values (19, 'Record should go to rtest_t5 and t7');
 statement: insert into rtest_t9 values (20, 'Record should go to rtest_t4 and t6');
 statement: insert into rtest_t9 values (26, 'Record should go to rtest_t4 and t8');
 statement: insert into rtest_t9 values (28, 'Record should go to rtest_t4 and t8');
 statement: insert into rtest_t9 values (30, 'Record should go to rtest_t4');
 statement: insert into rtest_t9 values (40, 'Record should go to rtest_t4');
 statement: insert into rtest_t4 select * from rtest_t9 where a < 20;
 statement: select * from rtest_t4;
 statement: select * from rtest_t5;
 statement: select * from rtest_t6;
 statement: select * from rtest_t7;
 statement: select * from rtest_t8;
 statement: insert into rtest_t4 select * from rtest_t9 where b ~ 'and t8';
 statement: select * from rtest_t4;
 statement: select * from rtest_t5;
 statement: select * from rtest_t6;
 statement: select * from rtest_t7;
 statement: select * from rtest_t8;
 statement: insert into rtest_t4 select a + 1, b from rtest_t9 where a in (20, 30, 40);
 statement: select * from rtest_t4;
 statement: select * from rtest_t5;
 statement: select * from rtest_t6;
 statement: select * from rtest_t7;
 statement: select * from rtest_t8;
 statement: insert into rtest_order1 values (1);
 statement: select * from rtest_order2;
 statement: insert into rtest_nothn1 values (1, 'want this');
 statement: insert into rtest_nothn1 values (2, 'want this');
 statement: insert into rtest_nothn1 values (10, 'don''t want this');
 statement: insert into rtest_nothn1 values (19, 'don''t want this');
 statement: insert into rtest_nothn1 values (20, 'want this');
 statement: insert into rtest_nothn1 values (29, 'want this');
 statement: insert into rtest_nothn1 values (30, 'don''t want this');
 statement: insert into rtest_nothn1 values (39, 'don''t want this');
 statement: insert into rtest_nothn1 values (40, 'want this');
 statement: insert into rtest_nothn1 values (50, 'want this');
 statement: insert into rtest_nothn1 values (60, 'want this');
 statement: select * from rtest_nothn1;
 statement: insert into rtest_nothn2 values (10, 'too small');
 statement: insert into rtest_nothn2 values (50, 'too small');
 statement: insert into rtest_nothn2 values (100, 'OK');
 statement: insert into rtest_nothn2 values (200, 'OK');
 statement: select * from rtest_nothn2;
 statement: select * from rtest_nothn3;
 statement: delete from rtest_nothn1;
 statement: delete from rtest_nothn2;
 statement: delete from rtest_nothn3;
 statement: insert into rtest_nothn4 values (1, 'want this');
 statement: insert into rtest_nothn4 values (2, 'want this');
 statement: insert into rtest_nothn4 values (10, 'don''t want this');
 statement: insert into rtest_nothn4 values (19, 'don''t want this');
 statement: insert into rtest_nothn4 values (20, 'want this');
 statement: insert into rtest_nothn4 values (29, 'want this');
 statement: insert into rtest_nothn4 values (30, 'don''t want this');
 statement: insert into rtest_nothn4 values (39, 'don''t want this');
 statement: insert into rtest_nothn4 values (40, 'want this');
 statement: insert into rtest_nothn4 values (50, 'want this');
 statement: insert into rtest_nothn4 values (60, 'want this');
 statement: insert into rtest_nothn1 select * from rtest_nothn4;
 statement: select * from rtest_nothn1;
 statement: delete from rtest_nothn4;
 statement: insert into rtest_nothn4 values (10, 'too small');
 statement: insert into rtest_nothn4 values (50, 'too small');
 statement: insert into rtest_nothn4 values (100, 'OK');
 statement: insert into rtest_nothn4 values (200, 'OK');
 statement: insert into rtest_nothn2 select * from rtest_nothn4;
 statement: select * from rtest_nothn2;
 statement: select * from rtest_nothn3;
 statement: create table rtest_view1 (a int4, b text, v bool);
 statement: create table rtest_view2 (a int4);
 statement: create table rtest_view3 (a int4, b text);
 statement: create table rtest_view4 (a int4, b text, c int4);
 statement: create view rtest_vview1 as select a, b from rtest_view1 X                                                                                                                                                                                                 +
         where 0 < (select count(*) from rtest_view2 Y where Y.a = X.a);
 statement: create view rtest_vview2 as select a, b from rtest_view1 where v;
 statement: create view rtest_vview3 as select a, b from rtest_vview2 X                                                                                                                                                                                                +
         where 0 < (select count(*) from rtest_view2 Y where Y.a = X.a);
 statement: create view rtest_vview4 as select X.a, X.b, count(Y.a) as refcount                                                                                                                                                                                        +
         from rtest_view1 X, rtest_view2 Y                                                                                                                                                                                                                             +
         where X.a = Y.a                                                                                                                                                                                                                                               +
         group by X.a, X.b;
 statement: create function rtest_viewfunc1(int4) returns int4 as                                                                                                                                                                                                      +
         'select count(*)::int4 from rtest_view2 where a = $1'                                                                                                                                                                                                         +
         language sql;
 statement: create view rtest_vview5 as select a, b, rtest_viewfunc1(a) as refcount                                                                                                                                                                                    +
         from rtest_view1;
 statement: insert into rtest_view1 values (1, 'item 1', 't');
 statement: insert into rtest_view1 values (2, 'item 2', 't');
 statement: insert into rtest_view1 values (3, 'item 3', 't');
 statement: insert into rtest_view1 values (4, 'item 4', 'f');
 statement: insert into rtest_view1 values (5, 'item 5', 't');
 statement: insert into rtest_view1 values (6, 'item 6', 'f');
 statement: insert into rtest_view1 values (7, 'item 7', 't');
 statement: insert into rtest_view1 values (8, 'item 8', 't');
 statement: insert into rtest_view2 values (2);
 statement: insert into rtest_view2 values (2);
 statement: insert into rtest_view2 values (4);
 statement: insert into rtest_view2 values (5);
 statement: insert into rtest_view2 values (7);
 statement: insert into rtest_view2 values (7);
 statement: insert into rtest_view2 values (7);
 statement: insert into rtest_view2 values (7);
 statement: select * from rtest_vview1;
 statement: select * from rtest_vview2;
 statement: select * from rtest_vview3;
 statement: select * from rtest_vview4 order by a, b;
 statement: select * from rtest_vview5;
 statement: insert into rtest_view3 select * from rtest_vview1 where a < 7;
 statement: select * from rtest_view3;
 statement: delete from rtest_view3;
 statement: insert into rtest_view3 select * from rtest_vview2 where a != 5 and b !~ '2';
 statement: select * from rtest_view3;
 statement: delete from rtest_view3;
 statement: insert into rtest_view3 select * from rtest_vview3;
 statement: select * from rtest_view3;
 statement: delete from rtest_view3;
 statement: insert into rtest_view4 select * from rtest_vview4 where 3 > refcount;
 statement: select * from rtest_view4 order by a, b;
 statement: delete from rtest_view4;
 statement: insert into rtest_view4 select * from rtest_vview5 where a > 2 and refcount = 0;
 statement: select * from rtest_view4;
 statement: delete from rtest_view4;
 statement: create table rtest_comp (                                                                                                                                                                                                                                  +
         part    text,                                                                                                                                                                                                                                                 +
         unit    char(4),                                                                                                                                                                                                                                              +
         size    float                                                                                                                                                                                                                                                 +
 );
 statement: create table rtest_unitfact (                                                                                                                                                                                                                              +
         unit    char(4),                                                                                                                                                                                                                                              +
         factor  float                                                                                                                                                                                                                                                 +
 );
 statement: create view rtest_vcomp as                                                                                                                                                                                                                                 +
         select X.part, (X.size * Y.factor) as size_in_cm                                                                                                                                                                                                              +
                         from rtest_comp X, rtest_unitfact Y                                                                                                                                                                                                           +
                         where X.unit = Y.unit;
 statement: insert into rtest_unitfact values ('m', 100.0);
 statement: insert into rtest_unitfact values ('cm', 1.0);
 statement: insert into rtest_unitfact values ('inch', 2.54);
 statement: insert into rtest_comp values ('p1', 'm', 5.0);
 statement: insert into rtest_comp values ('p2', 'm', 3.0);
 statement: insert into rtest_comp values ('p3', 'cm', 5.0);
 statement: insert into rtest_comp values ('p4', 'cm', 15.0);
 statement: insert into rtest_comp values ('p5', 'inch', 7.0);
 statement: insert into rtest_comp values ('p6', 'inch', 4.4);
 statement: select * from rtest_vcomp order by part;
 statement: select * from rtest_vcomp where size_in_cm > 10.0 order by size_in_cm using >;
 statement: CREATE TABLE shoe_data (                                                                                                                                                                                                                                   +
         shoename   char(10),                                                                                                                                                                                                                                          +
         sh_avail   integer,                                                                                                                                                                                                                                           +
         slcolor    char(10),                                                                                                                                                                                                                                          +
         slminlen   float,                                                                                                                                                                                                                                             +
         slmaxlen   float,                                                                                                                                                                                                                                             +
         slunit     char(8)                                                                                                                                                                                                                                            +
 );
 statement: CREATE TABLE shoelace_data (                                                                                                                                                                                                                               +
         sl_name    char(10),                                                                                                                                                                                                                                          +
         sl_avail   integer,                                                                                                                                                                                                                                           +
         sl_color   char(10),                                                                                                                                                                                                                                          +
         sl_len     float,                                                                                                                                                                                                                                             +
         sl_unit    char(8)                                                                                                                                                                                                                                            +
 );
 statement: CREATE TABLE unit (                                                                                                                                                                                                                                        +
         un_name    char(8),                                                                                                                                                                                                                                           +
         un_fact    float                                                                                                                                                                                                                                              +
 );
 statement: CREATE VIEW shoe AS                                                                                                                                                                                                                                        +
         SELECT sh.shoename,                                                                                                                                                                                                                                           +
                    sh.sh_avail,                                                                                                                                                                                                                                       +
                    sh.slcolor,                                                                                                                                                                                                                                        +
                    sh.slminlen,                                                                                                                                                                                                                                       +
                    sh.slminlen * un.un_fact AS slminlen_cm,                                                                                                                                                                                                           +
                    sh.slmaxlen,                                                                                                                                                                                                                                       +
                    sh.slmaxlen * un.un_fact AS slmaxlen_cm,                                                                                                                                                                                                           +
                    sh.slunit                                                                                                                                                                                                                                          +
           FROM shoe_data sh, unit un                                                                                                                                                                                                                                  +
          WHERE sh.slunit = un.un_name;
 statement: CREATE VIEW shoelace AS                                                                                                                                                                                                                                    +
         SELECT s.sl_name,                                                                                                                                                                                                                                             +
                    s.sl_avail,                                                                                                                                                                                                                                        +
                    s.sl_color,                                                                                                                                                                                                                                        +
                    s.sl_len,                                                                                                                                                                                                                                          +
                    s.sl_unit,                                                                                                                                                                                                                                         +
                    s.sl_len * u.un_fact AS sl_len_cm                                                                                                                                                                                                                  +
           FROM shoelace_data s, unit u                                                                                                                                                                                                                                +
          WHERE s.sl_unit = u.un_name;
 statement: CREATE VIEW shoe_ready AS                                                                                                                                                                                                                                  +
         SELECT rsh.shoename,                                                                                                                                                                                                                                          +
                    rsh.sh_avail,                                                                                                                                                                                                                                      +
                    rsl.sl_name,                                                                                                                                                                                                                                       +
                    rsl.sl_avail,                                                                                                                                                                                                                                      +
                    int4smaller(rsh.sh_avail, rsl.sl_avail) AS total_avail                                                                                                                                                                                             +
           FROM shoe rsh, shoelace rsl                                                                                                                                                                                                                                 +
          WHERE rsl.sl_color = rsh.slcolor                                                                                                                                                                                                                             +
            AND rsl.sl_len_cm >= rsh.slminlen_cm                                                                                                                                                                                                                       +
            AND rsl.sl_len_cm <= rsh.slmaxlen_cm;
 statement: INSERT INTO unit VALUES ('cm', 1.0);
 statement: INSERT INTO unit VALUES ('m', 100.0);
 statement: INSERT INTO unit VALUES ('inch', 2.54);
 statement: INSERT INTO shoe_data VALUES ('sh1', 2, 'black', 70.0, 90.0, 'cm');
 statement: INSERT INTO shoe_data VALUES ('sh2', 0, 'black', 30.0, 40.0, 'inch');
 statement: INSERT INTO shoe_data VALUES ('sh3', 4, 'brown', 50.0, 65.0, 'cm');
 statement: INSERT INTO shoe_data VALUES ('sh4', 3, 'brown', 40.0, 50.0, 'inch');
 statement: INSERT INTO shoelace_data VALUES ('sl1', 5, 'black', 80.0, 'cm');
 statement: INSERT INTO shoelace_data VALUES ('sl2', 6, 'black', 100.0, 'cm');
 statement: INSERT INTO shoelace_data VALUES ('sl3', 0, 'black', 35.0 , 'inch');
 statement: INSERT INTO shoelace_data VALUES ('sl4', 8, 'black', 40.0 , 'inch');
 statement: INSERT INTO shoelace_data VALUES ('sl5', 4, 'brown', 1.0 , 'm');
 statement: INSERT INTO shoelace_data VALUES ('sl6', 0, 'brown', 0.9 , 'm');
 statement: INSERT INTO shoelace_data VALUES ('sl7', 7, 'brown', 60 , 'cm');
 statement: INSERT INTO shoelace_data VALUES ('sl8', 1, 'brown', 40 , 'inch');
 statement: SELECT * FROM shoelace ORDER BY sl_name;
 statement: SELECT * FROM shoe_ready WHERE total_avail >= 2 ORDER BY 1;
 statement: CREATE TABLE shoelace_log (                                                                                                                                                                                                                                +
         sl_name    char(10),                                                                                                                                                                                                                                          +
         sl_avail   integer,                                                                                                                                                                                                                                           +
         log_who    name,                                                                                                                                                                                                                                              +
         log_when   timestamp                                                                                                                                                                                                                                          +
     );
 statement: CREATE RULE log_shoelace AS ON UPDATE TO shoelace_data                                                                                                                                                                                                     +
         WHERE NEW.sl_avail != OLD.sl_avail                                                                                                                                                                                                                            +
         DO INSERT INTO shoelace_log VALUES (                                                                                                                                                                                                                          +
                                         NEW.sl_name,                                                                                                                                                                                                                  +
                                         NEW.sl_avail,                                                                                                                                                                                                                 +
                                         'Al Bundy',                                                                                                                                                                                                                   +
                                         'epoch'                                                                                                                                                                                                                       +
                                     );
 statement: UPDATE shoelace_data SET sl_avail = 6 WHERE  sl_name = 'sl7';
 statement: SELECT * FROM shoelace_log;
 statement: CREATE RULE shoelace_ins AS ON INSERT TO shoelace                                                                                                                                                                                                          +
         DO INSTEAD                                                                                                                                                                                                                                                    +
         INSERT INTO shoelace_data VALUES (                                                                                                                                                                                                                            +
                NEW.sl_name,                                                                                                                                                                                                                                           +
                NEW.sl_avail,                                                                                                                                                                                                                                          +
                NEW.sl_color,                                                                                                                                                                                                                                          +
                NEW.sl_len,                                                                                                                                                                                                                                            +
                NEW.sl_unit);
 statement: CREATE RULE shoelace_upd AS ON UPDATE TO shoelace                                                                                                                                                                                                          +
         DO INSTEAD                                                                                                                                                                                                                                                    +
         UPDATE shoelace_data SET                                                                                                                                                                                                                                      +
                sl_name = NEW.sl_name,                                                                                                                                                                                                                                 +
                sl_avail = NEW.sl_avail,                                                                                                                                                                                                                               +
                sl_color = NEW.sl_color,                                                                                                                                                                                                                               +
                sl_len = NEW.sl_len,                                                                                                                                                                                                                                   +
                sl_unit = NEW.sl_unit                                                                                                                                                                                                                                  +
          WHERE sl_name = OLD.sl_name;
 statement: CREATE RULE shoelace_del AS ON DELETE TO shoelace                                                                                                                                                                                                          +
         DO INSTEAD                                                                                                                                                                                                                                                    +
         DELETE FROM shoelace_data                                                                                                                                                                                                                                     +
          WHERE sl_name = OLD.sl_name;
 statement: CREATE TABLE shoelace_arrive (                                                                                                                                                                                                                             +
         arr_name    char(10),                                                                                                                                                                                                                                         +
         arr_quant   integer                                                                                                                                                                                                                                           +
     );
 statement: CREATE TABLE shoelace_ok (                                                                                                                                                                                                                                 +
         ok_name     char(10),                                                                                                                                                                                                                                         +
         ok_quant    integer                                                                                                                                                                                                                                           +
     );
 statement: CREATE RULE shoelace_ok_ins AS ON INSERT TO shoelace_ok                                                                                                                                                                                                    +
         DO INSTEAD                                                                                                                                                                                                                                                    +
         UPDATE shoelace SET                                                                                                                                                                                                                                           +
                sl_avail = sl_avail + NEW.ok_quant                                                                                                                                                                                                                     +
          WHERE sl_name = NEW.ok_name;
 statement: INSERT INTO shoelace_arrive VALUES ('sl3', 10);
 statement: INSERT INTO shoelace_arrive VALUES ('sl6', 20);
 statement: INSERT INTO shoelace_arrive VALUES ('sl8', 20);
 statement: SELECT * FROM shoelace ORDER BY sl_name;
 statement: insert into shoelace_ok select * from shoelace_arrive;
 statement: SELECT * FROM shoelace ORDER BY sl_name;
 statement: SELECT * FROM shoelace_log ORDER BY sl_name;
 statement: CREATE VIEW shoelace_obsolete AS                                                                                                                                                                                                                           +
         SELECT * FROM shoelace WHERE NOT EXISTS                                                                                                                                                                                                                       +
             (SELECT shoename FROM shoe WHERE slcolor = sl_color);
 statement: CREATE VIEW shoelace_candelete AS                                                                                                                                                                                                                          +
         SELECT * FROM shoelace_obsolete WHERE sl_avail = 0;
 statement: insert into shoelace values ('sl9', 0, 'pink', 35.0, 'inch', 0.0);
 statement: insert into shoelace values ('sl10', 1000, 'magenta', 40.0, 'inch', 0.0);
 statement: insert into shoelace values ('sl10', 1000, 'magenta', 40.0, 'inch', 0.0)                                                                                                                                                                                   +
   on conflict do nothing;
 statement: SELECT * FROM shoelace_obsolete ORDER BY sl_len_cm;
 statement: SELECT * FROM shoelace_candelete;
 statement: DELETE FROM shoelace WHERE EXISTS                                                                                                                                                                                                                          +
     (SELECT * FROM shoelace_candelete                                                                                                                                                                                                                                 +
              WHERE sl_name = shoelace.sl_name);
 statement: SELECT * FROM shoelace ORDER BY sl_name;
 statement: SELECT * FROM shoe ORDER BY shoename;
 statement: SELECT count(*) FROM shoe;
 statement: create table foo (f1 int);
 statement: create table foo2 (f1 int);
 statement: create rule foorule as on insert to foo where f1 < 100                                                                                                                                                                                                     +
 do instead nothing;
 statement: insert into foo values(1);
 statement: insert into foo values(1001);
 statement: select * from foo;
 statement: drop rule foorule on foo;
 statement: create rule foorule as on insert to foo where f1 < 100                                                                                                                                                                                                     +
 do instead insert into foo2 values (f1);
 statement: create rule foorule as on insert to foo where f1 < 100                                                                                                                                                                                                     +
 do instead insert into foo2 values (new.f1);
 statement: insert into foo values(2);
 statement: insert into foo values(100);
 statement: select * from foo;
 statement: select * from foo2;
 statement: drop rule foorule on foo;
 statement: drop table foo;
 statement: drop table foo2;
 statement: create table pparent (pid int, txt text);
 statement: insert into pparent values (1,'parent1');
 statement: insert into pparent values (2,'parent2');
 statement: create table cchild (pid int, descrip text);
 statement: insert into cchild values (1,'descrip1');
 statement: create view vview as                                                                                                                                                                                                                                       +
   select pparent.pid, txt, descrip from                                                                                                                                                                                                                               +
     pparent left join cchild using (pid);
 statement: create rule rrule as                                                                                                                                                                                                                                       +
   on update to vview do instead                                                                                                                                                                                                                                       +
 (                                                                                                                                                                                                                                                                     +
   insert into cchild (pid, descrip)                                                                                                                                                                                                                                   +
     select old.pid, new.descrip where old.descrip isnull;                                                                                                                                                                                                             +
   update cchild set descrip = new.descrip where cchild.pid = old.pid;                                                                                                                                                                                                 +
 );
 statement: select * from vview;
 statement: update vview set descrip='test1' where pid=1;
 statement: select * from vview;
 statement: update vview set descrip='test2' where pid=2;
 statement: select * from vview;
 statement: update vview set descrip='test3' where pid=3;
 statement: select * from vview;
 statement: select * from cchild;
 statement: drop rule rrule on vview;
 statement: drop view vview;
 statement: drop table pparent;
 statement: drop table cchild;
 statement: SELECT viewname, definition FROM pg_views WHERE schemaname <> 'information_schema' ORDER BY viewname;
 statement: SELECT tablename, rulename, definition FROM pg_rules                                                                                                                                                                                                       +
         ORDER BY tablename, rulename;
 statement: CREATE TABLE ruletest_tbl (a int, b int);
 statement: CREATE TABLE ruletest_tbl2 (a int, b int);
 statement: CREATE OR REPLACE RULE myrule AS ON INSERT TO ruletest_tbl                                                                                                                                                                                                 +
         DO INSTEAD INSERT INTO ruletest_tbl2 VALUES (10, 10);
 statement: INSERT INTO ruletest_tbl VALUES (99, 99);
 statement: CREATE OR REPLACE RULE myrule AS ON INSERT TO ruletest_tbl                                                                                                                                                                                                 +
         DO INSTEAD INSERT INTO ruletest_tbl2 VALUES (1000, 1000);
 statement: INSERT INTO ruletest_tbl VALUES (99, 99);
 statement: SELECT * FROM ruletest_tbl2;
 statement: create table rule_and_refint_t1 (                                                                                                                                                                                                                          +
         id1a integer,                                                                                                                                                                                                                                                 +
         id1b integer,                                                                                                                                                                                                                                                 +
         primary key (id1a, id1b)                                                                                                                                                                                                                                      +
 );
 statement: create table rule_and_refint_t2 (                                                                                                                                                                                                                          +
         id2a integer,                                                                                                                                                                                                                                                 +
         id2c integer,                                                                                                                                                                                                                                                 +
         primary key (id2a, id2c)                                                                                                                                                                                                                                      +
 );
 statement: create table rule_and_refint_t3 (                                                                                                                                                                                                                          +
         id3a integer,                                                                                                                                                                                                                                                 +
         id3b integer,                                                                                                                                                                                                                                                 +
         id3c integer,                                                                                                                                                                                                                                                 +
         data text,                                                                                                                                                                                                                                                    +
         primary key (id3a, id3b, id3c),                                                                                                                                                                                                                               +
         foreign key (id3a, id3b) references rule_and_refint_t1 (id1a, id1b),                                                                                                                                                                                          +
         foreign key (id3a, id3c) references rule_and_refint_t2 (id2a, id2c)                                                                                                                                                                                           +
 );
 statement: insert into rule_and_refint_t1 values (1, 11);
 statement: insert into rule_and_refint_t1 values (1, 12);
 statement: insert into rule_and_refint_t1 values (2, 21);
 statement: insert into rule_and_refint_t1 values (2, 22);
 statement: insert into rule_and_refint_t2 values (1, 11);
 statement: insert into rule_and_refint_t2 values (1, 12);
 statement: insert into rule_and_refint_t2 values (2, 21);
 statement: insert into rule_and_refint_t2 values (2, 22);
 statement: insert into rule_and_refint_t3 values (1, 11, 11, 'row1');
 statement: insert into rule_and_refint_t3 values (1, 11, 12, 'row2');
 statement: insert into rule_and_refint_t3 values (1, 12, 11, 'row3');
 statement: insert into rule_and_refint_t3 values (1, 12, 12, 'row4');
 statement: insert into rule_and_refint_t3 values (1, 11, 13, 'row5');
 statement: insert into rule_and_refint_t3 values (1, 13, 11, 'row6');
 statement: insert into rule_and_refint_t3 values (1, 13, 11, 'row6')                                                                                                                                                                                                  +
   on conflict do nothing;
 statement: insert into rule_and_refint_t3 values (1, 13, 11, 'row6')                                                                                                                                                                                                  +
   on conflict (id3a, id3b, id3c) do update                                                                                                                                                                                                                            +
   set id3b = excluded.id3b;
 statement: insert into shoelace values ('sl9', 0, 'pink', 35.0, 'inch', 0.0)                                                                                                                                                                                          +
   on conflict (sl_name) do update                                                                                                                                                                                                                                     +
   set sl_avail = excluded.sl_avail;
 statement: create rule rule_and_refint_t3_ins as on insert to rule_and_refint_t3                                                                                                                                                                                      +
         where (exists (select 1 from rule_and_refint_t3                                                                                                                                                                                                               +
                         where (((rule_and_refint_t3.id3a = new.id3a)                                                                                                                                                                                                  +
                         and (rule_and_refint_t3.id3b = new.id3b))                                                                                                                                                                                                     +
                         and (rule_and_refint_t3.id3c = new.id3c))))                                                                                                                                                                                                   +
         do instead update rule_and_refint_t3 set data = new.data                                                                                                                                                                                                      +
         where (((rule_and_refint_t3.id3a = new.id3a)                                                                                                                                                                                                                  +
         and (rule_and_refint_t3.id3b = new.id3b))                                                                                                                                                                                                                     +
         and (rule_and_refint_t3.id3c = new.id3c));
 statement: insert into rule_and_refint_t3 values (1, 11, 13, 'row7');
 statement: insert into rule_and_refint_t3 values (1, 13, 11, 'row8');
 statement: create view fooview as select 'foo'::text;
 statement: drop rule "_RETURN" on fooview;
 statement: drop view fooview;
 statement: create table fooview (x int, y text);
 statement: select xmin, * from fooview;
 statement: create rule "_RETURN" as on select to fooview do instead                                                                                                                                                                                                   +
   select 1 as x, 'aaa'::text as y;
 statement: select * from fooview;
 statement: select xmin, * from fooview;
 statement: select reltoastrelid, relkind, relfrozenxid                                                                                                                                                                                                                +
   from pg_class where oid = 'fooview'::regclass;
 statement: drop view fooview;
 statement: create table id (id serial primary key, name text);
 statement: create table test_1 (id integer primary key) inherits (id);
 statement: create table test_2 (id integer primary key) inherits (id);
 statement: create table test_3 (id integer primary key) inherits (id);
 statement: insert into test_1 (name) values ('Test 1');
 statement: insert into test_1 (name) values ('Test 2');
 statement: insert into test_2 (name) values ('Test 3');
 statement: insert into test_2 (name) values ('Test 4');
 statement: insert into test_3 (name) values ('Test 5');
 statement: insert into test_3 (name) values ('Test 6');
 statement: create view id_ordered as select * from id order by id;
 statement: create rule update_id_ordered as on update to id_ordered                                                                                                                                                                                                   +
         do instead update id set name = new.name where id = old.id;
 statement: select * from id_ordered;
 statement: update id_ordered set name = 'update 2' where id = 2;
 statement: update id_ordered set name = 'update 4' where id = 4;
 statement: update id_ordered set name = 'update 5' where id = 5;
 statement: select * from id_ordered;
 statement: set client_min_messages to warning;
 statement: drop table id cascade;
 statement: reset client_min_messages;
 statement: create temp table t1 (a integer primary key);
 statement: create temp table t1_1 (check (a >= 0 and a < 10)) inherits (t1);
 statement: create temp table t1_2 (check (a >= 10 and a < 20)) inherits (t1);
 statement: create rule t1_ins_1 as on insert to t1                                                                                                                                                                                                                    +
         where new.a >= 0 and new.a < 10                                                                                                                                                                                                                               +
         do instead                                                                                                                                                                                                                                                    +
         insert into t1_1 values (new.a);
 statement: create rule t1_ins_2 as on insert to t1                                                                                                                                                                                                                    +
         where new.a >= 10 and new.a < 20                                                                                                                                                                                                                              +
         do instead                                                                                                                                                                                                                                                    +
         insert into t1_2 values (new.a);
 statement: create rule t1_upd_1 as on update to t1                                                                                                                                                                                                                    +
         where old.a >= 0 and old.a < 10                                                                                                                                                                                                                               +
         do instead                                                                                                                                                                                                                                                    +
         update t1_1 set a = new.a where a = old.a;
 statement: create rule t1_upd_2 as on update to t1                                                                                                                                                                                                                    +
         where old.a >= 10 and old.a < 20                                                                                                                                                                                                                              +
         do instead                                                                                                                                                                                                                                                    +
         update t1_2 set a = new.a where a = old.a;
 statement: set constraint_exclusion = on;
 statement: insert into t1 select * from generate_series(5,19,1) g;
 statement: update t1 set a = 4 where a = 5;
 statement: select * from only t1;
 statement: select * from only t1_1;
 statement: select * from only t1_2;
 statement: reset constraint_exclusion;
 statement: select pg_get_viewdef('shoe'::regclass) as unpretty;
 statement: select pg_get_viewdef('shoe'::regclass,true) as pretty;
 statement: select pg_get_viewdef('shoe'::regclass,0) as prettier;
 statement: create table rules_src(f1 int, f2 int);
 statement: create table rules_log(f1 int, f2 int, tag text);
 statement: insert into rules_src values(1,2), (11,12);
 statement: create rule r1 as on update to rules_src do also                                                                                                                                                                                                           +
   insert into rules_log values(old.*, 'old'), (new.*, 'new');
 statement: update rules_src set f2 = f2 + 1;
 statement: update rules_src set f2 = f2 * 10;
 statement: select * from rules_src;
 statement: select * from rules_log;
 statement: create rule r2 as on update to rules_src do also                                                                                                                                                                                                           +
   values(old.*, 'old'), (new.*, 'new');
 statement: update rules_src set f2 = f2 / 10;
 statement: select * from rules_src;
 statement: select * from rules_log;
 statement: create rule r3 as on delete to rules_src do notify rules_src_deletion;
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rules_src)$'                                                                                                                                                                                                                                     +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27317';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27317' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '27317' ORDER BY 1;
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true)), ev_enabled                                                                                                                                                              +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27317' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '27317' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '27317' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: create rule r4 as on insert to rules_src do instead insert into rules_log AS trgt SELECT NEW.* RETURNING trgt.f1, trgt.f2;
 statement: create rule r5 as on update to rules_src do instead UPDATE rules_log AS trgt SET tag = 'updated' WHERE trgt.f1 = new.f1;
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rules_src)$'                                                                                                                                                                                                                                     +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27317';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27317' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pol.polname,                                                                                                                                                                                                                                        +
 CASE WHEN pol.polroles = '{0}' THEN NULL ELSE pg_catalog.array_to_string(array(select rolname from pg_catalog.pg_roles where oid = any (pol.polroles) order by 1),',') END,                                                                                           +
 pg_catalog.pg_get_expr(pol.polqual, pol.polrelid),                                                                                                                                                                                                                    +
 pg_catalog.pg_get_expr(pol.polwithcheck, pol.polrelid),                                                                                                                                                                                                               +
 CASE pol.polcmd                                                                                                                                                                                                                                                       +
 WHEN 'r' THEN 'SELECT'                                                                                                                                                                                                                                                +
 WHEN 'a' THEN 'INSERT'                                                                                                                                                                                                                                                +
 WHEN 'w' THEN 'UPDATE'                                                                                                                                                                                                                                                +
 WHEN 'd' THEN 'DELETE'                                                                                                                                                                                                                                                +
 WHEN '*' THEN 'ALL'                                                                                                                                                                                                                                                   +
 END AS cmd                                                                                                                                                                                                                                                            +
 FROM pg_catalog.pg_policy pol                                                                                                                                                                                                                                         +
 WHERE pol.polrelid = '27317' ORDER BY 1;
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true)), ev_enabled                                                                                                                                                              +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27317' ORDER BY 1;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent AND i.inhrelid = '27317' ORDER BY inhseqno;
 statement: SELECT c.oid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhrelid AND i.inhparent = '27317' ORDER BY c.oid::pg_catalog.regclass::pg_catalog.text;
 statement: CREATE TABLE rule_t1 (a INT);
 statement: CREATE VIEW rule_v1 AS SELECT * FROM rule_t1;
 statement: CREATE RULE InsertRule AS                                                                                                                                                                                                                                  +
     ON INSERT TO rule_v1                                                                                                                                                                                                                                              +
     DO INSTEAD                                                                                                                                                                                                                                                        +
         INSERT INTO rule_t1 VALUES(new.a);
 statement: ALTER RULE InsertRule ON rule_v1 RENAME to NewInsertRule;
 statement: INSERT INTO rule_v1 VALUES(1);
 statement: SELECT * FROM rule_v1;
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rule_v1)$'                                                                                                                                                                                                                                       +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27334';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27334' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pg_catalog.pg_get_viewdef('27334'::pg_catalog.oid, true);
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true))                                                                                                                                                                          +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27334' AND r.rulename != '_RETURN' ORDER BY 1;
 statement: ALTER RULE InsertRule ON rule_v1 RENAME TO NewInsertRule;
 statement: ALTER RULE NewInsertRule ON rule_v1 RENAME TO "_RETURN";
 statement: ALTER RULE "_RETURN" ON rule_v1 RENAME TO abc;
 statement: DROP VIEW rule_v1;
 statement: DROP TABLE rule_t1;
 statement: create view rule_v1 as values(1,2);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rule_v1)$'                                                                                                                                                                                                                                       +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27339';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27339' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pg_catalog.pg_get_viewdef('27339'::pg_catalog.oid, true);
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true))                                                                                                                                                                          +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27339' AND r.rulename != '_RETURN' ORDER BY 1;
 statement: drop view rule_v1;
 statement: create view rule_v1(x) as values(1,2);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rule_v1)$'                                                                                                                                                                                                                                       +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27343';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27343' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pg_catalog.pg_get_viewdef('27343'::pg_catalog.oid, true);
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true))                                                                                                                                                                          +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27343' AND r.rulename != '_RETURN' ORDER BY 1;
 statement: drop view rule_v1;
 statement: create view rule_v1(x) as select * from (values(1,2)) v;
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rule_v1)$'                                                                                                                                                                                                                                       +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27347';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27347' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pg_catalog.pg_get_viewdef('27347'::pg_catalog.oid, true);
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true))                                                                                                                                                                          +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27347' AND r.rulename != '_RETURN' ORDER BY 1;
 statement: drop view rule_v1;
 statement: create view rule_v1(x) as select * from (values(1,2)) v(q,w);
 statement: SELECT c.oid,                                                                                                                                                                                                                                              +
   n.nspname,                                                                                                                                                                                                                                                          +
   c.relname                                                                                                                                                                                                                                                           +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
      LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace                                                                                                                                                                                                    +
 WHERE c.relname ~ '^(rule_v1)$'                                                                                                                                                                                                                                       +
   AND pg_catalog.pg_table_is_visible(c.oid)                                                                                                                                                                                                                           +
 ORDER BY 2, 3;
 statement: SELECT c.relchecks, c.relkind, c.relhasindex, c.relhasrules, c.relhastriggers, c.relrowsecurity, c.relforcerowsecurity, c.relhasoids, pg_catalog.array_to_string(c.reloptions || array(select 'toast.' || x from pg_catalog.unnest(tc.reloptions) x), ', ')+
 , c.reltablespace, CASE WHEN c.reloftype = 0 THEN '' ELSE c.reloftype::pg_catalog.regtype::pg_catalog.text END, c.relpersistence, c.relreplident                                                                                                                      +
 FROM pg_catalog.pg_class c                                                                                                                                                                                                                                            +
  LEFT JOIN pg_catalog.pg_class tc ON (c.reltoastrelid = tc.oid)                                                                                                                                                                                                       +
 WHERE c.oid = '27351';
 statement: SELECT a.attname,                                                                                                                                                                                                                                          +
   pg_catalog.format_type(a.atttypid, a.atttypmod),                                                                                                                                                                                                                    +
   (SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)                                                                                                                                                                                               +
    FROM pg_catalog.pg_attrdef d                                                                                                                                                                                                                                       +
    WHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef),                                                                                                                                                                                              +
   a.attnotnull, a.attnum,                                                                                                                                                                                                                                             +
   (SELECT c.collname FROM pg_catalog.pg_collation c, pg_catalog.pg_type t                                                                                                                                                                                             +
    WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation) AS attcollation,                                                                                                                                                         +
   NULL AS indexdef,                                                                                                                                                                                                                                                   +
   NULL AS attfdwoptions,                                                                                                                                                                                                                                              +
   a.attstorage,                                                                                                                                                                                                                                                       +
   CASE WHEN a.attstattarget=-1 THEN NULL ELSE a.attstattarget END AS attstattarget, pg_catalog.col_description(a.attrelid, a.attnum)                                                                                                                                  +
 FROM pg_catalog.pg_attribute a                                                                                                                                                                                                                                        +
 WHERE a.attrelid = '27351' AND a.attnum > 0 AND NOT a.attisdropped                                                                                                                                                                                                    +
 ORDER BY a.attnum;
 statement: SELECT pg_catalog.pg_get_viewdef('27351'::pg_catalog.oid, true);
 statement: SELECT r.rulename, trim(trailing ';' from pg_catalog.pg_get_ruledef(r.oid, true))                                                                                                                                                                          +
 FROM pg_catalog.pg_rewrite r                                                                                                                                                                                                                                          +
 WHERE r.ev_class = '27351' AND r.rulename != '_RETURN' ORDER BY 1;
 statement: drop view rule_v1;
 statement: CREATE TABLE hats (                                                                                                                                                                                                                                        +
         hat_name    char(10) primary key,                                                                                                                                                                                                                             +
         hat_color   char(10)                                                                                                                                                                                                                                          +
 );
 statement: CREATE TABLE hat_data (                                                                                                                                                                                                                                    +
         hat_name    char(10),                                                                                                                                                                                                                                         +
         hat_color   char(10)                                                                                                                                                                                                                                          +
 );
 statement: create unique index hat_data_unique_idx                                                                                                                                                                                                                    +
   on hat_data (hat_name COLLATE "C" bpchar_pattern_ops);
 statement: CREATE RULE hat_nosert AS ON INSERT TO hats                                                                                                                                                                                                                +
     DO INSTEAD                                                                                                                                                                                                                                                        +
     INSERT INTO hat_data VALUES (                                                                                                                                                                                                                                     +
            NEW.hat_name,                                                                                                                                                                                                                                              +
            NEW.hat_color)                                                                                                                                                                                                                                             +
         ON CONFLICT (hat_name COLLATE "C" bpchar_pattern_ops) WHERE hat_color = 'green'                                                                                                                                                                               +
         DO NOTHING                                                                                                                                                                                                                                                    +
         RETURNING *;
 statement: SELECT definition FROM pg_rules WHERE tablename = 'hats' ORDER BY rulename;
 statement: INSERT INTO hats VALUES ('h7', 'black') RETURNING *;
 statement: INSERT INTO hats VALUES ('h7', 'black') RETURNING *;
 statement: SELECT tablename, rulename, definition FROM pg_rules                                                                                                                                                                                                       +
         WHERE tablename = 'hats';
 statement: DROP RULE hat_nosert ON hats;
 statement: CREATE RULE hat_nosert_all AS ON INSERT TO hats                                                                                                                                                                                                            +
     DO INSTEAD                                                                                                                                                                                                                                                        +
     INSERT INTO hat_data VALUES (                                                                                                                                                                                                                                     +
            NEW.hat_name,                                                                                                                                                                                                                                              +
            NEW.hat_color)                                                                                                                                                                                                                                             +
         ON CONFLICT                                                                                                                                                                                                                                                   +
         DO NOTHING                                                                                                                                                                                                                                                    +
         RETURNING *;
 statement: SELECT definition FROM pg_rules WHERE tablename = 'hats' ORDER BY rulename;
 statement: DROP RULE hat_nosert_all ON hats;
 statement: INSERT INTO hats VALUES ('h7', 'black') RETURNING *;
 statement: CREATE RULE hat_upsert AS ON INSERT TO hats                                                                                                                                                                                                                +
     DO INSTEAD                                                                                                                                                                                                                                                        +
     INSERT INTO hat_data VALUES (                                                                                                                                                                                                                                     +
            NEW.hat_name,                                                                                                                                                                                                                                              +
            NEW.hat_color)                                                                                                                                                                                                                                             +
         ON CONFLICT (hat_name)                                                                                                                                                                                                                                        +
         DO UPDATE                                                                                                                                                                                                                                                     +
            SET hat_name = hat_data.hat_name, hat_color = excluded.hat_color                                                                                                                                                                                           +
            WHERE excluded.hat_color <>  'forbidden' AND hat_data.* != excluded.*                                                                                                                                                                                      +
         RETURNING *;
 statement: SELECT definition FROM pg_rules WHERE tablename = 'hats' ORDER BY rulename;
 statement: INSERT INTO hats VALUES ('h8', 'black') RETURNING *;
 statement: SELECT * FROM hat_data WHERE hat_name = 'h8';
 statement: INSERT INTO hats VALUES ('h8', 'white') RETURNING *;
 statement: SELECT * FROM hat_data WHERE hat_name = 'h8';
 statement: INSERT INTO hats VALUES ('h8', 'forbidden') RETURNING *;
 statement: SELECT * FROM hat_data WHERE hat_name = 'h8';
 statement: SELECT tablename, rulename, definition FROM pg_rules                                                                                                                                                                                                       +
         WHERE tablename = 'hats';
 statement: explain (costs off) INSERT INTO hats VALUES ('h8', 'forbidden') RETURNING *;
 statement: WITH data(hat_name, hat_color) AS (                                                                                                                                                                                                                        +
     VALUES ('h8', 'green'),                                                                                                                                                                                                                                           +
         ('h9', 'blue'),                                                                                                                                                                                                                                               +
         ('h7', 'forbidden')                                                                                                                                                                                                                                           +
 )                                                                                                                                                                                                                                                                     +
 INSERT INTO hats                                                                                                                                                                                                                                                      +
     SELECT * FROM data                                                                                                                                                                                                                                                +
 RETURNING *;
 statement: EXPLAIN (costs off) WITH data(hat_name, hat_color) AS (                                                                                                                                                                                                    +
     VALUES ('h8', 'green'),                                                                                                                                                                                                                                           +
         ('h9', 'blue'),                                                                                                                                                                                                                                               +
         ('h7', 'forbidden')                                                                                                                                                                                                                                           +
 )                                                                                                                                                                                                                                                                     +
 INSERT INTO hats                                                                                                                                                                                                                                                      +
     SELECT * FROM data                                                                                                                                                                                                                                                +
 RETURNING *;
 statement: SELECT * FROM hat_data WHERE hat_name IN ('h8', 'h9', 'h7') ORDER BY hat_name;
 statement: DROP RULE hat_upsert ON hats;
 statement: drop table hats;
 statement: drop table hat_data;

