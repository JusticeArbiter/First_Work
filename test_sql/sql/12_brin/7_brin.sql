DO $x$  DECLARE  r record;  r2 record;  cond text;  count int;  mismatch bool;  plan_ok bool;  plan_line text;  BEGIN  FOR r IN SELECT colname, oper, typ, value[ordinality], matches[ordinality] FROM brinopers, unnest(op) WITH ORDINALITY AS oper LOOP  mismatch := false;   -- prepare the condition  IF r.value IS NULL THEN  cond := format('%I %s %L', r.colname, r.oper, r.value);  ELSE  cond := format('%I %s %L::%s', r.colname, r.oper, r.value, r.typ);  END IF;   -- run the query using the brin index  CREATE TEMP TABLE brin_result (cid tid);  SET enable_seqscan = 0;  SET enable_bitmapscan = 1;   plan_ok := false;  FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT ctid FROM brintest WHERE %s $y$, cond) LOOP  IF plan_line LIKE 'Bitmap Heap Scan on brintest%' THEN  plan_ok := true;  END IF;  END LOOP;  IF NOT plan_ok THEN  RAISE WARNING 'did not get bitmap indexscan plan for %', r;  END IF;   EXECUTE format($y$INSERT INTO brin_result SELECT ctid FROM brintest WHERE %s $y$, cond);   -- run the query using a seqscan  CREATE TEMP TABLE brin_result_ss (cid tid);  SET enable_seqscan = 1;  SET enable_bitmapscan = 0;   plan_ok := false;  FOR plan_line IN EXECUTE format($y$EXPLAIN SELECT ctid FROM brintest WHERE %s $y$, cond) LOOP  IF plan_line LIKE 'Seq Scan on brintest%' THEN  plan_ok := true;  END IF;  END LOOP;  IF NOT plan_ok THEN  RAISE WARNING 'did not get seqscan plan for %', r;  END IF;   EXECUTE format($y$INSERT INTO brin_result_ss SELECT ctid FROM brintest WHERE %s $y$, cond);   -- make sure both return the same results  PERFORM * FROM brin_result EXCEPT ALL SELECT * FROM brin_result_ss;  GET DIAGNOSTICS count = ROW_COUNT;  IF count <> 0 THEN  mismatch = true;  END IF;  PERFORM * FROM brin_result_ss EXCEPT ALL SELECT * FROM brin_result;  GET DIAGNOSTICS count = ROW_COUNT;  IF count <> 0 THEN  mismatch = true;  END IF;   -- report the results of each scan to make the differences obvious  IF mismatch THEN  RAISE WARNING 'something not right in %: count %', r, count;  SET enable_seqscan = 1;  SET enable_bitmapscan = 0;  FOR r2 IN EXECUTE 'SELECT ' || r.colname || ' FROM brintest WHERE ' || cond LOOP  RAISE NOTICE 'seqscan: %', r2;  END LOOP;   SET enable_seqscan = 0;  SET enable_bitmapscan = 1;  FOR r2 IN EXECUTE 'SELECT ' || r.colname || ' FROM brintest WHERE ' || cond LOOP  RAISE NOTICE 'bitmapscan: %', r2;  END LOOP;  END IF;   -- make sure we found expected number of matches  SELECT count(*) INTO count FROM brin_result;  IF count != r.matches THEN RAISE WARNING 'unexpected number of results % for %', count, r; END IF;   -- drop the temporary tables  DROP TABLE brin_result;  DROP TABLE brin_result_ss;  END LOOP;  END;  $x$;
