LOG:  00000: statement: create function trap_zero_divide(int) returns int as $$  declare x int;  sx smallint;  begin  begin -- start a subtransaction  raise notice 'should see this';  x := 100 / $1;  raise notice 'should see this only if % <> 0', $1;  sx := $1;  raise notice 'should see this only if % fits in smallint', $1;  if $1 < 0 then  raise exception '% is less than zero', $1;  end if;  exception  when division_by_zero then  raise notice 'caught division_by_zero';  x := -1;  when NUMERIC_VALUE_OUT_OF_RANGE then  raise notice 'caught numeric_value_out_of_range';  x := -2;  end;  return x;  end$$ language plpgsql;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  create function trap_zero_divide(int) returns int as $$  declare x int;  sx smallint;  begin  begin -- start a subtransaction  raise notice 'should see this';  x := 100 / $1;  raise notice 'should see this only if % <> 0', $1;  sx := $1;  raise notice 'should see this only if % fits in smallint', $1;  if $1 < 0 then  raise exception '% is less than zero', $1;  end if;  exception  when division_by_zero then  raise notice 'caught division_by_zero';  x := -1;  when NUMERIC_VALUE_OUT_OF_RANGE then  raise notice 'caught numeric_value_out_of_range';  x := -2;  end;  return x;  end$$ language plpgsql;
ERROR:  42601: syntax error at end of input at character 582
LOCATION:  plpgsql_yyerror, pl_scanner.c:623
STATEMENT:  create function trap_zero_divide(int) returns int as $$  declare x int;  sx smallint;  begin  begin -- start a subtransaction  raise notice 'should see this';  x := 100 / $1;  raise notice 'should see this only if % <> 0', $1;  sx := $1;  raise notice 'should see this only if % fits in smallint', $1;  if $1 < 0 then  raise exception '% is less than zero', $1;  end if;  exception  when division_by_zero then  raise notice 'caught division_by_zero';  x := -1;  when NUMERIC_VALUE_OUT_OF_RANGE then  raise notice 'caught numeric_value_out_of_range';  x := -2;  end;  return x;  end$$ language plpgsql;
