LOG:  00000: statement: create function trap_timeout() returns void as $$  begin  declare x int;  begin  -- we assume this will take longer than 2 seconds:  select count(*) into x from tenk1 a, tenk1 b, tenk1 c;  exception  when others then  raise notice 'caught others?';  when query_canceled then  raise notice 'nyeah nyeah, can''t stop me';  end;  -- Abort transaction to abandon the statement_timeout setting. Otherwise,  -- the next top-level statement would be vulnerable to the timeout.  raise exception 'end of function';  end$$ language plpgsql;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  create function trap_timeout() returns void as $$  begin  declare x int;  begin  -- we assume this will take longer than 2 seconds:  select count(*) into x from tenk1 a, tenk1 b, tenk1 c;  exception  when others then  raise notice 'caught others?';  when query_canceled then  raise notice 'nyeah nyeah, can''t stop me';  end;  -- Abort transaction to abandon the statement_timeout setting. Otherwise,  -- the next top-level statement would be vulnerable to the timeout.  raise exception 'end of function';  end$$ language plpgsql;
ERROR:  42601: syntax error at end of input at character 511
LOCATION:  plpgsql_yyerror, pl_scanner.c:623
STATEMENT:  create function trap_timeout() returns void as $$  begin  declare x int;  begin  -- we assume this will take longer than 2 seconds:  select count(*) into x from tenk1 a, tenk1 b, tenk1 c;  exception  when others then  raise notice 'caught others?';  when query_canceled then  raise notice 'nyeah nyeah, can''t stop me';  end;  -- Abort transaction to abandon the statement_timeout setting. Otherwise,  -- the next top-level statement would be vulnerable to the timeout.  raise exception 'end of function';  end$$ language plpgsql;
