LOG:  00000: statement: do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
NOTICE:  00000: caught division by zero
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  do $outer$  begin  for i in 1..10 loop  begin  execute $ex$  do $$  declare x int = 0;  begin  x := 1 / x;  end;  $$;  $ex$;  exception when division_by_zero then  raise notice 'caught division by zero';  end;  end loop;  end;  $outer$;
