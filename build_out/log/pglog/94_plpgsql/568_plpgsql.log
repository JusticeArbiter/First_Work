LOG:  00000: statement: create or replace function forc01() returns void as $$  declare  c cursor(r1 integer, r2 integer)  for select * from generate_series(r1,r2) i;  c2 cursor  for select * from generate_series(41,43) i;  begin  for r in c(5,7) loop  raise notice '% from %', r.i, c;  end loop;  -- again, to test if cursor was closed properly  for r in c(9,10) loop  raise notice '% from %', r.i, c;  end loop;  -- and test a parameterless cursor  for r in c2 loop  raise notice '% from %', r.i, c2;  end loop;  -- and try it with a hand-assigned name  raise notice 'after loop, c2 = %', c2;  c2 := 'special_name';  for r in c2 loop  raise notice '% from %', r.i, c2;  end loop;  raise notice 'after loop, c2 = %', c2;  -- and try it with a generated name  -- (which we can't show in the output because it's variable)  c2 := null;  for r in c2 loop  raise notice '%', r.i;  end loop;  raise notice 'after loop, c2 = %', c2;  return;  end;  $$ language plpgsql;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  create or replace function forc01() returns void as $$  declare  c cursor(r1 integer, r2 integer)  for select * from generate_series(r1,r2) i;  c2 cursor  for select * from generate_series(41,43) i;  begin  for r in c(5,7) loop  raise notice '% from %', r.i, c;  end loop;  -- again, to test if cursor was closed properly  for r in c(9,10) loop  raise notice '% from %', r.i, c;  end loop;  -- and test a parameterless cursor  for r in c2 loop  raise notice '% from %', r.i, c2;  end loop;  -- and try it with a hand-assigned name  raise notice 'after loop, c2 = %', c2;  c2 := 'special_name';  for r in c2 loop  raise notice '% from %', r.i, c2;  end loop;  raise notice 'after loop, c2 = %', c2;  -- and try it with a generated name  -- (which we can't show in the output because it's variable)  c2 := null;  for r in c2 loop  raise notice '%', r.i;  end loop;  raise notice 'after loop, c2 = %', c2;  return;  end;  $$ language plpgsql;
ERROR:  42601: syntax error at end of input at character 920
LOCATION:  plpgsql_yyerror, pl_scanner.c:623
STATEMENT:  create or replace function forc01() returns void as $$  declare  c cursor(r1 integer, r2 integer)  for select * from generate_series(r1,r2) i;  c2 cursor  for select * from generate_series(41,43) i;  begin  for r in c(5,7) loop  raise notice '% from %', r.i, c;  end loop;  -- again, to test if cursor was closed properly  for r in c(9,10) loop  raise notice '% from %', r.i, c;  end loop;  -- and test a parameterless cursor  for r in c2 loop  raise notice '% from %', r.i, c2;  end loop;  -- and try it with a hand-assigned name  raise notice 'after loop, c2 = %', c2;  c2 := 'special_name';  for r in c2 loop  raise notice '% from %', r.i, c2;  end loop;  raise notice 'after loop, c2 = %', c2;  -- and try it with a generated name  -- (which we can't show in the output because it's variable)  c2 := null;  for r in c2 loop  raise notice '%', r.i;  end loop;  raise notice 'after loop, c2 = %', c2;  return;  end;  $$ language plpgsql;
