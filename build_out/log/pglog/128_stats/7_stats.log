LOG:  00000: statement: create function wait_for_stats() returns void as $$  declare  start_time timestamptz := clock_timestamp();  updated bool;  begin  -- we don't want to wait forever; loop will exit after 30 seconds  for i in 1 .. 300 loop   -- check to see if indexscan has been sensed  SELECT (st.idx_scan >= pr.idx_scan + 1) INTO updated  FROM pg_stat_user_tables AS st, pg_class AS cl, prevstats AS pr  WHERE st.relname='tenk2' AND cl.relname='tenk2';   exit when updated;   -- wait a little  perform pg_sleep(0.1);   -- reset stats snapshot so we can test again  perform pg_stat_clear_snapshot();   end loop;   -- report time waited in postmaster log (where it won't change test output)  raise log 'wait_for_stats delayed % seconds',  extract(epoch from clock_timestamp() - start_time);  end  $$ language plpgsql;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  create function wait_for_stats() returns void as $$  declare  start_time timestamptz := clock_timestamp();  updated bool;  begin  -- we don't want to wait forever; loop will exit after 30 seconds  for i in 1 .. 300 loop   -- check to see if indexscan has been sensed  SELECT (st.idx_scan >= pr.idx_scan + 1) INTO updated  FROM pg_stat_user_tables AS st, pg_class AS cl, prevstats AS pr  WHERE st.relname='tenk2' AND cl.relname='tenk2';   exit when updated;   -- wait a little  perform pg_sleep(0.1);   -- reset stats snapshot so we can test again  perform pg_stat_clear_snapshot();   end loop;   -- report time waited in postmaster log (where it won't change test output)  raise log 'wait_for_stats delayed % seconds',  extract(epoch from clock_timestamp() - start_time);  end  $$ language plpgsql;
ERROR:  42601: syntax error at end of input at character 779
LOCATION:  plpgsql_yyerror, pl_scanner.c:623
STATEMENT:  create function wait_for_stats() returns void as $$  declare  start_time timestamptz := clock_timestamp();  updated bool;  begin  -- we don't want to wait forever; loop will exit after 30 seconds  for i in 1 .. 300 loop   -- check to see if indexscan has been sensed  SELECT (st.idx_scan >= pr.idx_scan + 1) INTO updated  FROM pg_stat_user_tables AS st, pg_class AS cl, prevstats AS pr  WHERE st.relname='tenk2' AND cl.relname='tenk2';   exit when updated;   -- wait a little  perform pg_sleep(0.1);   -- reset stats snapshot so we can test again  perform pg_stat_clear_snapshot();   end loop;   -- report time waited in postmaster log (where it won't change test output)  raise log 'wait_for_stats delayed % seconds',  extract(epoch from clock_timestamp() - start_time);  end  $$ language plpgsql;
