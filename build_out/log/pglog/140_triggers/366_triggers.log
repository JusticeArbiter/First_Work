LOG:  00000: statement: create function upsert_before_func()  returns trigger language plpgsql as  $$  begin  if (TG_OP = 'UPDATE') then  raise warning 'before update (old): %', old.*::text;  raise warning 'before update (new): %', new.*::text;  elsif (TG_OP = 'INSERT') then  raise warning 'before insert (new): %', new.*::text;  if new.key % 2 = 0 then  new.key := new.key + 1;  new.color := new.color || ' trig modified';  raise warning 'before insert (new, modified): %', new.*::text;  end if;  end if;  return new;  end;  $$;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  create function upsert_before_func()  returns trigger language plpgsql as  $$  begin  if (TG_OP = 'UPDATE') then  raise warning 'before update (old): %', old.*::text;  raise warning 'before update (new): %', new.*::text;  elsif (TG_OP = 'INSERT') then  raise warning 'before insert (new): %', new.*::text;  if new.key % 2 = 0 then  new.key := new.key + 1;  new.color := new.color || ' trig modified';  raise warning 'before insert (new, modified): %', new.*::text;  end if;  end if;  return new;  end;  $$;
