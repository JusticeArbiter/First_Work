LOG:  00000: statement: CREATE FUNCTION city_update() RETURNS trigger LANGUAGE plpgsql AS $$  declare  ctry_id int;  begin  if NEW.country_name IS DISTINCT FROM OLD.country_name then  SELECT country_id, continent INTO ctry_id, NEW.continent  FROM country_table WHERE country_name = NEW.country_name;  if NOT FOUND then  raise exception 'No such country: "%"', NEW.country_name;  end if;   UPDATE city_table SET city_name = NEW.city_name,  population = NEW.population,  country_id = ctry_id  WHERE city_id = OLD.city_id;  else  UPDATE city_table SET city_name = NEW.city_name,  population = NEW.population  WHERE city_id = OLD.city_id;  NEW.continent := OLD.continent;  end if;   if NOT FOUND then RETURN NULL; end if;  RETURN NEW;  end;  $$;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  CREATE FUNCTION city_update() RETURNS trigger LANGUAGE plpgsql AS $$  declare  ctry_id int;  begin  if NEW.country_name IS DISTINCT FROM OLD.country_name then  SELECT country_id, continent INTO ctry_id, NEW.continent  FROM country_table WHERE country_name = NEW.country_name;  if NOT FOUND then  raise exception 'No such country: "%"', NEW.country_name;  end if;   UPDATE city_table SET city_name = NEW.city_name,  population = NEW.population,  country_id = ctry_id  WHERE city_id = OLD.city_id;  else  UPDATE city_table SET city_name = NEW.city_name,  population = NEW.population  WHERE city_id = OLD.city_id;  NEW.continent := OLD.continent;  end if;   if NOT FOUND then RETURN NULL; end if;  RETURN NEW;  end;  $$;
