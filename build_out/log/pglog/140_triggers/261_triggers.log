LOG:  00000: statement: CREATE FUNCTION city_insert() RETURNS trigger LANGUAGE plpgsql AS $$  declare  ctry_id int;  begin  if NEW.country_name IS NOT NULL then  SELECT country_id, continent INTO ctry_id, NEW.continent  FROM country_table WHERE country_name = NEW.country_name;  if NOT FOUND then  raise exception 'No such country: "%"', NEW.country_name;  end if;  else  NEW.continent := NULL;  end if;   if NEW.city_id IS NOT NULL then  INSERT INTO city_table  VALUES(NEW.city_id, NEW.city_name, NEW.population, ctry_id);  else  INSERT INTO city_table(city_name, population, country_id)  VALUES(NEW.city_name, NEW.population, ctry_id)  RETURNING city_id INTO NEW.city_id;  end if;   RETURN NEW;  end;  $$;
LOCATION:  exec_simple_query, postgres.c:938
NOTICE:  00000: test_event_trigger: ddl_command_start CREATE FUNCTION
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  CREATE FUNCTION city_insert() RETURNS trigger LANGUAGE plpgsql AS $$  declare  ctry_id int;  begin  if NEW.country_name IS NOT NULL then  SELECT country_id, continent INTO ctry_id, NEW.continent  FROM country_table WHERE country_name = NEW.country_name;  if NOT FOUND then  raise exception 'No such country: "%"', NEW.country_name;  end if;  else  NEW.continent := NULL;  end if;   if NEW.city_id IS NOT NULL then  INSERT INTO city_table  VALUES(NEW.city_id, NEW.city_name, NEW.population, ctry_id);  else  INSERT INTO city_table(city_name, population, country_id)  VALUES(NEW.city_name, NEW.population, ctry_id)  RETURNING city_id INTO NEW.city_id;  end if;   RETURN NEW;  end;  $$;
