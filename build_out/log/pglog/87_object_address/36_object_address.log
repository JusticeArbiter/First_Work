LOG:  00000: statement: DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
LOCATION:  exec_simple_query, postgres.c:938
WARNING:  01000: error for table,{eins},{}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table,{eins},{integer}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for index,{eins},{}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for index,{eins},{integer}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for index,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for index,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for index,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for index,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for sequence,{eins},{}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for sequence,{eins},{integer}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for sequence,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for sequence,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for sequence,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for sequence,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for view,{eins},{}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for view,{eins},{integer}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for view,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for view,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for view,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for view,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for materialized view,{eins},{}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for materialized view,{eins},{integer}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for materialized view,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for materialized view,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for materialized view,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for materialized view,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table,{eins},{}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table,{eins},{integer}: relation "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table,{addr_nsp,zwei},{}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table,{addr_nsp,zwei},{integer}: relation "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table,{eins,zwei,drei},{}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table,{eins,zwei,drei},{integer}: cross-database references are not implemented: "eins.zwei.drei"
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table column,{eins},{}: column name must be qualified
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table column,{eins},{integer}: column name must be qualified
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table column,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table column,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table column,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table column,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table column,{eins},{}: column name must be qualified
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table column,{eins},{integer}: column name must be qualified
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table column,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table column,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table column,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for foreign table column,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for aggregate,{eins},{}: aggregate eins(*) does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for aggregate,{eins},{integer}: aggregate eins(integer) does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for aggregate,{addr_nsp,zwei},{}: aggregate addr_nsp.zwei(*) does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for aggregate,{addr_nsp,zwei},{integer}: aggregate addr_nsp.zwei(integer) does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for aggregate,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for aggregate,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function,{eins},{}: function eins() does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function,{eins},{integer}: function eins(integer) does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function,{addr_nsp,zwei},{}: function addr_nsp.zwei() does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function,{addr_nsp,zwei},{integer}: function addr_nsp.zwei(integer) does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for type,{eins},{}: type "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for type,{eins},{integer}: type "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for type,{addr_nsp,zwei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for type,{addr_nsp,zwei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for type,{eins,zwei,drei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for type,{eins,zwei,drei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for cast,{eins},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for cast,{eins},{integer}: type "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for cast,{addr_nsp,zwei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for cast,{addr_nsp,zwei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for cast,{eins,zwei,drei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for cast,{eins,zwei,drei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table constraint,{eins},{}: must specify relation and object name
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table constraint,{eins},{integer}: must specify relation and object name
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table constraint,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table constraint,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table constraint,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for table constraint,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for domain constraint,{eins},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for domain constraint,{eins},{integer}: type "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for domain constraint,{addr_nsp,zwei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for domain constraint,{addr_nsp,zwei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for domain constraint,{eins,zwei,drei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for domain constraint,{eins,zwei,drei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for conversion,{eins},{}: conversion "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for conversion,{eins},{integer}: conversion "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for conversion,{addr_nsp,zwei},{}: conversion "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for conversion,{addr_nsp,zwei},{integer}: conversion "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for conversion,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for conversion,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default value,{eins},{}: column name must be qualified
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default value,{eins},{integer}: column name must be qualified
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default value,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default value,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default value,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default value,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator,{eins},{}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator,{eins},{integer}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator,{addr_nsp,zwei},{}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator,{addr_nsp,zwei},{integer}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator,{eins,zwei,drei},{}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator,{eins,zwei,drei},{integer}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator class,{eins},{}: name list length must be at least 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator class,{eins},{integer}: name list length must be at least 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator class,{addr_nsp,zwei},{}: access method "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator class,{addr_nsp,zwei},{integer}: access method "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator class,{eins,zwei,drei},{}: access method "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator class,{eins,zwei,drei},{integer}: access method "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator family,{eins},{}: name list length must be at least 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator family,{eins},{integer}: name list length must be at least 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator family,{addr_nsp,zwei},{}: access method "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator family,{addr_nsp,zwei},{integer}: access method "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator family,{eins,zwei,drei},{}: access method "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator family,{eins,zwei,drei},{integer}: access method "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for rule,{eins},{}: rule "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for rule,{eins},{integer}: rule "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for rule,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for rule,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for rule,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for rule,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for trigger,{eins},{}: must specify relation and object name
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for trigger,{eins},{integer}: must specify relation and object name
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for trigger,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for trigger,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for trigger,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for trigger,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search parser,{eins},{}: text search parser "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search parser,{eins},{integer}: text search parser "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search parser,{addr_nsp,zwei},{}: text search parser "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search parser,{addr_nsp,zwei},{integer}: text search parser "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search parser,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search parser,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search dictionary,{eins},{}: text search dictionary "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search dictionary,{eins},{integer}: text search dictionary "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search dictionary,{addr_nsp,zwei},{}: text search dictionary "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search dictionary,{addr_nsp,zwei},{integer}: text search dictionary "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search dictionary,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search dictionary,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search template,{eins},{}: text search template "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search template,{eins},{integer}: text search template "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search template,{addr_nsp,zwei},{}: text search template "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search template,{addr_nsp,zwei},{integer}: text search template "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search template,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search template,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search configuration,{eins},{}: text search configuration "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search configuration,{eins},{integer}: text search configuration "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search configuration,{addr_nsp,zwei},{}: text search configuration "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search configuration,{addr_nsp,zwei},{integer}: text search configuration "addr_nsp.zwei" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search configuration,{eins,zwei,drei},{}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for text search configuration,{eins,zwei,drei},{integer}: cross-database references are not implemented: eins.zwei.drei
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for policy,{eins},{}: must specify relation and object name
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for policy,{eins},{integer}: must specify relation and object name
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for policy,{addr_nsp,zwei},{}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for policy,{addr_nsp,zwei},{integer}: relation "addr_nsp" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for policy,{eins,zwei,drei},{}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for policy,{eins,zwei,drei},{integer}: schema "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for user mapping,{eins},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for user mapping,{eins},{integer}: user mapping for user "eins" on server "integer" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for user mapping,{addr_nsp,zwei},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for user mapping,{addr_nsp,zwei},{integer}: user mapping for user "addr_nsp" on server "integer" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for user mapping,{eins,zwei,drei},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for user mapping,{eins,zwei,drei},{integer}: user mapping for user "eins" on server "integer" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default acl,{eins},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default acl,{eins},{integer}: unrecognized default ACL object type i
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default acl,{addr_nsp,zwei},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default acl,{addr_nsp,zwei},{integer}: unrecognized default ACL object type i
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default acl,{eins,zwei,drei},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for default acl,{eins,zwei,drei},{integer}: unrecognized default ACL object type i
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for transform,{eins},{}: argument list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for transform,{eins},{integer}: type "eins" does not exist
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for transform,{addr_nsp,zwei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for transform,{addr_nsp,zwei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for transform,{eins,zwei,drei},{}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for transform,{eins,zwei,drei},{integer}: name list length must be exactly 1
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator of access method,{eins},{}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator of access method,{eins},{integer}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator of access method,{addr_nsp,zwei},{}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator of access method,{addr_nsp,zwei},{integer}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator of access method,{eins,zwei,drei},{}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for operator of access method,{eins,zwei,drei},{integer}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function of access method,{eins},{}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function of access method,{eins},{integer}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function of access method,{addr_nsp,zwei},{}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function of access method,{addr_nsp,zwei},{integer}: name list length must be at least 3
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function of access method,{eins,zwei,drei},{}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
WARNING:  01000: error for function of access method,{eins,zwei,drei},{integer}: argument list length must be exactly 2
LOCATION:  exec_stmt_raise, pl_exec.c:3216
STATEMENT:  DO $$  DECLARE  objtype text;  names text[];  args text[];  BEGIN  FOR objtype IN VALUES  ('table'), ('index'), ('sequence'), ('view'),  ('materialized view'), ('foreign table'),  ('table column'), ('foreign table column'),  ('aggregate'), ('function'), ('type'), ('cast'),  ('table constraint'), ('domain constraint'), ('conversion'), ('default value'),  ('operator'), ('operator class'), ('operator family'), ('rule'), ('trigger'),  ('text search parser'), ('text search dictionary'),  ('text search template'), ('text search configuration'),  ('policy'), ('user mapping'), ('default acl'), ('transform'),  ('operator of access method'), ('function of access method')  LOOP  FOR names IN VALUES ('{eins}'), ('{addr_nsp, zwei}'), ('{eins, zwei, drei}')  LOOP  FOR args IN VALUES ('{}'), ('{integer}')  LOOP  BEGIN  PERFORM pg_get_object_address(objtype, names, args);  EXCEPTION WHEN OTHERS THEN  RAISE WARNING 'error for %,%,%: %', objtype, names, args, sqlerrm;  END;  END LOOP;  END LOOP;  END LOOP;  END;  $$;
